{"ast":null,"code":"var _jsxFileName = \"/Users/moonbox/Documents/Documents - Natalie\\u2019s MacBook Pro/capstone/pantrypal/src/Components/CurrentUser/UserProfile/Tastes.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport { shadows } from '@material-ui/system';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getThemeProps, withStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { useInput } from '../../../Hooks/inputHook';\nimport Food from '../../Food'; //display information from user sign up \n//name\n//email\n//password \n//birthday\n//option to update information - button for update and save those updates \n//setting for others to view -toggles \n//likes  - favorites \n//dislikes \n//diets \n//allergies \n//SAVE BUTTON TO COMMIT ANY CHANGES\n//need a view mode ~ see pal profile \n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    padding: 10,\n    display: 'none',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  subtitle: {\n    padding: 20\n  },\n  fields: {\n    margin: theme.spacing(4),\n    width: '90%'\n  },\n  fieldLabel: {\n    padding: theme.spacing(1)\n  },\n  form: {\n    width: '100vw',\n    // Fix IE 11 issue.\n    paddingLeft: '5%',\n    margin: theme.spacing(1) // marginBottom: theme.spacing(1),\n\n  },\n  tastes: {\n    width: '80%',\n    // Fix IE 11 issue.\n    paddingLeft: '5%',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    borderRadius: 3\n  },\n  chipPaper: {\n    padding: theme.spacing(1)\n  },\n  chipItems: {}\n}));\n\nconst Tastes = props => {\n  const classes = useStyles(); //need to populate originally from the sign in info of the user\n\n  const handleRemoveLike = () => {//would be better to have an on handle change? \n  };\n\n  const handleAddLike = () => {//would be better to have an on handle change? \n  };\n\n  const handleRemoveDislike = () => {//would be better to have an on handle change? \n  };\n\n  const handleAddDislike = () => {//would be better to have an on handle change? \n  };\n\n  const handleRemoveAllergy = () => {//would be better to have an on handle change? \n  };\n\n  const handleAddAllergy = () => {//would be better to have an on handle change? \n  };\n\n  const handleRemoveDiet = () => {//would be better to have an on handle change? \n  };\n\n  const handleAddDiet = () => {//would be better to have an on handle change? \n  };\n\n  let mock = ['apples', 'bananas', 'rasberries', 'potatos'];\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: classes.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"Taste Preferences\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    component: \"main\",\n    direction: \"row\",\n    alignItems: \"center\",\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    sm: 8,\n    md: 2,\n    component: Card,\n    elevation: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, \"Likes\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.chipPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, mock.map((item, idx) => {\n    return /*#__PURE__*/React.createElement(Chip, {\n      className: classes.chipItems,\n      key: idx,\n      label: `${item}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 20\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Dislikes\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.chipPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, mock.map((item, idx) => {\n    return /*#__PURE__*/React.createElement(Chip, {\n      className: classes.chipItems,\n      key: idx,\n      label: `${item}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 22\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Diets\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.chipPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, mock.map((item, idx) => {\n    return /*#__PURE__*/React.createElement(Chip, {\n      className: classes.chipItems,\n      key: idx,\n      label: `${item}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 22\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \"Allergies\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.chipPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, mock.map((item, idx) => {\n    return /*#__PURE__*/React.createElement(Chip, {\n      className: classes.chipItems,\n      key: idx,\n      label: `${item}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 22\n      }\n    });\n  }))))));\n};\n\nexport default withStyles(useStyles)(Tastes);","map":{"version":3,"sources":["/Users/moonbox/Documents/Documents - Natalieâ€™s MacBook Pro/capstone/pantrypal/src/Components/CurrentUser/UserProfile/Tastes.js"],"names":["React","useState","Button","Card","shadows","Paper","Container","Chip","Typography","makeStyles","getThemeProps","withStyles","Grid","CssBaseline","useInput","Food","useStyles","theme","title","padding","display","justifyContent","breakpoints","up","subtitle","fields","margin","spacing","width","fieldLabel","form","paddingLeft","tastes","marginTop","marginBottom","borderRadius","chipPaper","chipItems","Tastes","props","classes","handleRemoveLike","handleAddLike","handleRemoveDislike","handleAddDislike","handleRemoveAllergy","handleAddAllergy","handleRemoveDiet","handleAddDiet","mock","map","item","idx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState} from 'react'\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card'\nimport { shadows } from '@material-ui/system';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getThemeProps, withStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {useInput} from '../../../Hooks/inputHook'\nimport Food from '../../Food';\n\n//display information from user sign up \n  //name\n  //email\n  //password \n  //birthday\n//option to update information - button for update and save those updates \n  //setting for others to view -toggles \n\n//likes  - favorites \n//dislikes \n//diets \n//allergies \n\n//SAVE BUTTON TO COMMIT ANY CHANGES\n\n//need a view mode ~ see pal profile \n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    padding: 10,\n    display: 'none',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  subtitle: {\n    padding: 20,\n  },\n  fields: {\n    margin: theme.spacing(4),\n    width: '90%',\n\n    },\n    fieldLabel: {\n      padding: theme.spacing(1),\n    },\n  form: {\n    width: '100vw', // Fix IE 11 issue.\n    paddingLeft: '5%',\n    margin: theme.spacing(1),\n    // marginBottom: theme.spacing(1),\n  },\n  tastes: {\n    width: '80%', // Fix IE 11 issue.\n    paddingLeft: '5%',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    borderRadius: 3\n  },\n  chipPaper: {\n    padding: theme.spacing(1),\n    },\n  chipItems: {\n\n  }\n}));\n\nconst Tastes = (props) => {\n  const classes = useStyles();\n  //need to populate originally from the sign in info of the user\n\n  const handleRemoveLike = () => {\n    //would be better to have an on handle change? \n  }\n\n  const handleAddLike = () => {\n    //would be better to have an on handle change? \n  }\n\n  const handleRemoveDislike = () => {\n    //would be better to have an on handle change? \n  }\n\n  const handleAddDislike = () => {\n    //would be better to have an on handle change? \n  }\n\n  const handleRemoveAllergy = () => {\n    //would be better to have an on handle change? \n  }\n\n  const handleAddAllergy = () => {\n    //would be better to have an on handle change? \n  }\n  const handleRemoveDiet = () => {\n    //would be better to have an on handle change? \n  }\n\n  const handleAddDiet = () => {\n    //would be better to have an on handle change? \n  }\n\n  let mock = ['apples', 'bananas', 'rasberries', 'potatos']\n\n  return (\n      <Card>\n      <Typography\n        component=\"h1\" \n        variant=\"h5\"\n        className={classes.subtitle} \n        >Taste Preferences</Typography>\n        {/* Will need a way to add to each of these fields and remove.  */} \n        <Grid\n          container\n          component=\"main\" \n          direction=\"row\"\n          alignItems=\"center\"\n          className={classes.form}\n        >\n        <CssBaseline/>\n        <Grid\n        item\n        xs={8} sm={8} md={2} component={Card} elevation={4}\n        >\n        <div>\n        <Typography\n          className={classes.subtitle} \n          >Likes</Typography>\n          <Button>Add</Button>\n          <Paper className={classes.chipPaper}>\n          {mock.map((item, idx) => {\n            return <Chip className={classes.chipItems} key={idx} label={`${item}`}/>\n          })}\n          </Paper>\n        </div>\n        <div>\n          <Typography\n          className={classes.subtitle} \n          >Dislikes</Typography>\n            <Button>Add</Button>\n            <Paper className={classes.chipPaper}>\n            {mock.map((item, idx) => {\n              return <Chip className={classes.chipItems} key={idx} label={`${item}`}/>\n            })}\n            </Paper>\n        </div>\n        <div>\n          <Typography\n          className={classes.subtitle} \n          >Diets</Typography>\n            <Button>Add</Button>\n            <Paper className={classes.chipPaper}>\n            {mock.map((item, idx) => {\n              return <Chip className={classes.chipItems} key={idx} label={`${item}`}/>\n            })}\n            </Paper>\n       </div>\n       <div>\n          <Typography\n          className={classes.subtitle} \n          >Allergies</Typography>\n            <Button>Add</Button>\n            <Paper className={classes.chipPaper}>\n            {mock.map((item, idx) => {\n              return <Chip className={classes.chipItems} key={idx} label={`${item}`}/>\n            })}\n            </Paper>\n        </div>\n        </Grid>\n      </Grid>\n    </Card>\n  ) \n}\n\nexport default withStyles(useStyles)(Tastes)"]},"metadata":{},"sourceType":"module"}