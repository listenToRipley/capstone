{"ast":null,"code":"var _jsxFileName = \"/Users/moonbox/Documents/Documents - Natalie\\u2019s MacBook Pro/capstone/pantrypal/src/Components/CurrentUser/Inbox/Inbox.js\";\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport ShopReq from './ShopReq';\nimport PalReq from './PalReq'; //needs to get added to NavBar or should this be notification in the top bar, bell Icon?\n//merge request\n//accept\n//decline \n//pal requests\n//accept request\n//decline requests\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '95%',\n    margin: theme.spacing(4)\n  },\n  paper: {\n    width: '90%',\n    marginLeft: theme.spacing(4),\n    marginBottom: theme.spacing(2)\n  },\n  title: {\n    padding: 5,\n    display: 'none',\n    justifyContent: 'center',\n    [theme.breakpoints.up('xs')]: {\n      display: 'block'\n    }\n  },\n  subtitle: {\n    padding: 20\n  },\n  inboxReq: {\n    marginLeft: theme.spacing(4),\n    alignItems: \"space-evenly\",\n    width: '100%'\n  },\n  reqBody: {\n    width: '100%',\n    marginBottom: theme.spacing(3),\n    padding: '25px'\n  },\n  table: {\n    minWidth: 650\n  }\n}));\n\nconst createPalData = (reqId, sender, pal, action) => {\n  return {\n    reqId,\n    sender,\n    pal,\n    action\n  };\n}; //do we want to include list owner on this? \n\n\nconst createShopData = (reqId, sender, quantity, items, unit, actions) => {\n  return {\n    reqId,\n    sender,\n    quantity,\n    items,\n    unit,\n    actions\n  };\n};\n\nconst createMergeData = (reqId, sender, pal, action) => {\n  return {\n    reqId,\n    sender,\n    pal,\n    action\n  };\n};\n\nconst mockPal = [createPalData(1, 'cheese', 'job', 'action'), createPalData(2, 'job', 'cheese', 'action'), createPalData(3, 'cheese', 'work', 'action'), createPalData(4, 'cheese', 'honey', 'action'), createPalData(5, 'cheese', 'hobby', 'action')];\nconst mockFood = [createShopData(1, \"sender\", 305, 'Cupcake', 3.7), createShopData(2, \"sender\", 452, 'Donut', 3.7), createShopData(3, \"sender\", 305, 'Eclair', 3.7), createShopData(4, \"sender\", 5221, 'Frozen yoghurt', 159), createShopData(5, \"sender\", 5, 'Gingerbread', 356), createShopData(6, \"sender\", 1, 'Honeycomb', 408), createShopData(7, \"sender\", 32, 'Ice cream sandwich', 237), createShopData(8, \"sender\", 66, 'Jelly Bean', 375), createShopData(9, \"sender\", 23, 'KitKat', 518), createShopData(10, \"sender\", 6565, 'Lollipop', 392), createShopData(11, \"sender\", 13.2, 'Marshmallow', 318), createShopData(12, \"sender\", 33, 'Nougat', 360), createShopData(13, \"sender\", 6666, 'Oreo', 437)];\nconst mockMerge = [createPalData(5, 'cheese', 'job', 'action'), createPalData(6, 'job', 'cheese', 'action'), createPalData(7, 'cheese', 'work', 'action'), createPalData(8, 'cheese', 'honey', 'action'), createPalData(9, 'cheese', 'hobby', 'action')];\n\nconst Inbox = props => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    classes: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h4\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, \"Requests\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    component: \"main\",\n    direction: \"column\",\n    className: classes.inboxReq,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    component: Card,\n    elevation: 2,\n    className: classes.reqBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h6\",\n    className: classes.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Pal\"), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    size: \"small\",\n    \"aria-lable\": \"pal request table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Req Id \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Sender \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"Pal \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \"Actions \"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, mockPal.map(data => /*#__PURE__*/React.createElement(TableRow, {\n    key: data.reqId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, data.reqId), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }\n  }, data.sender), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, data.pal), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }, data.actions))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    component: Card,\n    elevation: 4,\n    className: classes.reqBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h6\",\n    className: classes.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"Shopping\"), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    size: \"small\",\n    \"aria-lable\": \"pal request table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, \"Req Id \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, \"Sender\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, \"Quantity \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, \"Item \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, \"Unit \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, \"Actions \"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, mockFood.map(data => /*#__PURE__*/React.createElement(TableRow, {\n    key: data.reqId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, data.reqId), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, data.sender), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, data.quantity), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }, data.items), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, data.unit), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ShopReq, {\n    reqId: data.reqId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 45\n    }\n  })))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    component: Card,\n    elevation: 4,\n    className: classes.reqBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h6\",\n    className: classes.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, \"Merge\"), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    size: \"small\",\n    \"aria-lable\": \"pal request table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, \"Req Id \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, \"Sender \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"Pal \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, \"Actions \"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, mockMerge.map(data => /*#__PURE__*/React.createElement(TableRow, {\n    key: data.reqId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 19\n    }\n  }, data.reqId), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, data.sender), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }, data.pal), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 19\n    }\n  }, data.actions))))))))));\n};\n\nexport default withStyles(useStyles)(Inbox);","map":{"version":3,"sources":["/Users/moonbox/Documents/Documents - Natalie’s MacBook Pro/capstone/pantrypal/src/Components/CurrentUser/Inbox/Inbox.js"],"names":["React","makeStyles","withStyles","Paper","Typography","Card","Grid","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","ShopReq","PalReq","useStyles","theme","root","width","margin","spacing","paper","marginLeft","marginBottom","title","padding","display","justifyContent","breakpoints","up","subtitle","inboxReq","alignItems","reqBody","table","minWidth","createPalData","reqId","sender","pal","action","createShopData","quantity","items","unit","actions","createMergeData","mockPal","mockFood","mockMerge","Inbox","props","classes","map","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport ShopReq from './ShopReq';\nimport PalReq from './PalReq'\n\n//needs to get added to NavBar or should this be notification in the top bar, bell Icon?\n\n    //merge request\n    //accept\n    //decline \n\n    //pal requests\n      //accept request\n      //decline requests\n\n      const useStyles = makeStyles((theme) => ({\n        root: {\n          width: '95%',\n          margin: theme.spacing(4),\n        },\n        paper: {\n          width: '90%',\n          marginLeft: theme.spacing(4),\n          marginBottom: theme.spacing(2),\n        },\n        title: {\n          padding: 5,\n          display: 'none',\n          justifyContent: 'center',\n          [theme.breakpoints.up('xs')]: {\n            display: 'block',\n          },\n        },\n        subtitle: {\n          padding: 20,\n        },\n        inboxReq: {\n          marginLeft: theme.spacing(4),\n          alignItems:\"space-evenly\",\n          width: '100%'\n        },\n        reqBody: {\n          width:'100%',\n          marginBottom: theme.spacing(3),\n          padding:'25px'\n        },\n        table: {\n          minWidth: 650,\n        },\n      }));\n  \n\n    const createPalData = (reqId, sender, pal, action) => {\n      return {reqId, sender, pal, action}\n    }\n\n\n    //do we want to include list owner on this? \n    const createShopData = (reqId, sender, quantity, items, unit, actions) => {\n      return { reqId, sender ,quantity, items, unit, actions};\n    }\n\n    const createMergeData = (reqId, sender, pal, action) => {\n      return {reqId, sender, pal, action}\n    }\n\n    const mockPal = [\n      createPalData(1, 'cheese', 'job', 'action'),\n      createPalData(2, 'job', 'cheese', 'action'),\n      createPalData(3, 'cheese', 'work', 'action'),\n      createPalData(4, 'cheese', 'honey', 'action'),\n      createPalData(5, 'cheese', 'hobby', 'action'),\n    ]\n\n    const mockFood = [\n      createShopData(1 , \"sender\",305, 'Cupcake', 3.7),\n      createShopData(2 , \"sender\",452, 'Donut', 3.7),\n      createShopData(3 , \"sender\",305, 'Eclair', 3.7), \n      createShopData(4 , \"sender\",5221, 'Frozen yoghurt', 159),  \n      createShopData(5 , \"sender\",5, 'Gingerbread', 356),  \n      createShopData(6 , \"sender\",1, 'Honeycomb', 408), \n      createShopData(7 , \"sender\",32, 'Ice cream sandwich', 237), \n      createShopData(8 , \"sender\",66, 'Jelly Bean', 375), \n      createShopData(9 , \"sender\",23, 'KitKat', 518),  \n      createShopData(10, \"sender\" ,6565, 'Lollipop', 392),\n      createShopData(11, \"sender\" ,13.2, 'Marshmallow', 318),\n      createShopData(12, \"sender\" ,33, 'Nougat', 360),\n      createShopData(13, \"sender\" ,6666, 'Oreo', 437)\n    ];\n    \n\n\n    const mockMerge = [\n      createPalData(5, 'cheese', 'job', 'action'),\n      createPalData(6, 'job', 'cheese', 'action'),\n      createPalData(7, 'cheese', 'work', 'action'),\n      createPalData(8, 'cheese', 'honey', 'action'),\n      createPalData(9, 'cheese', 'hobby', 'action'),\n    ]\n\nconst Inbox = (props) => {\n  const classes = useStyles();\n\n  return (\n  <div className={classes.root}>\n\n    <Paper classes={classes.paper}>\n    <Typography \n        component=\"h1\"\n        variant=\"h4\"\n        className={classes.title}\n        >Requests</Typography>\n      <Grid\n      container\n      component=\"main\"\n      direction=\"column\"\n      className={classes.inboxReq}\n      >\n        <Grid\n        item\n        xs={11}\n        component={Card}\n        elevation={2}\n        className={classes.reqBody}>\n          <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          className={classes.subtitle}\n          >Pal</Typography>\n          <TableContainer>\n            <Table\n            className={classes.table}\n            size=\"small\"\n            aria-lable=\"pal request table\"\n            >\n            <TableHead>\n              <TableRow>\n                <TableCell>Req Id </TableCell>\n                <TableCell>Sender </TableCell>\n                <TableCell>Pal </TableCell>\n                <TableCell>Actions </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {mockPal.map((data) => (\n                <TableRow key={data.reqId}>\n                  <TableCell component=\"th\" scope=\"data\">\n                    {data.reqId}\n                  </TableCell>\n                  <TableCell align=\"left\" >{data.sender}</TableCell>\n                  <TableCell align=\"left\" >{data.pal}</TableCell>\n                  <TableCell align=\"right\" >{data.actions}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid\n        item\n        xs={11}\n        component={Card}\n        elevation={4}\n        className={classes.reqBody}>\n          <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          className={classes.subtitle}\n          >Shopping</Typography>\n                    <TableContainer>\n            <Table\n            className={classes.table}\n            size=\"small\"\n            aria-lable=\"pal request table\"\n            >\n            <TableHead>\n              <TableRow>\n                <TableCell>Req Id </TableCell>\n                <TableCell>Sender</TableCell>\n                <TableCell>Quantity </TableCell>\n                <TableCell>Item </TableCell>\n                <TableCell>Unit </TableCell>\n                <TableCell>Actions </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {mockFood.map((data) => (\n                <TableRow key={data.reqId}>\n                  <TableCell component=\"th\" scope=\"data\">\n                    {data.reqId}\n                  </TableCell>\n                  <TableCell align=\"left\" >{data.sender}</TableCell>\n                  <TableCell align=\"left\" >{data.quantity}</TableCell>\n                  <TableCell align=\"left\" >{data.items}</TableCell>\n                  <TableCell align=\"left\" >{data.unit}</TableCell>\n                  <TableCell align=\"right\" ><ShopReq reqId={data.reqId}/></TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid\n        item\n        xs={11}\n        component={Card}\n        elevation={4}\n        className={classes.reqBody}>\n          <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          className={classes.subtitle}\n          >Merge</Typography>\n          <TableContainer>\n            <Table\n            className={classes.table}\n            size=\"small\"\n            aria-lable=\"pal request table\"\n            >\n            <TableHead>\n              <TableRow>\n                <TableCell>Req Id </TableCell>\n                <TableCell>Sender </TableCell>\n                <TableCell>Pal </TableCell>\n                <TableCell>Actions </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {mockMerge.map((data) => (\n                <TableRow key={data.reqId}>\n                  <TableCell component=\"th\" scope=\"data\">\n                    {data.reqId}\n                  </TableCell>\n                  <TableCell align=\"left\" >{data.sender}</TableCell>\n                  <TableCell align=\"left\" >{data.pal}</TableCell>\n                  <TableCell align=\"right\" >{data.actions}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        </Grid>\n      </Paper>\n    \n  </div>\n  )\n\n}\n\nexport default withStyles(useStyles)(Inbox)"]},"metadata":{},"sourceType":"module"}