{"ast":null,"code":"var _jsxFileName = \"/Users/moonbox/Documents/capstone/pantrypal/src/Components/PalLists/PalsList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport PalListToolBar from './PalListToolBar';\nimport PalActions from './PalActions';\nimport { withStyles } from '@material-ui/styles'; //!!!IMPORTANT NOTE ~ there will be two versions of the pal list. \n//there is the current user :\n//needs to include \n//current pals of this user\n//search users\n//the pals view :\n//current pals of this user\n//link to individual users' profile \n//need to add search. \n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 10,\n    padding: 20,\n    width: '99%',\n    justifyContent: 'center'\n  },\n  paper: {\n    width: '80%',\n    marginTop: theme.spacing(6),\n    marginLeft: theme.spacing(10),\n    marginBottom: theme.spacing(2),\n    justifyContent: 'center'\n  },\n  table: {\n    width: '100%',\n    minWidth: 450\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\n\nconst createData = (pal, username, palActions) => {\n  return {\n    pal,\n    username,\n    palActions\n  };\n}; //there is an issue with the drawer and page content. \n//need to add something to show role on table, are we going to need to write a query for that? \n//this will need to be replaced by content from the server \n\n\nconst rows = [createData('Cupcake', 'Cupcake'), createData('Donut', 'Donut'), createData('Eclair', 'Eclair'), createData('Frozen yoghurt', 'Frozen yoghurt'), createData('Gingerbread', 'Gingerbread')]; //sorting functions  DON'T TOUCH \n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}; //sorting functions  DON'T TOUCH \n\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}; //sorting functions  DON'T TOUCH \n\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst headCells = [{\n  id: 'pal',\n  numeric: false,\n  label: 'Pals'\n}, {\n  id: 'username',\n  numeric: false,\n  label: 'Username'\n}, {\n  id: 'palActions',\n  numeric: false,\n  label: 'Pal Actions'\n}];\n\nconst PalsHead = props => {\n  const {\n    classes,\n    order,\n    orderBy,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 1\n    }\n  }, headCells.map(headCell => /*#__PURE__*/React.createElement(TableCell, {\n    key: headCell.id,\n    align: \"center\",\n    padding: \"5\"\n    /* We don't really need sorting on update and delete, we should change that  */\n    ,\n    sortDirection: orderBy === headCell.id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : 'asc',\n    onClick: createSortHandler(headCell.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, headCell.label, orderBy === headCell.id ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null))));\n};\n\nPalsHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst PalsList = () => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('pals');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(PalListToolBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"your pal list\",\n    \"aria-label\": \"pal list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PalsHead, {\n    classes: classes,\n    order: order,\n    orderBy: orderBy,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      onClick: event => handleClick(event, row.name),\n      tabIndex: -1,\n      key: row.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 19\n      }\n    }, row.pal), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }\n    }, row.username), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 19\n      }\n    }, row.palActions, /*#__PURE__*/React.createElement(PalActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    })));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default withStyles(useStyles)(PalsList);","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/src/Components/PalLists/PalsList.js"],"names":["React","PropTypes","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Paper","PalListToolBar","PalActions","withStyles","useStyles","theme","root","margin","padding","width","justifyContent","paper","marginTop","spacing","marginLeft","marginBottom","table","minWidth","visuallyHidden","border","clip","height","overflow","position","top","createData","pal","username","palActions","rows","getComparator","order","orderBy","a","b","descendingComparator","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","label","PalsHead","props","classes","rowCount","onRequestSort","createSortHandler","property","event","headCell","propTypes","object","isRequired","func","oneOf","string","number","PalsList","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","handleRequestSort","isAsc","handleClick","name","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","emptyRows","Math","min","row"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport PalListToolBar from './PalListToolBar'\nimport PalActions from './PalActions'\nimport { withStyles } from '@material-ui/styles';\n\n\n//!!!IMPORTANT NOTE ~ there will be two versions of the pal list. \n  //there is the current user :\n\n//needs to include \n  //current pals of this user\n  //search users\n\n  //the pals view :\n  //current pals of this user\n  //link to individual users' profile \n\n\n  //need to add search. \n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 10,\n    padding: 20,\n    width: '99%',\n    justifyContent: 'center'\n  },\n  paper: {\n    width: '80%',\n    marginTop: theme.spacing(6),\n    marginLeft: theme.spacing(10),\n    marginBottom: theme.spacing(2),\n    justifyContent: 'center'\n  },\n  table: {\n    width: '100%',\n    minWidth: 450,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  }\n}));\n\nconst createData = (pal, username, palActions) => {\nreturn { pal, username, palActions};\n}\n\n//there is an issue with the drawer and page content. \n\n//need to add something to show role on table, are we going to need to write a query for that? \n\n//this will need to be replaced by content from the server \nconst rows = [\ncreateData( 'Cupcake', 'Cupcake'),\ncreateData( 'Donut','Donut',),\ncreateData( 'Eclair','Eclair',), \ncreateData( 'Frozen yoghurt','Frozen yoghurt'),  \ncreateData( 'Gingerbread','Gingerbread')\n];\n\n//sorting functions  DON'T TOUCH \nconst getComparator =(order, orderBy) => {\nreturn order === 'desc'\n? (a, b) => descendingComparator(a, b, orderBy)\n: (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n//sorting functions  DON'T TOUCH \nconst stableSort = (array, comparator) =>{\nconst stabilizedThis = array.map((el, index) => [el, index]);\nstabilizedThis.sort((a, b) => {\nconst order = comparator(a[0], b[0]);\nif (order !== 0) return order;\nreturn a[1] - b[1];\n});\nreturn stabilizedThis.map((el) => el[0]);\n}\n\n//sorting functions  DON'T TOUCH \nconst descendingComparator = (a, b, orderBy) => {\nif (b[orderBy] < a[orderBy]) {\nreturn -1;\n}\nif (b[orderBy] > a[orderBy]) {\nreturn 1;\n}\nreturn 0;\n}\n\nconst headCells = [\n{ id: 'pal', numeric: false, label: 'Pals' },\n{ id: 'username', numeric: false,  label: 'Username' },\n{ id: 'palActions', numeric: false, label: 'Pal Actions' },\n];\n\nconst PalsHead = (props) =>  {\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\n\n  const createSortHandler = (property) => (event) => {\nonRequestSort(event, property);\n};\n\nreturn (\n<TableHead>\n\n    {headCells.map((headCell) => (\n      <TableCell\n        key={headCell.id}\n        align='center'\n        padding='5'\n        /* We don't really need sorting on update and delete, we should change that  */\n        sortDirection={orderBy === headCell.id ? order : false}\n      >\n        <TableSortLabel\n          active={orderBy === headCell.id}\n          direction={orderBy === headCell.id ? order : 'asc'}\n          onClick={createSortHandler(headCell.id)}\n        >\n          {headCell.label}\n          {orderBy === headCell.id ? (\n            <span className={classes.visuallyHidden}>\n              {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n            </span>\n          ) : null}\n        </TableSortLabel>\n      </TableCell>\n    ))}\n\n</TableHead>\n);\n}\n\nPalsHead.propTypes = {\nclasses: PropTypes.object.isRequired,\nonRequestSort: PropTypes.func.isRequired,\norder: PropTypes.oneOf(['asc', 'desc']).isRequired,\norderBy: PropTypes.string.isRequired,\nrowCount: PropTypes.number.isRequired,\n};\n \nconst PalsList = () =>  {\nconst classes = useStyles();\nconst [order, setOrder] = React.useState('asc');\nconst [orderBy, setOrderBy] = React.useState('pals');\nconst [selected, setSelected] = React.useState([]);\nconst [page, setPage] = React.useState(0);\nconst [rowsPerPage, setRowsPerPage] = React.useState(5);\n\nconst handleRequestSort = (event, property) => {\nconst isAsc = orderBy === property && order === 'asc';\nsetOrder(isAsc ? 'desc' : 'asc');\nsetOrderBy(property);\n};\n\nconst handleClick = (event, name) => {\nconst selectedIndex = selected.indexOf(name);\nlet newSelected = [];\n\nif (selectedIndex === -1) {\n  newSelected = newSelected.concat(selected, name);\n} else if (selectedIndex === 0) {\n  newSelected = newSelected.concat(selected.slice(1));\n} else if (selectedIndex === selected.length - 1) {\n  newSelected = newSelected.concat(selected.slice(0, -1));\n} else if (selectedIndex > 0) {\n  newSelected = newSelected.concat(\n    selected.slice(0, selectedIndex),\n    selected.slice(selectedIndex + 1),\n  );\n}\n\nsetSelected(newSelected);\n};\n\nconst handleChangePage = (event, newPage) => {\nsetPage(newPage);\n};\n\nconst handleChangeRowsPerPage = (event) => {\nsetRowsPerPage(parseInt(event.target.value, 10));\nsetPage(0);\n};\n\n\nconst emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\nreturn (\n<div className={classes.root}>\n<PalListToolBar/>    \n{/* move to the other side */}\n  <Paper className={classes.paper}>\n    <TableContainer>\n      <Table\n        className={classes.table}\n        aria-labelledby=\"your pal list\"\n        aria-label=\"pal list\"\n      >\n        <PalsHead\n          classes={classes}\n\n          order={order}\n          orderBy={orderBy}\n          onRequestSort={handleRequestSort}\n          rowCount={rows.length}\n        />\n        <TableBody>\n          {stableSort(rows, getComparator(order, orderBy))\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((row, index) => {\n              return (\n                <TableRow\n                  hover\n                  onClick={(event) => handleClick(event, row.name)}\n                  tabIndex={-1}\n                  key={row.name}\n\n                >\n  \n                  <TableCell align=\"center\">{row.pal}</TableCell>\n                  <TableCell align=\"center\">{row.username}</TableCell>\n                  <TableCell align=\"center\">{row.palActions}\n                    <PalActions/>\n                    </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    <TablePagination\n      rowsPerPageOptions={[5, 10, 25]}\n      component=\"div\"\n      count={rows.length}\n      rowsPerPage={rowsPerPage}\n      page={page}\n      onChangePage={handleChangePage}\n      onChangeRowsPerPage={handleChangeRowsPerPage}\n    />\n  </Paper>\n</div>\n);\n}\n\nexport default withStyles(useStyles)(PalsList)"]},"metadata":{},"sourceType":"module"}