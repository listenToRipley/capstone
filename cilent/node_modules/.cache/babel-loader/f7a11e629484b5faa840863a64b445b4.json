{"ast":null,"code":"var _jsxFileName = \"/Users/moonbox/Documents/Documents - Natalie\\u2019s MacBook Pro/capstone/pantrypal/src/Hooks/PopUp.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst PopUp = props => {\n  let {\n    title,\n    children,\n    openPopUp,\n    setOpenPopUp\n  } = props;\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpenPopUp(true);\n  };\n\n  const handleClose = () => {\n    setOpenPopUp(false);\n  };\n\n  if (open) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Open responsive dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n      fullScreen: fullScreen,\n      openPopUp: openPopUp,\n      onClose: handleClose,\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"responsive-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, \"Use Google's location service?\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      autoFocus: true,\n      onClick: handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Disagree\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Agree\"))));\n  }\n};\n\nexport default PopUp;","map":{"version":3,"sources":["/Users/moonbox/Documents/Documents - Natalieâ€™s MacBook Pro/capstone/pantrypal/src/Hooks/PopUp.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","PopUp","props","title","children","openPopUp","setOpenPopUp","theme","fullScreen","breakpoints","down","handleClickOpen","handleClose","open"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,QAAT,QAAyB,0BAAzB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAEvB,MAAI;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA;AAA7B,MAA6CJ,KAAjD;AACA,QAAMK,KAAK,GAAGP,QAAQ,EAAtB;AAEA,QAAMQ,UAAU,GAAGT,aAAa,CAACQ,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAhC;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5BL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMM,WAAW,GAAG,MAAM;AACxBN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAID,MAAIO,IAAJ,EAAU;AACR,wBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC,SAAjC;AAA2C,MAAA,OAAO,EAAEF,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAIE,oBAAC,MAAD;AACE,MAAA,UAAU,EAAEH,UADd;AAEE,MAAA,SAAS,EAAEH,SAFb;AAGE,MAAA,OAAO,EAAEO,WAHX;AAIE,yBAAgB,yBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C,gCAA3C,CANF,eAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uIADF,CAPF,eAaE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,MAAjB;AAAkB,MAAA,OAAO,EAAEA,WAA3B;AAAwC,MAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEA,WAAjB;AAA8B,MAAA,KAAK,EAAC,SAApC;AAA8C,MAAA,SAAS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CAbF,CAJF,CADH;AA6BF;AAAC,CA7CF;;AA+CA,eAAeX,KAAf","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst PopUp = (props) => {\n\n  let {title ,children, openPopUp, setOpenPopUp} = props;\n  const theme = useTheme();\n  \n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpenPopUp(true);\n  };\n\n  const handleClose = () => {\n    setOpenPopUp(false);\n  };\n\n if (open) {  \n   return (\n      <div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          Open responsive dialog\n        </Button>\n        <Dialog\n          fullScreen={fullScreen}\n          openPopUp={openPopUp}\n          onClose={handleClose}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Let Google help apps determine location. This means sending anonymous location data to\n              Google, even when no apps are running.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleClose} color=\"primary\">\n              Disagree\n            </Button>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Agree\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n  )\n}}\n\nexport default PopUp"]},"metadata":{},"sourceType":"module"}