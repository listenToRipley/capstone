{"ast":null,"code":"var _jsxFileName = \"/Users/moonbox/Documents/Documents - Natalie\\u2019s MacBook Pro/capstone/pantrypal/src/Hooks/PopUp.js\";\nimport React from 'react';\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core';\n\nconst PopUp = props => {\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Set backup account\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, emails.map(email => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: () => handleListItemClick(email),\n    key: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PersonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ListItem, {\n    autoFocus: true,\n    button: true,\n    onClick: () => handleListItemClick('addAccount'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Add account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }))));\n}; // SimpleDialog.propTypes = {\n//   onClose: PropTypes.func.isRequired,\n//   open: PropTypes.bool.isRequired,\n//   selectedValue: PropTypes.string.isRequired,\n// };\n// export default function SimpleDialogDemo() {\n//   const [open, setOpen] = React.useState(false);\n//   const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleClose = (value) => {\n//     setOpen(false);\n//     setSelectedValue(value);\n//   };\n//   return (\n//     <div>\n//       <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n//       <br />\n//       <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n//         Open simple dialog\n//       </Button>\n//       <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n//     </div>\n//   );\n// }\n\n\nexport default PopUp;","map":{"version":3,"sources":["/Users/moonbox/Documents/Documents - Natalieâ€™s MacBook Pro/capstone/pantrypal/src/Hooks/PopUp.js"],"names":["React","Dialog","DialogTitle","DialogContent","PopUp","props","onClose","selectedValue","open","handleClose","handleListItemClick","value","emails","map","email","classes","avatar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,WAAhB,EAA8BC,aAA9B,QAAmD,mBAAnD;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,aAAX;AAA0BC,IAAAA;AAA1B,MAAmCH,KAAzC;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAACC,aAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,mBAAmB,GAAIC,KAAD,IAAW;AACrCL,IAAAA,OAAO,CAACK,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,WAAjB;AAA8B,uBAAgB,qBAA9C;AAAoE,IAAA,IAAI,EAAED,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,MAAM,CAACC,GAAP,CAAYC,KAAD,iBACV,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,OAAO,EAAE,MAAMJ,mBAAmB,CAACI,KAAD,CAAnD;AAA4D,IAAA,GAAG,EAAEA,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEC,OAAO,CAACC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAME,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEF,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,CADH,eAYE,oBAAC,QAAD;AAAU,IAAA,SAAS,MAAnB;AAAoB,IAAA,MAAM,MAA1B;AAA2B,IAAA,OAAO,EAAE,MAAMJ,mBAAmB,CAAC,YAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAME,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAZF,CAFF,CADF;AA0BD,CArCD,C,CAuCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport {Dialog, DialogTitle , DialogContent } from '@material-ui/core';\n\nconst PopUp = (props) => {\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {emails.map((email) => (\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n            <ListItemAvatar>\n              <Avatar className={classes.avatar}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\n// SimpleDialog.propTypes = {\n//   onClose: PropTypes.func.isRequired,\n//   open: PropTypes.bool.isRequired,\n//   selectedValue: PropTypes.string.isRequired,\n// };\n\n// export default function SimpleDialogDemo() {\n//   const [open, setOpen] = React.useState(false);\n//   const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleClose = (value) => {\n//     setOpen(false);\n//     setSelectedValue(value);\n//   };\n\n//   return (\n//     <div>\n//       <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n//       <br />\n//       <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n//         Open simple dialog\n//       </Button>\n//       <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n//     </div>\n//   );\n// }\n\nexport default PopUp"]},"metadata":{},"sourceType":"module"}