{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/moonbox/Documents/capstone/pantrypal/client/src/Components/UpdateShopItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport { useInput } from '../Hooks/inputHook';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content'\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst UpdateShopItem = props => {\n  _s();\n\n  const classes = useStyles();\n  console.log('update props ', props);\n  const {\n    action\n  } = props;\n  const currentItem = props.userShopList.list.find(entry => entry.entryId === action);\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  console.log('find entry?', currentItem);\n  const [open, setOpen] = useState(false);\n  const {\n    value: quantity,\n    bind: bindQuantity,\n    reset: resetQuantity\n  } = useInput(`${currentItem.quantity}`);\n  const {\n    value: item,\n    bind: bindItem,\n    reset: resetItem\n  } = useInput(`${currentItem.item}`);\n  const {\n    value: measurement,\n    bind: bindMeasurement,\n    reset: resetMeasurement\n  } = useInput(`${currentItem.measId}`);\n\n  const handleUpdateItem = () => {\n    console.log('update this item!', props.action);\n    props.upShopItem(action);\n  };\n\n  const openEditor = () => {\n    console.log('hello you want to edit it?');\n    setOpen(!open);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: openEditor,\n      \"aria-label\": \"update\",\n      \"aria-controls\": \"update-item\",\n      \"aria-haspopup\": \"false\",\n      children: /*#__PURE__*/_jsxDEV(UpdateIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: fullScreen,\n      open: open,\n      onClose: setOpen(false),\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          autoFocus: true,\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateShopItem, \"czuxKICBMBXUGUzkMe6zbkPtNME=\", false, function () {\n  return [useStyles, useMediaQuery, useInput, useInput, useInput];\n});\n\n_c = UpdateShopItem;\nexport default UpdateShopItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateShopItem\");","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/Components/UpdateShopItem.js"],"names":["React","useState","IconButton","UpdateIcon","useInput","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","useStyles","makeStyles","theme","form","display","flexDirection","margin","width","formControl","marginTop","spacing","minWidth","formControlLabel","UpdateShopItem","props","classes","console","log","action","currentItem","userShopList","list","find","entry","entryId","fullScreen","breakpoints","down","open","setOpen","value","quantity","bind","bindQuantity","reset","resetQuantity","item","bindItem","resetItem","measurement","bindMeasurement","resetMeasurement","measId","handleUpdateItem","upShopItem","openEditor","handleClose"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport {useInput} from '../Hooks/inputHook'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst UpdateShopItem = (props) => {\n  const classes = useStyles();\n  console.log('update props ', props)\n  const {action} = props\n  const currentItem = props.userShopList.list.find(entry => entry.entryId===action)\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  console.log('find entry?',currentItem)\n\n  const [open, setOpen] = useState(false)\n  const {value: quantity, bind: bindQuantity, reset: resetQuantity} = useInput(`${currentItem.quantity}`) \n  const {value: item, bind: bindItem, reset: resetItem} = useInput(`${currentItem.item}`) \n  const {value: measurement, bind: bindMeasurement, reset: resetMeasurement} = useInput(`${currentItem.measId}`) \n\n  const handleUpdateItem = () => {\n    console.log('update this item!', props.action)\n    props.upShopItem(action)\n  }\n\n  const openEditor = () => {\n    console.log('hello you want to edit it?')\n    setOpen(!open)\n  }\n\n  return (\n    <div>\n    <IconButton\n    onClick={openEditor}\n    aria-label='update'\n    aria-controls='update-item'\n    aria-haspopup='false' >\n      <UpdateIcon />\n    </IconButton>\n\n    <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={setOpen(false)}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n\n    </div>\n  )\n}\n\nexport default UpdateShopItem "]},"metadata":{},"sourceType":"module"}