{"ast":null,"code":"const mysql = require('mysql');\n\nconst pool = require('../../../sql/connection');\n\nconst {\n  handleSQLError\n} = require('../../../sql/error'); //POST\n\n\nconst autoAddToShopList = (req, res) => {\n  //this will add be triggered when an items gets marked off the list and auto add is on\n  const {\n    itemId\n  } = req.params;\n  let sql = 'INSERT INTO shoppingLists (shopList, quantity, measId, item, spoonId) VALUES ((SELECT shopList FROM access WHERE pantryRole=2 AND pantry=(SELECT pantry FROM pantries WHERE entryId= ?)), (SELECT quantity FROM pantries WHERE entryId=?),(SELECT measId FROM pantries WHERE entryId= ? ),(SELECT item FROM pantries WHERE entryId= ?),(SELECT spoonId FROM pantries WHERE entryId=?))';\n  sql = mysql.format(sql, [itemId, itemId, itemId, itemId, itemId]);\n  console.log(sql);\n  pool.query(sql, (err, results) => {\n    if (err) return handleSQLError(res, err);\n    return res.json({\n      shopId: results.insertId\n    });\n  });\n}; //PUT \n//!~ add front end logic to access if auto add is on. Or refactor this \n\n\nconst removeFromPantry = (req, res) => {\n  let sql = 'UPDATE pantries SET stock=0 where entryId=?';\n  sql = mysql.format(sql, [req.params.itemId]);\n  pool.query(sql, (err, results) => {\n    if (err) return handleSQLError(res, err);\n    return res.status(204).json();\n  });\n};\n\nconst updatePantryItem = (req, res) => {\n  const {\n    quantity,\n    measId,\n    item,\n    spoonId\n  } = req.body;\n  const {\n    itemId\n  } = req.params;\n  let sql = 'UPDATE pantries SET quantity=COALESCE( ? , quantity), measId=(COALESCE( ? , measId)), item=(COALESCE( ? , item)), spoonId=(COALESCE( ? , spoonId)) WHERE entryId= ? ';\n  sql = mysql.format(sql, [quantity, measId, item, spoonId, itemId]);\n  pool.query(sql, (err, results) => {\n    if (err) return handleSQLError(res, err);\n    return res.status(204).json();\n  });\n};\n\nmodule.exports = {\n  autoAddToShopList,\n  removeFromPantry,\n  updatePantryItem\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/controller/appFunc/pantries/byItem.js"],"names":["mysql","require","pool","handleSQLError","autoAddToShopList","req","res","itemId","params","sql","format","console","log","query","err","results","json","shopId","insertId","removeFromPantry","status","updatePantryItem","quantity","measId","item","spoonId","body","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,yBAAD,CAApB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAqBF,OAAO,CAAC,oBAAD,CAAlC,C,CAEA;;;AACA,MAAMG,iBAAiB,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAG,CAACG,MAAvB;AAEA,MAAIC,GAAG,GAAG,wXAAV;AAEAA,EAAAA,GAAG,GAAGT,KAAK,CAACU,MAAN,CAAaD,GAAb,EAAkB,CAACF,MAAD,EAASA,MAAT,EAAiBA,MAAjB,EAAyBA,MAAzB,EAAiCA,MAAjC,CAAlB,CAAN;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEAP,EAAAA,IAAI,CAACW,KAAL,CAAWJ,GAAX,EAAgB,CAACK,GAAD,EAAMC,OAAN,KAAkB;AAChC,QAAGD,GAAH,EAAQ,OAAOX,cAAc,CAACG,GAAD,EAAMQ,GAAN,CAArB;AACR,WAAOR,GAAG,CAACU,IAAJ,CAAS;AAACC,MAAAA,MAAM,EAAEF,OAAO,CAACG;AAAjB,KAAT,CAAP;AACD,GAHD;AAID,CAdD,C,CAgBA;AAEA;;;AACA,MAAMC,gBAAgB,GAAG,CAACd,GAAD,EAAMC,GAAN,KAAc;AAEvC,MAAIG,GAAG,GAAC,6CAAR;AAEAA,EAAAA,GAAG,GAACT,KAAK,CAACU,MAAN,CAAaD,GAAb,EAAiB,CAACJ,GAAG,CAACG,MAAJ,CAAWD,MAAZ,CAAjB,CAAJ;AAEAL,EAAAA,IAAI,CAACW,KAAL,CAAWJ,GAAX,EAAgB,CAACK,GAAD,EAAMC,OAAN,KAAkB;AAChC,QAAID,GAAJ,EAAS,OAAOX,cAAc,CAACG,GAAD,EAAMQ,GAAN,CAArB;AACT,WAAOR,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,EAAP;AACD,GAHD;AAKC,CAXD;;AAaA,MAAMK,gBAAgB,GAAG,CAAChB,GAAD,EAAMC,GAAN,KAAc;AAEvC,QAAM;AAACgB,IAAAA,QAAD;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA;AAAzB,MAAoCpB,GAAG,CAACqB,IAA9C;AACA,QAAM;AAACnB,IAAAA;AAAD,MAAWF,GAAG,CAACG,MAArB;AAEA,MAAIC,GAAG,GAAC,sKAAR;AAGAA,EAAAA,GAAG,GAACT,KAAK,CAACU,MAAN,CAAaD,GAAb,EAAkB,CAACa,QAAD,EAAWC,MAAX,EAAmBC,IAAnB,EAAyBC,OAAzB,EAAkClB,MAAlC,CAAlB,CAAJ;AAEAL,EAAAA,IAAI,CAACW,KAAL,CAAWJ,GAAX,EAAgB,CAACK,GAAD,EAAMC,OAAN,KAAkB;AAC9B,QAAGD,GAAH,EAAQ,OAAOX,cAAc,CAACG,GAAD,EAAMQ,GAAN,CAArB;AAER,WAAOR,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,EAAP;AACH,GAJD;AAMC,CAhBD;;AAmBAW,MAAM,CAACC,OAAP,GAAiB;AACfxB,EAAAA,iBADe;AAEfe,EAAAA,gBAFe;AAGfE,EAAAA;AAHe,CAAjB","sourcesContent":["const mysql = require('mysql')\nconst pool = require('../../../sql/connection')\nconst { handleSQLError } = require('../../../sql/error')\n\n//POST\nconst autoAddToShopList = (req, res) => {\n  //this will add be triggered when an items gets marked off the list and auto add is on\n\n  const { itemId } = req.params\n\n  let sql = 'INSERT INTO shoppingLists (shopList, quantity, measId, item, spoonId) VALUES ((SELECT shopList FROM access WHERE pantryRole=2 AND pantry=(SELECT pantry FROM pantries WHERE entryId= ?)), (SELECT quantity FROM pantries WHERE entryId=?),(SELECT measId FROM pantries WHERE entryId= ? ),(SELECT item FROM pantries WHERE entryId= ?),(SELECT spoonId FROM pantries WHERE entryId=?))'\n  \n  sql = mysql.format(sql, [itemId, itemId, itemId, itemId, itemId])\n  console.log(sql)\n\n  pool.query(sql, (err, results) => {\n    if(err) return handleSQLError(res, err)\n    return res.json({shopId: results.insertId});\n  })\n}\n\n//PUT \n\n//!~ add front end logic to access if auto add is on. Or refactor this \nconst removeFromPantry = (req, res) => {\n\nlet sql='UPDATE pantries SET stock=0 where entryId=?'\n\nsql=mysql.format(sql,[req.params.itemId])\n\npool.query(sql, (err, results) => {\n  if (err) return handleSQLError(res, err)\n  return res.status(204).json();\n})\n\n}\n\nconst updatePantryItem = (req, res) => {\n\nconst {quantity, measId, item, spoonId} = req.body\nconst {itemId} = req.params\n\nlet sql='UPDATE pantries SET quantity=COALESCE( ? , quantity), measId=(COALESCE( ? , measId)), item=(COALESCE( ? , item)), spoonId=(COALESCE( ? , spoonId)) WHERE entryId= ? '\n\n\nsql=mysql.format(sql, [quantity, measId, item, spoonId, itemId])\n\npool.query(sql, (err, results) => {\n    if(err) return handleSQLError(res, err)\n\n    return res.status(204).json();\n})\n\n}\n\n\nmodule.exports = {\n  autoAddToShopList,\n  removeFromPantry,\n  updatePantryItem\n}"]},"metadata":{},"sourceType":"script"}