{"ast":null,"code":"import _regeneratorRuntime from\"/Users/moonbox/Documents/capstone/pantrypal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/moonbox/Documents/capstone/pantrypal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{CREATE_NEW_USER}from'./types';export var createNewUser=function createNewUser(username,firstName,lastName,email,password,bMonth,bDay,bYear){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var sendUser,res,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:sendUser=JSON.stringify({\"username\":\"\".concat(username),\"password\":\"\".concat(password),\"email\":\"\".concat(email),\"firstName\":\"\".concat(firstName),\"lastName\":\"\".concat(lastName),\"dobMonth\":bMonth,\"dobDate\":bDay,\"dobYear\":bYear});_context.prev=1;_context.next=4;return fetch('preLogin/createUser',{method:'POST',headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:sendUser});case 4:res=_context.sent;_context.next=7;return res.json();case 7:result=_context.sent;dispatch({type:CREATE_NEW_USER,payload:{newUser:result}});_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",('what the error the user creation? ',{e:_context.t0}));case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/createNewUser.js"],"names":["CREATE_NEW_USER","createNewUser","username","firstName","lastName","email","password","bMonth","bDay","bYear","dispatch","sendUser","JSON","stringify","fetch","method","headers","Accept","body","res","json","result","type","payload","newUser","e"],"mappings":"+UAAA,OAAQA,eAAR,KAA8B,SAA9B,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,CAAWC,SAAX,CAAsBC,QAAtB,CAAgCC,KAAhC,CAAuCC,QAAvC,CAAiDC,MAAjD,CAAyDC,IAAzD,CAA+DC,KAA/D,iGAAyE,iBAAMC,QAAN,0IAEjGC,QAFiG,CAErFC,IAAI,CAACC,SAAL,CAAe,CAC5B,qBAAeX,QAAf,CAD4B,CAE5B,qBAAeI,QAAf,CAF4B,CAG5B,kBAAYD,KAAZ,CAH4B,CAI5B,sBAAgBF,SAAhB,CAJ4B,CAK5B,qBAAeC,QAAf,CAL4B,CAM5B,WAAYG,MANgB,CAO5B,UAAWC,IAPiB,CAQ5B,UAAWC,KARiB,CAAf,CAFqF,uCAchFK,CAAAA,KAAK,CAAC,qBAAD,CAAwB,CAC3CC,MAAM,CAAE,MADmC,CAE3CC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CACqB,eAAgB,kBADrC,CAFkC,CAK3CC,IAAI,CAAEP,QALqC,CAAxB,CAd2E,QAc5FQ,GAd4F,qCAsB7EA,CAAAA,GAAG,CAACC,IAAJ,EAtB6E,QAsB5FC,MAtB4F,eAwBhGX,QAAQ,CAAC,CACPY,IAAI,CAAEtB,eADC,CAELuB,OAAO,CAAE,CACPC,OAAO,CAAEH,MADF,CAFJ,CAAD,CAAR,CAxBgG,kHA+BzF,qCAAsC,CAACI,CAAC,YAAF,CA/BmD,wEAAzE,gEAAtB","sourcesContent":["import {CREATE_NEW_USER} from './types'\n\nexport const createNewUser = (username, firstName, lastName, email, password, bMonth, bDay, bYear) => async dispatch => {\n\n let sendUser =  JSON.stringify({\n    \"username\": `${username}`,\n    \"password\": `${password}`,\n    \"email\": `${email}`,\n    \"firstName\": `${firstName}`,\n    \"lastName\": `${lastName}`,\n    \"dobMonth\": bMonth,\n    \"dobDate\": bDay,\n    \"dobYear\": bYear\n  })\n \n  try{\n      let res = await fetch('preLogin/createUser', {\n        method: 'POST',\n        headers: {\n          Accept: \"application/json\", \"Content-Type\": \"application/json\",\n        },\n        body: sendUser\n       } )\n\n      let result = await res.json()\n      \n      dispatch({\n        type: CREATE_NEW_USER,\n          payload: { \n            newUser: result\n          }\n      })\n    } catch (e) {\n      return 'what the error the user creation? ', {e}\n  }\n\n}"]},"metadata":{},"sourceType":"module"}