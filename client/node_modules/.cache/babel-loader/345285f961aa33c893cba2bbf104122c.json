{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport { useInput } from '../Hooks/inputHook';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport cookie from 'cookie'; //the main page, go not pass go, to not collect $200 without login in or creating a login\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh'\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1590311824865-bac58a024e51?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center'\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst LogIn = props => {\n  _s();\n\n  console.log(props);\n  const classes = useStyles();\n  const history = useHistory();\n  let {\n    user\n  } = props.state; //   let {value: username, bind: bindUsername, reset:resetUsername} = useInput('')\n  //   let {value: password, bind: bindPassword, reset: resetPassword} = useInput('')\n  //     //back end build when it is ready, pass info along \n  //     //() => {props.login(username={...bindUsername},password={...bindPassword}, true)}\n  //     const sendValidation = e => {\n  //       e.preventDefault();\n  //    return props.login(username={...bindUsername},password={...bindPassword})\n  //     }\n  //     useEffect(()=> {\n  //       if(user.validation) {\n  //         document.cookie = \"logCookies=\"+JSON.stringify({\n  //           \"username\":user.username,\n  //           \"validation\": true,\n  //           \"token\": user.token,\n  //           //will have to add validate for username and password, then can be true \n  //           \"max-Age\":60*10000,\n  //           \"reset\": {\n  //             \"resetUsername\": '',\n  //             \"resetLoggedIn\": ''\n  //           }\n  //             })\n  //         history.push('/home')\n  //       }\n  //     })\n  //   return (\n  //       <Grid \n  //       container \n  //       component=\"main\" \n  //       className={classes.root}>\n  //       <CssBaseline />\n  //       <Grid item xs={false} sm={4} md={7} className={classes.image} />\n  //       <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} >\n  //         <div className={classes.paper}>\n  //           <Avatar className={classes.avatar}>\n  //             <LockOutlinedIcon />\n  //           </Avatar>\n  //           <Typography component=\"h1\" \n  //           variant=\"h5\"\n  //           aria-label='sign in for pantry pals'\n  //           >\n  //             Sign in\n  //           </Typography>\n  //           <form className={classes.form}>\n  //             <TextField\n  //               {...bindUsername}\n  //               variant=\"outlined\"\n  //               margin=\"normal\"\n  //               required\n  //               fullWidth\n  //               id=\"username\"\n  //               label=\"Username\"\n  //               name=\"username\"\n  //               type=\"text\"\n  //               autoFocus\n  //               aria-label='your username'\n  //             />\n  //             <TextField\n  //               {...bindPassword}\n  //               variant=\"outlined\"\n  //               margin=\"normal\"\n  //               required\n  //               fullWidth\n  //               label=\"Password\"\n  //               type=\"password\"\n  //               id=\"password\"\n  //               aria-label='your password'\n  //             />\n  //             <Button\n  //               type=\"submit\"\n  //               fullWidth\n  //               variant=\"contained\"\n  //               color=\"primary\"\n  //               className={classes.submit}\n  //               aria-label='sign in button'\n  //               onClick={sendValidation}\n  //             >\n  //               Sign In\n  //             </Button>\n  //             <Grid container>\n  //               <Grid item xs>\n  //                 <ListItem\n  //                 button\n  //                 component={Link}\n  //                 to=\"/forgotPassword\" \n  //                 primary={'Forgot password'}\n  //                 aria-label='forgot password?'\n  //                 >Forgot Password</ListItem>\n  //               </Grid>\n  //               <Grid item>\n  //                 <ListItem\n  //                 button\n  //                 component={Link}\n  //                 to=\"/createNewUser\" \n  //                 aria-label='create a login for pantry pals'\n  //                 >\n  //                   {\"Don't have an account? Sign Up\"}\n  //                 </ListItem>\n  //               </Grid>\n  //             </Grid>\n  //             <Box mt={5}>\n  //             </Box>\n  //           </form>\n  //         </div>\n  //       </Grid>\n  //     </Grid>\n  //   )\n};\n\n_s(LogIn, \"cXZz/rbrhPrjL6gJaTc75NCtuak=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = LogIn;\nLogIn.proptypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  login: PropTypes.bool.isRequired,\n  validation: PropTypes.object\n};\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/Components/LogIn.js"],"names":["React","useEffect","Avatar","Button","CssBaseline","TextField","Paper","Box","Grid","ListItem","LockOutlinedIcon","Typography","Link","makeStyles","withStyles","useInput","PropTypes","useHistory","cookie","useStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","LogIn","props","console","log","classes","history","user","state","proptypes","username","string","isRequired","password","login","bool","validation","object"],"mappings":"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","sourcesContent":["import React, { useEffect} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport {useInput} from '../Hooks/inputHook';\nimport PropTypes from 'prop-types';\nimport {useHistory} from 'react-router-dom'\nimport cookie from 'cookie'\n\n//the main page, go not pass go, to not collect $200 without login in or creating a login\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1590311824865-bac58a024e51?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst LogIn = (props) => {\n  console.log(props)\n  const classes = useStyles();\n  const history = useHistory();\n  let {user}= props.state\n\n\n//   let {value: username, bind: bindUsername, reset:resetUsername} = useInput('')\n//   let {value: password, bind: bindPassword, reset: resetPassword} = useInput('')\n\n  \n//     //back end build when it is ready, pass info along \n//     //() => {props.login(username={...bindUsername},password={...bindPassword}, true)}\n//     const sendValidation = e => {\n//       e.preventDefault();\n//    return props.login(username={...bindUsername},password={...bindPassword})\n//     }\n\n//     useEffect(()=> {\n//       if(user.validation) {\n//         document.cookie = \"logCookies=\"+JSON.stringify({\n//           \"username\":user.username,\n//           \"validation\": true,\n//           \"token\": user.token,\n//           //will have to add validate for username and password, then can be true \n//           \"max-Age\":60*10000,\n//           \"reset\": {\n//             \"resetUsername\": '',\n//             \"resetLoggedIn\": ''\n//           }\n          \n//             })\n//         history.push('/home')\n//       }\n//     })\n\n \n//   return (\n//       <Grid \n//       container \n//       component=\"main\" \n//       className={classes.root}>\n//       <CssBaseline />\n//       <Grid item xs={false} sm={4} md={7} className={classes.image} />\n//       <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} >\n//         <div className={classes.paper}>\n//           <Avatar className={classes.avatar}>\n//             <LockOutlinedIcon />\n//           </Avatar>\n//           <Typography component=\"h1\" \n//           variant=\"h5\"\n//           aria-label='sign in for pantry pals'\n//           >\n//             Sign in\n//           </Typography>\n       \n//           <form className={classes.form}>\n//             <TextField\n//               {...bindUsername}\n//               variant=\"outlined\"\n//               margin=\"normal\"\n//               required\n//               fullWidth\n//               id=\"username\"\n//               label=\"Username\"\n//               name=\"username\"\n//               type=\"text\"\n//               autoFocus\n//               aria-label='your username'\n//             />\n//             <TextField\n//               {...bindPassword}\n//               variant=\"outlined\"\n//               margin=\"normal\"\n//               required\n//               fullWidth\n//               label=\"Password\"\n//               type=\"password\"\n//               id=\"password\"\n//               aria-label='your password'\n//             />\n//             <Button\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               color=\"primary\"\n//               className={classes.submit}\n//               aria-label='sign in button'\n//               onClick={sendValidation}\n//             >\n//               Sign In\n//             </Button>\n//             <Grid container>\n//               <Grid item xs>\n//                 <ListItem\n//                 button\n//                 component={Link}\n//                 to=\"/forgotPassword\" \n//                 primary={'Forgot password'}\n//                 aria-label='forgot password?'\n//                 >Forgot Password</ListItem>\n//               </Grid>\n//               <Grid item>\n//                 <ListItem\n//                 button\n//                 component={Link}\n//                 to=\"/createNewUser\" \n//                 aria-label='create a login for pantry pals'\n//                 >\n//                   {\"Don't have an account? Sign Up\"}\n//                 </ListItem>\n//               </Grid>\n//             </Grid>\n//             <Box mt={5}>\n//             </Box>\n//           </form>\n//         </div>\n//       </Grid>\n//     </Grid>\n\n//   )\n }\n\nLogIn.proptypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  login: PropTypes.bool.isRequired,\n  validation: PropTypes.object\n}\n\nexport default LogIn"]},"metadata":{},"sourceType":"module"}