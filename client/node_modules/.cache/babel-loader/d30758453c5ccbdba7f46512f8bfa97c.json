{"ast":null,"code":"import _regeneratorRuntime from\"/Users/moonbox/Documents/capstone/pantrypal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/moonbox/Documents/capstone/pantrypal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/moonbox/Documents/capstone/pantrypal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{ADD_ITEM_TO_SHOPPING_LIST}from'./types';export var addToShopList=function addToShopList(user,pass,listId,quantity,item,itemId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var path,intake,createEntry,res,getResult,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:path=\"/postLogin/\".concat(user,\"/shopList/addToList/\").concat(listId);intake=pass.token;createEntry=JSON.stringify({\"quantity\":quantity,\"measure\":null,\"item\":item,\"spoon\":itemId});_context.prev=3;_context.next=6;return fetch(path,{method:'POST',headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",token:\"\".concat(intake)},body:createEntry});case 6:res=_context.sent;_context.next=9;return res.json();case 9:getResult=_context.sent;result=_objectSpread({},getResult);dispatch({type:ADD_ITEM_TO_SHOPPING_LIST,payload:{newEntry:{\"quantity\":quantity,\"measure\":null,\"item\":item,\"spoon\":itemId,\"itemId\":result}}});_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](3);return _context.abrupt(\"return\",('what the error the add to shop list? ',{e:_context.t0}));case 17:case\"end\":return _context.stop();}}},_callee,null,[[3,14]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/addToShopList.js"],"names":["ADD_ITEM_TO_SHOPPING_LIST","addToShopList","user","pass","listId","quantity","item","itemId","dispatch","path","intake","token","createEntry","JSON","stringify","fetch","method","headers","Accept","body","res","json","getResult","result","type","payload","newEntry","e"],"mappings":"ufAAA,OAAQA,yBAAR,KAAwC,SAAxC,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,CAAMC,IAAN,CAAWC,MAAX,CAAmBC,QAAnB,CAA6BC,IAA7B,CAAmCC,MAAnC,iGAA8C,iBAAMC,QAAN,mKAErEC,IAFqE,sBAEhDP,IAFgD,gCAErBE,MAFqB,EAGrEM,MAHqE,CAG5DP,IAAI,CAACQ,KAHuD,CAKrEC,WALqE,CAKvDC,IAAI,CAACC,SAAL,CAAe,CAC/B,WAAYT,QADmB,CAE/B,UAAU,IAFqB,CAG/B,OAAOC,IAHwB,CAI/B,QAASC,MAJsB,CAAf,CALuD,uCAarDQ,CAAAA,KAAK,CAACN,IAAD,CAAO,CAC1BO,MAAM,CAAE,MADkB,CAE1BC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CACqB,eAAgB,kBADrC,CAEPP,KAAK,WAAKD,MAAL,CAFE,CAFiB,CAM1BS,IAAI,CAAEP,WANoB,CAAP,CAbgD,QAajEQ,GAbiE,qCAsB/CA,CAAAA,GAAG,CAACC,IAAJ,EAtB+C,QAsBjEC,SAtBiE,eAuBjEC,MAvBiE,kBAuBpDD,SAvBoD,EAyBrEd,QAAQ,CAAC,CACPgB,IAAI,CAAExB,yBADC,CAELyB,OAAO,CAAE,CACPC,QAAQ,CAAE,CAER,WAAYrB,QAFJ,CAGR,UAAU,IAHF,CAIR,OAAOC,IAJC,CAKR,QAASC,MALD,CAMR,SAAUgB,MANF,CADH,CAFJ,CAAD,CAAR,CAzBqE,kHAwC9D,wCAAyC,CAACI,CAAC,YAAF,CAxCqB,wEAA9C,gEAAtB","sourcesContent":["import {ADD_ITEM_TO_SHOPPING_LIST} from './types'\n\nexport const addToShopList = (user,pass,listId, quantity, item, itemId) => async dispatch => {\n\n  let path = `/postLogin/${user}/shopList/addToList/${listId}`\n  let intake = pass.token\n\n  let createEntry = JSON.stringify({\n    \"quantity\": quantity, \n    \"measure\":null, \n    \"item\":item, \n    \"spoon\": itemId\n  })\n\n  try{\n      let res = await fetch(path, {\n        method: 'POST',\n        headers: {\n          Accept: \"application/json\", \"Content-Type\": \"application/json\",\n          token: `${intake}`,\n        },\n        body: createEntry\n      }\n      )\n      let getResult = await res.json()\n      let result = {...getResult}\n   \n      dispatch({\n        type: ADD_ITEM_TO_SHOPPING_LIST,\n          payload: {\n            newEntry: {\n              \n              \"quantity\": quantity, \n              \"measure\":null, \n              \"item\":item, \n              \"spoon\": itemId,\n              \"itemId\": result\n              \n            }\n          }\n      })\n    } catch (e) {\n      return 'what the error the add to shop list? ', {e}\n  }\n\n}"]},"metadata":{},"sourceType":"module"}