{"ast":null,"code":"import { YOUR_SHOPPING_LIST, ADD_ITEM_TO_SHOPPING_LIST, REMOVE_FROM_SHOPPING_LIST, UPDATE_ITEM_ON_SHOPPING_LIST } from '../actions/types';\nimport state from '../state';\nlet initialState = { ...state\n};\nexport default function (state = { ...initialState.userShopList\n}, action) {\n  switch (action.type) {\n    case YOUR_SHOPPING_LIST:\n      return action.payload.userShopList;\n\n    case ADD_ITEM_TO_SHOPPING_LIST:\n      return [...state.list, action.payload.newEntry];\n    //the result of this action should be an amended shop list \n\n    case UPDATE_ITEM_ON_SHOPPING_LIST:\n      const updateList = state.list.filter(item => item.entry === action.payload.updatedEntry.itemId); //remove item by index id and replace updated information \n\n      const newState = [...updateList, action.payload.updatedEntry];\n      return newState;\n\n    case REMOVE_FROM_SHOPPING_LIST:\n      const amendState = state.list.filter(item => item.entryId === action.payload); //splice the item from the list and return \n\n      return [...saate];\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/reducers/userShopList.js"],"names":["YOUR_SHOPPING_LIST","ADD_ITEM_TO_SHOPPING_LIST","REMOVE_FROM_SHOPPING_LIST","UPDATE_ITEM_ON_SHOPPING_LIST","state","initialState","userShopList","action","type","payload","list","newEntry","updateList","filter","item","entry","updatedEntry","itemId","newState","amendState","entryId","saate"],"mappings":"AAAA,SAAQA,kBAAR,EAA4BC,yBAA5B,EAAuDC,yBAAvD,EAAkFC,4BAAlF,QAAqH,kBAArH;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAIC,YAAY,GAAG,EAAC,GAAGD;AAAJ,CAAnB;AAEA,eAAe,UAASA,KAAK,GAAG,EAAC,GAAGC,YAAY,CAACC;AAAjB,CAAjB,EAAiDC,MAAjD,EAAyD;AAEtE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,kBAAL;AACA,aAAOO,MAAM,CAACE,OAAP,CAAeH,YAAtB;;AACA,SAAKL,yBAAL;AACA,aAAO,CAAC,GAAGG,KAAK,CAACM,IAAV,EAAgBH,MAAM,CAACE,OAAP,CAAeE,QAA/B,CAAP;AAAgD;;AAChD,SAAKR,4BAAL;AACG,YAAMS,UAAU,GAAGR,KAAK,CAACM,IAAN,CAAWG,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAcR,MAAM,CAACE,OAAP,CAAeO,YAAf,CAA4BC,MAApE,CAAnB,CADH,CACkG;;AAChG,YAAMC,QAAQ,GAAG,CAAC,GAAGN,UAAJ,EAAgBL,MAAM,CAACE,OAAP,CAAeO,YAA/B,CAAjB;AACA,aAAOE,QAAP;;AACF,SAAKhB,yBAAL;AACC,YAAMiB,UAAU,GAAGf,KAAK,CAACM,IAAN,CAAWG,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACM,OAAL,KAAgBb,MAAM,CAACE,OAAjD,CAAnB,CADD,CAC6E;;AAC7E,aAAO,CAAC,GAAGY,KAAJ,CAAP;;AACA;AAAS,aAAOjB,KAAP;AAZX;AAcD","sourcesContent":["import {YOUR_SHOPPING_LIST, ADD_ITEM_TO_SHOPPING_LIST, REMOVE_FROM_SHOPPING_LIST, UPDATE_ITEM_ON_SHOPPING_LIST} from '../actions/types'\nimport state from '../state'\n\nlet initialState = {...state}\n\nexport default function(state = {...initialState.userShopList}, action) {\n \n  switch(action.type) {\n    case YOUR_SHOPPING_LIST:\n    return action.payload.userShopList\n    case ADD_ITEM_TO_SHOPPING_LIST: \n    return [...state.list, action.payload.newEntry] //the result of this action should be an amended shop list \n    case UPDATE_ITEM_ON_SHOPPING_LIST:\n       const updateList = state.list.filter(item => item.entry=== action.payload.updatedEntry.itemId) //remove item by index id and replace updated information \n      const newState = [...updateList, action.payload.updatedEntry]\n      return newState\n    case REMOVE_FROM_SHOPPING_LIST:\n     const amendState = state.list.filter(item => item.entryId=== action.payload)//splice the item from the list and return \n    return [...saate]\n    default: return state\n  }\n}"]},"metadata":{},"sourceType":"module"}