{"ast":null,"code":"import { CREATE_NEW_USER } from './types';\nimport moment from 'moment';\nexport const createNewUser = (username, firstName, lastName, email, password, bDay) => async dispatch => {\n  console.log('values', username.value, firstName.value, lastName.value, email.value, password.value, birthday.value);\n  let dob = '';\n\n  const modBirthday = day => {\n    console.log(day);\n    return dob = day.split('-');\n  };\n\n  modBirthday(birthday.value);\n\n  try {\n    let res = await fetch('/preLogin/createUser', {\n      method: 'POST',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        \"username\": `${userId.value}`,\n        \"password\": `${password.value}`,\n        \"email\": `${email.value}`,\n        \"firstName\": `${firstName.value}`,\n        \"lastName\": `${lastName.value}`,\n        \"dobMonth\": dob[2],\n        \"dobDate\": dob[1],\n        \"dobYear\": dob[0]\n      }\n    });\n    let getResult = await res.json();\n    let result = { ...getResult\n    };\n    dispatch({\n      type: CREATE_NEW_USER,\n      payload: {\n        newUser: {\n          created: true,\n          returned: result\n        }\n      }\n    });\n  } catch (e) {\n    return 'what the error the user details? ', {\n      e\n    };\n  }\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/createNewUser.js"],"names":["CREATE_NEW_USER","moment","createNewUser","username","firstName","lastName","email","password","bDay","dispatch","console","log","value","birthday","dob","modBirthday","day","split","res","fetch","method","headers","Accept","body","userId","getResult","json","result","type","payload","newUser","created","returned","e"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,SAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAIA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,SAAX,EAAsBC,QAAtB,EAAgCC,KAAhC,EAAuCC,QAAvC,EAAiDC,IAAjD,KAA0D,MAAMC,QAAN,IAAkB;AACxGC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,QAAQ,CAACS,KAA/B,EAAsCR,SAAS,CAACQ,KAAhD,EAAuDP,QAAQ,CAACO,KAAhE,EAAuEN,KAAK,CAACM,KAA7E,EAAoFL,QAAQ,CAACK,KAA7F,EAAoGC,QAAQ,CAACD,KAA7G;AAEA,MAAIE,GAAG,GAAG,EAAV;;AAED,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3BN,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACE,WAAOF,GAAG,GAAGE,GAAG,CAACC,KAAJ,CAAU,GAAV,CAAb;AACH,GAHD;;AAKCF,EAAAA,WAAW,CAACF,QAAQ,CAACD,KAAV,CAAX;;AAEC,MAAG;AACC,QAAIM,GAAG,GAAG,MAAMC,KAAK,CAAC,sBAAD,EAAyB;AAC5CC,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AACqB,wBAAgB;AADrC,OAFmC;AAK5CC,MAAAA,IAAI,EAAE;AACJ,oBAAa,GAAEC,MAAM,CAACZ,KAAM,EADxB;AAEJ,oBAAa,GAAEL,QAAQ,CAACK,KAAM,EAF1B;AAGJ,iBAAU,GAAEN,KAAK,CAACM,KAAM,EAHpB;AAIJ,qBAAc,GAAER,SAAS,CAACQ,KAAM,EAJ5B;AAKJ,oBAAa,GAAEP,QAAQ,CAACO,KAAM,EAL1B;AAMJ,oBAAYE,GAAG,CAAC,CAAD,CANX;AAOJ,mBAAWA,GAAG,CAAC,CAAD,CAPV;AAQJ,mBAAWA,GAAG,CAAC,CAAD;AARV;AALsC,KAAzB,CAArB;AAiBA,QAAIW,SAAS,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAtB;AACA,QAAIC,MAAM,GAAG,EAAC,GAAGF;AAAJ,KAAb;AACAhB,IAAAA,QAAQ,CAAC;AACPmB,MAAAA,IAAI,EAAE5B,eADC;AAEL6B,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE,IADF;AAEPC,UAAAA,QAAQ,EAAEL;AAFH;AADF;AAFJ,KAAD,CAAR;AASD,GA7BH,CA6BI,OAAOM,CAAP,EAAU;AACV,WAAO,qCAAqC;AAACA,MAAAA;AAAD,KAA5C;AACH;AAEF,CA7CM","sourcesContent":["import {CREATE_NEW_USER} from './types'\nimport moment from 'moment'\n\n\n\nexport const createNewUser = (username, firstName, lastName, email, password, bDay) => async dispatch => {\n console.log('values', username.value, firstName.value, lastName.value, email.value, password.value, birthday.value)\n \n let dob = ''\n\nconst modBirthday = (day) => {\n  console.log(day)\n    return dob = day.split('-')\n}\n \n modBirthday(birthday.value)\n\n  try{\n      let res = await fetch('/preLogin/createUser', {\n        method: 'POST',\n        headers: {\n          Accept: \"application/json\", \"Content-Type\": \"application/json\",\n        },\n        body: {\n          \"username\": `${userId.value}`,\n          \"password\": `${password.value}`,\n          \"email\": `${email.value}`,\n          \"firstName\": `${firstName.value}`,\n          \"lastName\": `${lastName.value}`,\n          \"dobMonth\": dob[2],\n          \"dobDate\": dob[1],\n          \"dobYear\": dob[0]\n        }\n      }\n      )\n      let getResult = await res.json()\n      let result = {...getResult}\n      dispatch({\n        type: CREATE_NEW_USER,\n          payload: {\n            newUser: {\n              created: true,\n              returned: result\n            }\n          }\n      })\n    } catch (e) {\n      return 'what the error the user details? ', {e}\n  }\n\n}"]},"metadata":{},"sourceType":"module"}