{"ast":null,"code":"import { LOGIN } from './types';\nimport moment from 'moment';\nexport const login = (username, password) => async dispatch => {\n  console.log('log in get ', username, password);\n  let path = `login/`;\n  let params = `${username.value}/${password.value}`;\n  let fullPath = `${path}${params}`.trim();\n\n  try {\n    let res = await fetch(fullPath, {\n      method: 'GET',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let token = await res.json();\n\n    if (token === false) {\n      dispatch({\n        type: LOGIN,\n        payload: `Sorry, we can't find that login, please try again`\n      });\n    } else {}\n  } catch (e) {\n    return 'what is the error? ', {\n      e\n    };\n  }\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/login.js"],"names":["LOGIN","moment","login","username","password","dispatch","console","log","path","params","value","fullPath","trim","res","fetch","method","headers","Accept","token","json","type","payload","e"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAMC,QAAN,IAAkB;AAC7DC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BJ,QAA1B,EAAoCC,QAApC;AACA,MAAII,IAAI,GAAI,QAAZ;AACA,MAAIC,MAAM,GAAI,GAAEN,QAAQ,CAACO,KAAM,IAAGN,QAAQ,CAACM,KAAM,EAAjD;AACA,MAAIC,QAAQ,GAAI,GAAEH,IAAK,GAAEC,MAAO,EAAjB,CAAmBG,IAAnB,EAAf;;AAEE,MAAG;AAEC,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAACH,QAAD,EAAU;AAC7BI,MAAAA,MAAM,EAAE,KADqB;AAE7BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AACqB,wBAAgB;AADrC;AAFoB,KAAV,CAArB;AAOA,QAAIC,KAAK,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAlB;;AAGA,QAAID,KAAK,KAAG,KAAZ,EAAmB;AACjBb,MAAAA,QAAQ,CAAC;AACPe,QAAAA,IAAI,EAACpB,KADE;AAEPqB,QAAAA,OAAO,EAAG;AAFH,OAAD,CAAR;AAID,KALD,MAKO,CAEN;AACJ,GApBD,CAqBA,OAAMC,CAAN,EAAQ;AACJ,WAAO,uBAAuB;AAACA,MAAAA;AAAD,KAA9B;AACH;AACJ,CA9BM","sourcesContent":["import {LOGIN} from './types'\nimport moment from 'moment'\n\nexport const login = (username, password) => async dispatch => {\n  console.log('log in get ',username, password)\n  let path = `login/`\n  let params = `${username.value}/${password.value}`\n  let fullPath = `${path}${params}`.trim()\n\n    try{\n  \n        let res = await fetch(fullPath,{\n          method: 'GET',\n          headers: {\n            Accept: \"application/json\", \"Content-Type\": \"application/json\"\n          }\n        }\n        )\n        let token = await res.json() \n\n\n        if (token===false) {\n          dispatch({\n            type:LOGIN,\n            payload: `Sorry, we can't find that login, please try again`\n          }) \n        } else {\n\n        }\n    }\n    catch(e){\n        return 'what is the error? ', {e}\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}