{"ast":null,"code":"'use strict';\n\nconst Buffer = require('safe-buffer').Buffer;\n\nconst checkResponse = require('./check-response.js');\n\nconst config = require('./config.js');\n\nconst getAuth = require('./auth.js');\n\nconst fetch = require('make-fetch-happen');\n\nconst JSONStream = require('JSONStream');\n\nconst npa = require('npm-package-arg');\n\nconst {\n  PassThrough\n} = require('stream');\n\nconst qs = require('querystring');\n\nconst url = require('url');\n\nconst zlib = require('zlib');\n\nmodule.exports = regFetch;\n\nfunction regFetch(uri, opts) {\n  opts = config(opts);\n  const registry = opts.spec && pickRegistry(opts.spec, opts) || opts.registry || 'https://registry.npmjs.org/';\n  uri = url.parse(uri).protocol ? uri : `${registry.trim().replace(/\\/?$/g, '')}/${uri.trim().replace(/^\\//, '')}`; // through that takes into account the scope, the prefix of `uri`, etc\n\n  const startTime = Date.now();\n  const headers = getHeaders(registry, uri, opts);\n  let body = opts.body;\n  const bodyIsStream = body && typeof body === 'object' && typeof body.pipe === 'function';\n\n  if (body && !bodyIsStream && typeof body !== 'string' && !Buffer.isBuffer(body)) {\n    headers['content-type'] = headers['content-type'] || 'application/json';\n    body = JSON.stringify(body);\n  } else if (body && !headers['content-type']) {\n    headers['content-type'] = 'application/octet-stream';\n  }\n\n  if (opts.gzip) {\n    headers['content-encoding'] = 'gzip';\n\n    if (bodyIsStream) {\n      const gz = zlib.createGzip();\n      body.on('error', err => gz.emit('error', err));\n      body = body.pipe(gz);\n    } else {\n      body = new opts.Promise((resolve, reject) => {\n        zlib.gzip(body, (err, gz) => err ? reject(err) : resolve(gz));\n      });\n    }\n  }\n\n  let q = opts.query;\n\n  if (q) {\n    if (typeof q === 'string') {\n      q = qs.parse(q);\n    } else if (typeof q !== 'object') {\n      throw new TypeError('invalid query option, must be string or object');\n    }\n\n    Object.keys(q).forEach(key => {\n      if (q[key] === undefined) {\n        delete q[key];\n      }\n    });\n  }\n\n  const parsed = url.parse(uri);\n  const query = parsed.query ? Object.assign(qs.parse(parsed.query), q || {}) : Object.keys(q || {}).length ? q : null;\n\n  if (query) {\n    if (String(query.write) === 'true' && opts.method === 'GET') {\n      opts = opts.concat({\n        offline: false,\n        'prefer-offline': false,\n        'prefer-online': true\n      });\n    }\n\n    parsed.search = '?' + qs.stringify(query);\n    uri = url.format(parsed);\n  }\n\n  return opts.Promise.resolve(body).then(body => fetch(uri, {\n    agent: opts.agent,\n    algorithms: opts.algorithms,\n    body,\n    cache: getCacheMode(opts),\n    cacheManager: opts.cache,\n    ca: opts.ca,\n    cert: opts.cert,\n    headers,\n    integrity: opts.integrity,\n    key: opts.key,\n    localAddress: opts['local-address'],\n    maxSockets: opts.maxsockets,\n    memoize: opts.memoize,\n    method: opts.method || 'GET',\n    noProxy: opts['no-proxy'] || opts.noproxy,\n    Promise: opts.Promise,\n    proxy: opts['https-proxy'] || opts.proxy,\n    referer: opts.refer,\n    retry: opts.retry != null ? opts.retry : {\n      retries: opts['fetch-retries'],\n      factor: opts['fetch-retry-factor'],\n      minTimeout: opts['fetch-retry-mintimeout'],\n      maxTimeout: opts['fetch-retry-maxtimeout']\n    },\n    strictSSL: !!opts['strict-ssl'],\n    timeout: opts.timeout\n  }).then(res => checkResponse(opts.method || 'GET', res, registry, startTime, opts)));\n}\n\nmodule.exports.json = fetchJSON;\n\nfunction fetchJSON(uri, opts) {\n  return regFetch(uri, opts).then(res => res.json());\n}\n\nmodule.exports.json.stream = fetchJSONStream;\n\nfunction fetchJSONStream(uri, jsonPath, opts) {\n  opts = config(opts);\n  const parser = JSONStream.parse(jsonPath, opts.mapJson);\n  const pt = parser.pipe(new PassThrough({\n    objectMode: true\n  }));\n  parser.on('error', err => pt.emit('error', err));\n  regFetch(uri, opts).then(res => {\n    res.body.on('error', err => parser.emit('error', err));\n    res.body.pipe(parser);\n  }, err => pt.emit('error', err));\n  return pt;\n}\n\nmodule.exports.pickRegistry = pickRegistry;\n\nfunction pickRegistry(spec, opts) {\n  spec = npa(spec);\n  opts = config(opts);\n  let registry = spec.scope && opts[spec.scope.replace(/^@?/, '@') + ':registry'];\n\n  if (!registry && opts.scope) {\n    registry = opts[opts.scope.replace(/^@?/, '@') + ':registry'];\n  }\n\n  if (!registry) {\n    registry = opts.registry || 'https://registry.npmjs.org/';\n  }\n\n  return registry;\n}\n\nfunction getCacheMode(opts) {\n  return opts.offline ? 'only-if-cached' : opts['prefer-offline'] ? 'force-cache' : opts['prefer-online'] ? 'no-cache' : 'default';\n}\n\nfunction getHeaders(registry, uri, opts) {\n  const headers = Object.assign({\n    'npm-in-ci': !!(opts['is-from-ci'] || process.env['CI'] === 'true' || process.env['TDDIUM'] || process.env['JENKINS_URL'] || process.env['bamboo.buildKey'] || process.env['GO_PIPELINE_NAME']),\n    'npm-scope': opts['project-scope'],\n    'npm-session': opts['npm-session'],\n    'user-agent': opts['user-agent'],\n    'referer': opts.refer\n  }, opts.headers);\n  const auth = getAuth(registry, opts); // If a tarball is hosted on a different place than the manifest, only send\n  // credentials on `alwaysAuth`\n\n  const shouldAuth = auth.alwaysAuth || url.parse(uri).host === url.parse(registry).host;\n\n  if (shouldAuth && auth.token) {\n    headers.authorization = `Bearer ${auth.token}`;\n  } else if (shouldAuth && auth.username && auth.password) {\n    const encoded = Buffer.from(`${auth.username}:${auth.password}`, 'utf8').toString('base64');\n    headers.authorization = `Basic ${encoded}`;\n  } else if (shouldAuth && auth._auth) {\n    headers.authorization = `Basic ${auth._auth}`;\n  }\n\n  if (shouldAuth && auth.otp) {\n    headers['npm-otp'] = auth.otp;\n  }\n\n  return headers;\n}","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/node_modules/npm/node_modules/npm-registry-fetch/index.js"],"names":["Buffer","require","checkResponse","config","getAuth","fetch","JSONStream","npa","PassThrough","qs","url","zlib","module","exports","regFetch","uri","opts","registry","spec","pickRegistry","parse","protocol","trim","replace","startTime","Date","now","headers","getHeaders","body","bodyIsStream","pipe","isBuffer","JSON","stringify","gzip","gz","createGzip","on","err","emit","Promise","resolve","reject","q","query","TypeError","Object","keys","forEach","key","undefined","parsed","assign","length","String","write","method","concat","offline","search","format","then","agent","algorithms","cache","getCacheMode","cacheManager","ca","cert","integrity","localAddress","maxSockets","maxsockets","memoize","noProxy","noproxy","proxy","referer","refer","retry","retries","factor","minTimeout","maxTimeout","strictSSL","timeout","res","json","fetchJSON","stream","fetchJSONStream","jsonPath","parser","mapJson","pt","objectMode","scope","process","env","auth","shouldAuth","alwaysAuth","host","token","authorization","username","password","encoded","from","toString","_auth","otp"],"mappings":"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","sourcesContent":["'use strict'\n\nconst Buffer = require('safe-buffer').Buffer\n\nconst checkResponse = require('./check-response.js')\nconst config = require('./config.js')\nconst getAuth = require('./auth.js')\nconst fetch = require('make-fetch-happen')\nconst JSONStream = require('JSONStream')\nconst npa = require('npm-package-arg')\nconst {PassThrough} = require('stream')\nconst qs = require('querystring')\nconst url = require('url')\nconst zlib = require('zlib')\n\nmodule.exports = regFetch\nfunction regFetch (uri, opts) {\n  opts = config(opts)\n  const registry = (\n    (opts.spec && pickRegistry(opts.spec, opts)) ||\n    opts.registry ||\n    'https://registry.npmjs.org/'\n  )\n  uri = url.parse(uri).protocol\n    ? uri\n    : `${\n      registry.trim().replace(/\\/?$/g, '')\n    }/${\n      uri.trim().replace(/^\\//, '')\n    }`\n  // through that takes into account the scope, the prefix of `uri`, etc\n  const startTime = Date.now()\n  const headers = getHeaders(registry, uri, opts)\n  let body = opts.body\n  const bodyIsStream = body &&\n    typeof body === 'object' &&\n    typeof body.pipe === 'function'\n  if (body && !bodyIsStream && typeof body !== 'string' && !Buffer.isBuffer(body)) {\n    headers['content-type'] = headers['content-type'] || 'application/json'\n    body = JSON.stringify(body)\n  } else if (body && !headers['content-type']) {\n    headers['content-type'] = 'application/octet-stream'\n  }\n  if (opts.gzip) {\n    headers['content-encoding'] = 'gzip'\n    if (bodyIsStream) {\n      const gz = zlib.createGzip()\n      body.on('error', err => gz.emit('error', err))\n      body = body.pipe(gz)\n    } else {\n      body = new opts.Promise((resolve, reject) => {\n        zlib.gzip(body, (err, gz) => err ? reject(err) : resolve(gz))\n      })\n    }\n  }\n\n  let q = opts.query\n  if (q) {\n    if (typeof q === 'string') {\n      q = qs.parse(q)\n    } else if (typeof q !== 'object') {\n      throw new TypeError('invalid query option, must be string or object')\n    }\n    Object.keys(q).forEach(key => {\n      if (q[key] === undefined) {\n        delete q[key]\n      }\n    })\n  }\n  const parsed = url.parse(uri)\n\n  const query = parsed.query ? Object.assign(qs.parse(parsed.query), q || {})\n    : Object.keys(q || {}).length ? q\n      : null\n\n  if (query) {\n    if (String(query.write) === 'true' && opts.method === 'GET') {\n      opts = opts.concat({\n        offline: false,\n        'prefer-offline': false,\n        'prefer-online': true\n      })\n    }\n    parsed.search = '?' + qs.stringify(query)\n    uri = url.format(parsed)\n  }\n\n  return opts.Promise.resolve(body).then(body => fetch(uri, {\n    agent: opts.agent,\n    algorithms: opts.algorithms,\n    body,\n    cache: getCacheMode(opts),\n    cacheManager: opts.cache,\n    ca: opts.ca,\n    cert: opts.cert,\n    headers,\n    integrity: opts.integrity,\n    key: opts.key,\n    localAddress: opts['local-address'],\n    maxSockets: opts.maxsockets,\n    memoize: opts.memoize,\n    method: opts.method || 'GET',\n    noProxy: opts['no-proxy'] || opts.noproxy,\n    Promise: opts.Promise,\n    proxy: opts['https-proxy'] || opts.proxy,\n    referer: opts.refer,\n    retry: opts.retry != null ? opts.retry : {\n      retries: opts['fetch-retries'],\n      factor: opts['fetch-retry-factor'],\n      minTimeout: opts['fetch-retry-mintimeout'],\n      maxTimeout: opts['fetch-retry-maxtimeout']\n    },\n    strictSSL: !!opts['strict-ssl'],\n    timeout: opts.timeout\n  }).then(res => checkResponse(\n    opts.method || 'GET', res, registry, startTime, opts\n  )))\n}\n\nmodule.exports.json = fetchJSON\nfunction fetchJSON (uri, opts) {\n  return regFetch(uri, opts).then(res => res.json())\n}\n\nmodule.exports.json.stream = fetchJSONStream\nfunction fetchJSONStream (uri, jsonPath, opts) {\n  opts = config(opts)\n  const parser = JSONStream.parse(jsonPath, opts.mapJson)\n  const pt = parser.pipe(new PassThrough({objectMode: true}))\n  parser.on('error', err => pt.emit('error', err))\n  regFetch(uri, opts).then(res => {\n    res.body.on('error', err => parser.emit('error', err))\n    res.body.pipe(parser)\n  }, err => pt.emit('error', err))\n  return pt\n}\n\nmodule.exports.pickRegistry = pickRegistry\nfunction pickRegistry (spec, opts) {\n  spec = npa(spec)\n  opts = config(opts)\n  let registry = spec.scope &&\n    opts[spec.scope.replace(/^@?/, '@') + ':registry']\n\n  if (!registry && opts.scope) {\n    registry = opts[opts.scope.replace(/^@?/, '@') + ':registry']\n  }\n\n  if (!registry) {\n    registry = opts.registry || 'https://registry.npmjs.org/'\n  }\n\n  return registry\n}\n\nfunction getCacheMode (opts) {\n  return opts.offline\n    ? 'only-if-cached'\n    : opts['prefer-offline']\n      ? 'force-cache'\n      : opts['prefer-online']\n        ? 'no-cache'\n        : 'default'\n}\n\nfunction getHeaders (registry, uri, opts) {\n  const headers = Object.assign({\n    'npm-in-ci': !!(\n      opts['is-from-ci'] ||\n      process.env['CI'] === 'true' ||\n      process.env['TDDIUM'] ||\n      process.env['JENKINS_URL'] ||\n      process.env['bamboo.buildKey'] ||\n      process.env['GO_PIPELINE_NAME']\n    ),\n    'npm-scope': opts['project-scope'],\n    'npm-session': opts['npm-session'],\n    'user-agent': opts['user-agent'],\n    'referer': opts.refer\n  }, opts.headers)\n\n  const auth = getAuth(registry, opts)\n  // If a tarball is hosted on a different place than the manifest, only send\n  // credentials on `alwaysAuth`\n  const shouldAuth = (\n    auth.alwaysAuth ||\n    url.parse(uri).host === url.parse(registry).host\n  )\n  if (shouldAuth && auth.token) {\n    headers.authorization = `Bearer ${auth.token}`\n  } else if (shouldAuth && auth.username && auth.password) {\n    const encoded = Buffer.from(\n      `${auth.username}:${auth.password}`, 'utf8'\n    ).toString('base64')\n    headers.authorization = `Basic ${encoded}`\n  } else if (shouldAuth && auth._auth) {\n    headers.authorization = `Basic ${auth._auth}`\n  }\n  if (shouldAuth && auth.otp) {\n    headers['npm-otp'] = auth.otp\n  }\n  return headers\n}\n"]},"metadata":{},"sourceType":"script"}