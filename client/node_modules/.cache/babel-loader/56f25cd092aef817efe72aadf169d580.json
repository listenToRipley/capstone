{"ast":null,"code":"import { CREATE_NEW_USER } from './types';\nimport moment from 'moment';\nexport const createNewUser = (username, firstName, lastName, email, password, bDay) => async dispatch => {\n  console.log('the input looks like? ', username, firstName, lastName, email, password, bDay);\n  let dobMonth = '';\n  let dobDate = '';\n  let dobYear = '';\n\n  const modBirthday = day => {\n    console.log('happy birthday!', day.value);\n    let dob = day.value.split('-');\n    console.log(dob);\n    dobYear = dob[0];\n    dobDate = dob[1];\n    dobMonth = dob[2];\n  };\n\n  modBirthday(bDay.value);\n  console.log('make sure on the birthday', dobMonth, dobDate, dobYear);\n\n  try {\n    let res = await fetch('/preLogin/createUser', {\n      method: 'POST',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"username\": `${username.value}`,\n        \"password\": `${password.value}`,\n        \"email\": `${email.value}`,\n        \"firstName\": `${firstName.value}`,\n        \"lastName\": `${lastName.value}`,\n        \"dobMonth\": dobMonth,\n        \"dobDate\": dobDate,\n        \"dobYear\": dobYear\n      }\n    });\n    let getResult = await res.json();\n    console.log('create new user', getResult);\n    let result = { ...getResult\n    };\n    dispatch({\n      type: CREATE_NEW_USER,\n      payload: {\n        newUser: {\n          created: true,\n          returned: result\n        }\n      }\n    });\n  } catch (e) {\n    return 'what the error the user details? ', {\n      e\n    };\n  }\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/createNewUser.js"],"names":["CREATE_NEW_USER","moment","createNewUser","username","firstName","lastName","email","password","bDay","dispatch","console","log","dobMonth","dobDate","dobYear","modBirthday","day","value","dob","split","res","fetch","method","headers","Accept","getResult","json","result","type","payload","newUser","created","returned","e"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,SAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,SAAX,EAAsBC,QAAtB,EAAgCC,KAAhC,EAAuCC,QAAvC,EAAiDC,IAAjD,KAA0D,MAAMC,QAAN,IAAkB;AACvGC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCR,QAAtC,EAAgDC,SAAhD,EAA2DC,QAA3D,EAAqEC,KAArE,EAA4EC,QAA5E,EAAsFC,IAAtF;AAEA,MAAII,QAAQ,GAAG,EAAf;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,EAAd;;AAEA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3BN,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BK,GAAG,CAACC,KAAnC;AACE,QAAIC,GAAG,GAAGF,GAAG,CAACC,KAAJ,CAAUE,KAAV,CAAgB,GAAhB,CAAV;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACAJ,IAAAA,OAAO,GAACI,GAAG,CAAC,CAAD,CAAX;AACAL,IAAAA,OAAO,GAACK,GAAG,CAAC,CAAD,CAAX;AACAN,IAAAA,QAAQ,GAACM,GAAG,CAAC,CAAD,CAAZ;AACH,GAPD;;AASAH,EAAAA,WAAW,CAACP,IAAI,CAACS,KAAN,CAAX;AAEAP,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCC,QAAzC,EAAmDC,OAAnD,EAA4DC,OAA5D;;AAEA,MAAG;AACC,QAAIM,GAAG,GAAG,MAAMC,KAAK,CAAC,sBAAD,EAAyB;AAC5CC,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AACqB,wBAAgB,kBADrC;AAEP,oBAAa,GAAErB,QAAQ,CAACc,KAAM,EAFvB;AAGP,oBAAa,GAAEV,QAAQ,CAACU,KAAM,EAHvB;AAIP,iBAAU,GAAEX,KAAK,CAACW,KAAM,EAJjB;AAKP,qBAAc,GAAEb,SAAS,CAACa,KAAM,EALzB;AAMP,oBAAa,GAAEZ,QAAQ,CAACY,KAAM,EANvB;AAOP,oBAAYL,QAPL;AAQP,mBAAWC,OARJ;AASP,mBAAWC;AATJ;AAFmC,KAAzB,CAArB;AAeA,QAAIW,SAAS,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAtB;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bc,SAA/B;AACA,QAAIE,MAAM,GAAG,EAAC,GAAGF;AAAJ,KAAb;AACAhB,IAAAA,QAAQ,CAAC;AACPmB,MAAAA,IAAI,EAAE5B,eADC;AAEL6B,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE,IADF;AAEPC,UAAAA,QAAQ,EAAEL;AAFH;AADF;AAFJ,KAAD,CAAR;AASD,GA5BH,CA4BI,OAAOM,CAAP,EAAU;AACV,WAAO,qCAAqC;AAACA,MAAAA;AAAD,KAA5C;AACH;AAEF,CApDM","sourcesContent":["import {CREATE_NEW_USER} from './types'\nimport moment from 'moment'\n\nexport const createNewUser = (username, firstName, lastName, email, password, bDay) => async dispatch => {\n  console.log('the input looks like? ', username, firstName, lastName, email, password, bDay)\n\n  let dobMonth = ''\n  let dobDate = ''\n  let dobYear = ''\n\n  const modBirthday = (day) => {\n    console.log('happy birthday!', day.value)\n      let dob = day.value.split('-')\n      console.log(dob)\n      dobYear=dob[0]\n      dobDate=dob[1]\n      dobMonth=dob[2]\n  }\n\n  modBirthday(bDay.value)\n\n  console.log('make sure on the birthday', dobMonth, dobDate, dobYear)\n\n  try{\n      let res = await fetch('/preLogin/createUser', {\n        method: 'POST',\n        headers: {\n          Accept: \"application/json\", \"Content-Type\": \"application/json\",\n          \"username\": `${username.value}`,\n          \"password\": `${password.value}`,\n          \"email\": `${email.value}`,\n          \"firstName\": `${firstName.value}`,\n          \"lastName\": `${lastName.value}`,\n          \"dobMonth\": dobMonth,\n          \"dobDate\": dobDate,\n          \"dobYear\": dobYear\n        }\n      }\n      )\n      let getResult = await res.json()\n      console.log('create new user', getResult)\n      let result = {...getResult}\n      dispatch({\n        type: CREATE_NEW_USER,\n          payload: {\n            newUser: {\n              created: true,\n              returned: result\n            }\n          }\n      })\n    } catch (e) {\n      return 'what the error the user details? ', {e}\n  }\n\n}"]},"metadata":{},"sourceType":"module"}