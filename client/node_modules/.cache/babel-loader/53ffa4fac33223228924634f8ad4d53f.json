{"ast":null,"code":"import { LOGIN } from './types';\nconst baseline = `http://localhost:4001/`;\nexport const login = (username, password) => async dispatch => {\n  let path = `postLogin/`;\n  let params = `${username.value}/${password.value}`;\n  let fullPath = `${baseline}${path}${params}`.trim();\n  console.log('the path : ', fullPath);\n\n  try {\n    fetch(fullPath).then(res => res.json(token)).then(dispatch({\n      type: LOGIN,\n      payload: {\n        user: {\n          username: username.value,\n          password: '',\n          validation: true,\n          token: res\n        }\n      }\n    }));\n  } catch (e) {\n    console.log('what is the error? ', e);\n  }\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/login.js"],"names":["LOGIN","baseline","login","username","password","dispatch","path","params","value","fullPath","trim","console","log","fetch","then","res","json","token","type","payload","user","validation","e"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,SAApB;AAEA,MAAMC,QAAQ,GAAI,wBAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAMC,QAAN,IAAkB;AAC7D,MAAIC,IAAI,GAAI,YAAZ;AACA,MAAIC,MAAM,GAAI,GAAEJ,QAAQ,CAACK,KAAM,IAAGJ,QAAQ,CAACI,KAAM,EAAjD;AACA,MAAIC,QAAQ,GAAI,GAAER,QAAS,GAAEK,IAAK,GAAEC,MAAO,EAA5B,CAA8BG,IAA9B,EAAf;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,QAA3B;;AAEE,MAAG;AAECI,IAAAA,KAAK,CAACJ,QAAD,CAAL,CACCK,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,KAAT,CADb,EAECH,IAFD,CAGAT,QAAQ,CAAE;AACNa,MAAAA,IAAI,EAAElB,KADA;AAENmB,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AACJjB,UAAAA,QAAQ,EAAEA,QAAQ,CAACK,KADf;AAEJJ,UAAAA,QAAQ,EAAE,EAFN;AAGJiB,UAAAA,UAAU,EAAE,IAHR;AAIJJ,UAAAA,KAAK,EAAEF;AAJH;AADC;AAFH,KAAF,CAHR;AAeH,GAjBD,CAkBA,OAAMO,CAAN,EAAQ;AACJX,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCU,CAAnC;AACH;AAEJ,CA7BM","sourcesContent":["import {LOGIN} from './types'\n\nconst baseline = `http://localhost:4001/`\n\nexport const login = (username, password) => async dispatch => {\n  let path = `postLogin/`\n  let params = `${username.value}/${password.value}`\n  let fullPath = `${baseline}${path}${params}`.trim()\n\n  console.log('the path : ', fullPath)\n\n    try{\n\n        fetch(fullPath)\n        .then(res => res.json(token))\n        .then(\n        dispatch( {\n            type: LOGIN,\n            payload: {\n              user: {\n                username: username.value,\n                password: '',\n                validation: true,\n                token: res\n              }\n            }\n        })\n      )\n    }\n    catch(e){\n        console.log('what is the error? ', e)\n    }\n\n}"]},"metadata":{},"sourceType":"module"}