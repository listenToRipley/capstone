{"ast":null,"code":"module.exports = setUser;\n\nvar assert = require('assert');\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar mkdirp = require('gentle-fs').mkdir;\n\nfunction setUser(cb) {\n  var defaultConf = this.root;\n  assert(defaultConf !== Object.prototype); // If global, leave it as-is.\n  // If not global, then set the user to the owner of the prefix folder.\n  // Just set the default, so it can be overridden.\n\n  if (this.get('global')) return cb();\n\n  if (process.env.SUDO_UID) {\n    defaultConf.user = +process.env.SUDO_UID;\n    return cb();\n  }\n\n  var prefix = path.resolve(this.get('prefix'));\n  mkdirp(prefix, function (er) {\n    if (er) return cb(er);\n    fs.stat(prefix, function (er, st) {\n      defaultConf.user = st && st.uid;\n      return cb(er);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/node_modules/npm/lib/config/set-user.js"],"names":["module","exports","setUser","assert","require","path","fs","mkdirp","mkdir","cb","defaultConf","root","Object","prototype","get","process","env","SUDO_UID","user","prefix","resolve","er","stat","st","uid"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,OAAjB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,WAAD,CAAP,CAAqBI,KAAlC;;AAEA,SAASN,OAAT,CAAkBO,EAAlB,EAAsB;AACpB,MAAIC,WAAW,GAAG,KAAKC,IAAvB;AACAR,EAAAA,MAAM,CAACO,WAAW,KAAKE,MAAM,CAACC,SAAxB,CAAN,CAFoB,CAIpB;AACA;AACA;;AACA,MAAI,KAAKC,GAAL,CAAS,QAAT,CAAJ,EAAwB,OAAOL,EAAE,EAAT;;AACxB,MAAIM,OAAO,CAACC,GAAR,CAAYC,QAAhB,EAA0B;AACxBP,IAAAA,WAAW,CAACQ,IAAZ,GAAmB,CAAEH,OAAO,CAACC,GAAR,CAAYC,QAAjC;AACA,WAAOR,EAAE,EAAT;AACD;;AAED,MAAIU,MAAM,GAAGd,IAAI,CAACe,OAAL,CAAa,KAAKN,GAAL,CAAS,QAAT,CAAb,CAAb;AACAP,EAAAA,MAAM,CAACY,MAAD,EAAS,UAAUE,EAAV,EAAc;AAC3B,QAAIA,EAAJ,EAAQ,OAAOZ,EAAE,CAACY,EAAD,CAAT;AACRf,IAAAA,EAAE,CAACgB,IAAH,CAAQH,MAAR,EAAgB,UAAUE,EAAV,EAAcE,EAAd,EAAkB;AAChCb,MAAAA,WAAW,CAACQ,IAAZ,GAAmBK,EAAE,IAAIA,EAAE,CAACC,GAA5B;AACA,aAAOf,EAAE,CAACY,EAAD,CAAT;AACD,KAHD;AAID,GANK,CAAN;AAOD","sourcesContent":["module.exports = setUser\n\nvar assert = require('assert')\nvar path = require('path')\nvar fs = require('fs')\nvar mkdirp = require('gentle-fs').mkdir\n\nfunction setUser (cb) {\n  var defaultConf = this.root\n  assert(defaultConf !== Object.prototype)\n\n  // If global, leave it as-is.\n  // If not global, then set the user to the owner of the prefix folder.\n  // Just set the default, so it can be overridden.\n  if (this.get('global')) return cb()\n  if (process.env.SUDO_UID) {\n    defaultConf.user = +(process.env.SUDO_UID)\n    return cb()\n  }\n\n  var prefix = path.resolve(this.get('prefix'))\n  mkdirp(prefix, function (er) {\n    if (er) return cb(er)\n    fs.stat(prefix, function (er, st) {\n      defaultConf.user = st && st.uid\n      return cb(er)\n    })\n  })\n}\n"]},"metadata":{},"sourceType":"script"}