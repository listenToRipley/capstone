{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/moonbox/Documents/capstone/pantrypal/client/src/Components/ShopListHeaders.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst useStyles = makeStyles(theme => ({\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n})); // const headCells = [\n//   { id: 'quantity', numeric: true, disablePadding: false, label: 'Quantity' },\n//   { id: 'items', numeric: false, disablePadding: false, label: 'Items' },\n//   { id: 'unit', numeric: true, disablePadding: false, label: 'Unit' },\n//   { id: 'actions', numeric: false, disablePadding: false, label: 'Actions' },\n// ];\n\nconst ShopListHeaders = props => {\n  // console.log('props on shop list head? ', props)\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick // inputProps={{ 'check box for': 'items' }}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? 'center' : 'left',\n        padding: headCell.disablePadding ? 'none' : 'default'\n        /* We don't really need sorting on update and delete, we should change that  */\n        ,\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ShopListHeaders;\nShopListHeaders.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nexport default ShopListHeaders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShopListHeaders\");","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/Components/ShopListHeaders.js"],"names":["React","useEffect","PropTypes","makeStyles","Table","TableCell","TableHead","TableRow","TableSortLabel","Checkbox","IconButton","Tooltip","useStyles","theme","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","width","ShopListHeaders","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCells","map","headCell","numeric","disablePadding","id","label","propTypes","object","isRequired","number","func","oneOf","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useEffect} from 'react'\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';   const useStyles = makeStyles((theme) => ({\n      visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n      }\n    }));\n\n// const headCells = [\n//   { id: 'quantity', numeric: true, disablePadding: false, label: 'Quantity' },\n//   { id: 'items', numeric: false, disablePadding: false, label: 'Items' },\n//   { id: 'unit', numeric: true, disablePadding: false, label: 'Unit' },\n//   { id: 'actions', numeric: false, disablePadding: false, label: 'Actions' },\n// ];\n\nconst ShopListHeaders = (props) =>  {\n  // console.log('props on shop list head? ', props)\n\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell >\n        {/* update this, should only appear if they are in shop mode! If box is checked after shopping is completed, then it should be auto added to pantry and removed from list. */}\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            // inputProps={{ 'check box for': 'items' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'center' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            /* We don't really need sorting on update and delete, we should change that  */\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nShopListHeaders.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\n\n\nexport default ShopListHeaders"]},"metadata":{},"sourceType":"module"}