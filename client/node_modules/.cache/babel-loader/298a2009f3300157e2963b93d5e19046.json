{"ast":null,"code":"import { UPDATE_ITEM_ON_SHOPPING_LIST } from './types';\nexport const upShopItem = (user, pass, itemId, quantity, item) => async dispatch => {\n  let path = `/postLogin/${user}/shopList/upItem/${itemId}`;\n  console.log('the path on add item to shop?', path);\n  let updateThisEntry = JSON.stringify({\n    \"quantity\": quantity,\n    \"measure\": null,\n    \"item\": item\n  });\n\n  try {\n    let res = await fetch(path, {\n      method: 'PUT',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        token: `${pass}`\n      },\n      body: updateThisEntry\n    });\n    let getResult = await res.json();\n    console.log('get results on add item? ', getResult);\n    let result = { ...getResult\n    };\n    console.log('view the results from call', result);\n    dispatch({\n      type: UPDATE_ITEM_ON_SHOPPING_LIST,\n      payload: {\n        updatedEntry: {\n          \"quantity\": quantity,\n          \"measure\": null,\n          \"item\": item,\n          \"spoon\": itemId,\n          \"itemId\": result\n        }\n      }\n    });\n  } catch (e) {\n    return 'what the error the add to shop list? ', {\n      e\n    };\n  }\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/updateShopItem.js"],"names":["UPDATE_ITEM_ON_SHOPPING_LIST","upShopItem","user","pass","itemId","quantity","item","dispatch","path","console","log","updateThisEntry","JSON","stringify","res","fetch","method","headers","Accept","token","body","getResult","json","result","type","payload","updatedEntry","e"],"mappings":"AAAA,SAAQA,4BAAR,QAA2C,SAA3C;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,MAAb,EAAqBC,QAArB,EAA+BC,IAA/B,KAAwC,MAAMC,QAAN,IAAiB;AAEnF,MAAIC,IAAI,GAAI,cAAaN,IAAK,oBAAmBE,MAAO,EAAxD;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,IAA7C;AAEA,MAAIG,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAe;AACnC,gBAAYR,QADuB;AAEnC,eAAU,IAFyB;AAGnC,YAAOC;AAH4B,GAAf,CAAtB;;AAMA,MAAG;AACC,QAAIQ,GAAG,GAAG,MAAMC,KAAK,CAACP,IAAD,EAAO;AAC1BQ,MAAAA,MAAM,EAAE,KADkB;AAE1BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AACqB,wBAAgB,kBADrC;AAEPC,QAAAA,KAAK,EAAG,GAAEhB,IAAK;AAFR,OAFiB;AAM1BiB,MAAAA,IAAI,EAAET;AANoB,KAAP,CAArB;AASA,QAAIU,SAAS,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAtB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCW,SAAzC;AACA,QAAIE,MAAM,GAAG,EAAC,GAAGF;AAAJ,KAAb;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0Ca,MAA1C;AACAhB,IAAAA,QAAQ,CAAC;AACPiB,MAAAA,IAAI,EAAExB,4BADC;AAELyB,MAAAA,OAAO,EAAE;AACPC,QAAAA,YAAY,EAAE;AAEZ,sBAAYrB,QAFA;AAGZ,qBAAU,IAHE;AAIZ,kBAAOC,IAJK;AAKZ,mBAASF,MALG;AAMZ,oBAAUmB;AANE;AADP;AAFJ,KAAD,CAAR;AAcD,GA5BH,CA4BI,OAAOI,CAAP,EAAU;AACV,WAAO,yCAAyC;AAACA,MAAAA;AAAD,KAAhD;AACH;AAEA,CA5CM","sourcesContent":["import {UPDATE_ITEM_ON_SHOPPING_LIST} from './types'\n\nexport const upShopItem = (user, pass, itemId, quantity, item) => async dispatch =>{\n\nlet path = `/postLogin/${user}/shopList/upItem/${itemId}`\n\nconsole.log('the path on add item to shop?', path)\n\nlet updateThisEntry = JSON.stringify({\n  \"quantity\": quantity, \n  \"measure\":null, \n  \"item\":item\n})\n\ntry{\n    let res = await fetch(path, {\n      method: 'PUT',\n      headers: {\n        Accept: \"application/json\", \"Content-Type\": \"application/json\",\n        token: `${pass}`,\n      },\n      body: updateThisEntry\n    }\n    )\n    let getResult = await res.json()\n    console.log('get results on add item? ', getResult)\n    let result = {...getResult}\n    console.log('view the results from call', result)\n    dispatch({\n      type: UPDATE_ITEM_ON_SHOPPING_LIST,\n        payload: {\n          updatedEntry: {\n            \n            \"quantity\": quantity, \n            \"measure\":null, \n            \"item\":item, \n            \"spoon\": itemId,\n            \"itemId\": result\n            \n          }\n        }\n    })\n  } catch (e) {\n    return 'what the error the add to shop list? ', {e}\n}\n\n}"]},"metadata":{},"sourceType":"module"}