{"ast":null,"code":"'use strict';\n\nconst pkg = require('./package.json');\n\nconst figgyPudding = require('figgy-pudding');\n\nconst silentLog = require('./silentlog.js');\n\nconst AUTH_REGEX = /^(?:.*:)?(token|_authToken|username|_password|password|email|always-auth|_auth|otp)$/;\nconst SCOPE_REGISTRY_REGEX = /@.*:registry$/gi;\nmodule.exports = figgyPudding({\n  'agent': {},\n  'algorithms': {},\n  'body': {},\n  'ca': {},\n  'cache': {},\n  'cert': {},\n  'fetch-retries': {},\n  'fetch-retry-factor': {},\n  'fetch-retry-maxtimeout': {},\n  'fetch-retry-mintimeout': {},\n  'force-auth': {},\n  forceAuth: 'force-auth',\n  'gzip': {},\n  'headers': {},\n  'https-proxy': {},\n  'ignore-body': {},\n  ignoreBody: 'ignore-body',\n  'integrity': {},\n  'is-from-ci': 'isFromCI',\n  'isFromCI': {\n    default() {\n      return process.env['CI'] === 'true' || process.env['TDDIUM'] || process.env['JENKINS_URL'] || process.env['bamboo.buildKey'] || process.env['GO_PIPELINE_NAME'];\n    }\n\n  },\n  'key': {},\n  'local-address': {},\n  'log': {\n    default: silentLog\n  },\n  'map-json': 'mapJson',\n  'mapJSON': 'mapJson',\n  'mapJson': {},\n  'max-sockets': 'maxsockets',\n  'maxsockets': {\n    default: 12\n  },\n  'memoize': {},\n  'method': {\n    default: 'GET'\n  },\n  'no-proxy': {},\n  'noproxy': {},\n  'npm-session': 'npmSession',\n  'npmSession': {},\n  'offline': {},\n  'otp': {},\n  'prefer-offline': {},\n  'prefer-online': {},\n  'projectScope': {},\n  'project-scope': 'projectScope',\n  'Promise': {\n    default: () => Promise\n  },\n  'proxy': {},\n  'query': {},\n  'refer': {},\n  'referer': 'refer',\n  'registry': {\n    default: 'https://registry.npmjs.org/'\n  },\n  'retry': {},\n  'scope': {},\n  'spec': {},\n  'strict-ssl': {},\n  'timeout': {\n    default: 0\n  },\n  'user-agent': {\n    default: `${pkg.name}@${pkg.version}/node@${process.version}+${process.arch} (${process.platform})`\n  }\n}, {\n  other(key) {\n    return key.match(AUTH_REGEX) || key.match(SCOPE_REGISTRY_REGEX);\n  }\n\n});","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/node_modules/npm/node_modules/npm-registry-fetch/config.js"],"names":["pkg","require","figgyPudding","silentLog","AUTH_REGEX","SCOPE_REGISTRY_REGEX","module","exports","forceAuth","ignoreBody","default","process","env","Promise","name","version","arch","platform","other","key","match"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,gBAAD,CAAnB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAMG,UAAU,GAAG,sFAAnB;AACA,MAAMC,oBAAoB,GAAG,iBAA7B;AACAC,MAAM,CAACC,OAAP,GAAiBL,YAAY,CAAC;AAC5B,WAAS,EADmB;AAE5B,gBAAc,EAFc;AAG5B,UAAQ,EAHoB;AAI5B,QAAM,EAJsB;AAK5B,WAAS,EALmB;AAM5B,UAAQ,EANoB;AAO5B,mBAAiB,EAPW;AAQ5B,wBAAsB,EARM;AAS5B,4BAA0B,EATE;AAU5B,4BAA0B,EAVE;AAW5B,gBAAc,EAXc;AAY5BM,EAAAA,SAAS,EAAE,YAZiB;AAa5B,UAAQ,EAboB;AAc5B,aAAW,EAdiB;AAe5B,iBAAe,EAfa;AAgB5B,iBAAe,EAhBa;AAiB5BC,EAAAA,UAAU,EAAE,aAjBgB;AAkB5B,eAAa,EAlBe;AAmB5B,gBAAc,UAnBc;AAoB5B,cAAY;AACVC,IAAAA,OAAO,GAAI;AACT,aACEC,OAAO,CAACC,GAAR,CAAY,IAAZ,MAAsB,MAAtB,IACAD,OAAO,CAACC,GAAR,CAAY,QAAZ,CADA,IAEAD,OAAO,CAACC,GAAR,CAAY,aAAZ,CAFA,IAGAD,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAHA,IAIAD,OAAO,CAACC,GAAR,CAAY,kBAAZ,CALF;AAOD;;AATS,GApBgB;AA+B5B,SAAO,EA/BqB;AAgC5B,mBAAiB,EAhCW;AAiC5B,SAAO;AACLF,IAAAA,OAAO,EAAEP;AADJ,GAjCqB;AAoC5B,cAAY,SApCgB;AAqC5B,aAAW,SArCiB;AAsC5B,aAAW,EAtCiB;AAuC5B,iBAAe,YAvCa;AAwC5B,gBAAc;AACZO,IAAAA,OAAO,EAAE;AADG,GAxCc;AA2C5B,aAAW,EA3CiB;AA4C5B,YAAU;AACRA,IAAAA,OAAO,EAAE;AADD,GA5CkB;AA+C5B,cAAY,EA/CgB;AAgD5B,aAAW,EAhDiB;AAiD5B,iBAAe,YAjDa;AAkD5B,gBAAc,EAlDc;AAmD5B,aAAW,EAnDiB;AAoD5B,SAAO,EApDqB;AAqD5B,oBAAkB,EArDU;AAsD5B,mBAAiB,EAtDW;AAuD5B,kBAAgB,EAvDY;AAwD5B,mBAAiB,cAxDW;AAyD5B,aAAW;AAACA,IAAAA,OAAO,EAAE,MAAMG;AAAhB,GAzDiB;AA0D5B,WAAS,EA1DmB;AA2D5B,WAAS,EA3DmB;AA4D5B,WAAS,EA5DmB;AA6D5B,aAAW,OA7DiB;AA8D5B,cAAY;AACVH,IAAAA,OAAO,EAAE;AADC,GA9DgB;AAiE5B,WAAS,EAjEmB;AAkE5B,WAAS,EAlEmB;AAmE5B,UAAQ,EAnEoB;AAoE5B,gBAAc,EApEc;AAqE5B,aAAW;AACTA,IAAAA,OAAO,EAAE;AADA,GArEiB;AAwE5B,gBAAc;AACZA,IAAAA,OAAO,EAAG,GACRV,GAAG,CAACc,IACL,IACCd,GAAG,CAACe,OACL,SACCJ,OAAO,CAACI,OACT,IACCJ,OAAO,CAACK,IACT,KACCL,OAAO,CAACM,QACT;AAXW;AAxEc,CAAD,EAqF1B;AACDC,EAAAA,KAAK,CAAEC,GAAF,EAAO;AACV,WAAOA,GAAG,CAACC,KAAJ,CAAUhB,UAAV,KAAyBe,GAAG,CAACC,KAAJ,CAAUf,oBAAV,CAAhC;AACD;;AAHA,CArF0B,CAA7B","sourcesContent":["'use strict'\n\nconst pkg = require('./package.json')\nconst figgyPudding = require('figgy-pudding')\nconst silentLog = require('./silentlog.js')\n\nconst AUTH_REGEX = /^(?:.*:)?(token|_authToken|username|_password|password|email|always-auth|_auth|otp)$/\nconst SCOPE_REGISTRY_REGEX = /@.*:registry$/gi\nmodule.exports = figgyPudding({\n  'agent': {},\n  'algorithms': {},\n  'body': {},\n  'ca': {},\n  'cache': {},\n  'cert': {},\n  'fetch-retries': {},\n  'fetch-retry-factor': {},\n  'fetch-retry-maxtimeout': {},\n  'fetch-retry-mintimeout': {},\n  'force-auth': {},\n  forceAuth: 'force-auth',\n  'gzip': {},\n  'headers': {},\n  'https-proxy': {},\n  'ignore-body': {},\n  ignoreBody: 'ignore-body',\n  'integrity': {},\n  'is-from-ci': 'isFromCI',\n  'isFromCI': {\n    default () {\n      return (\n        process.env['CI'] === 'true' ||\n        process.env['TDDIUM'] ||\n        process.env['JENKINS_URL'] ||\n        process.env['bamboo.buildKey'] ||\n        process.env['GO_PIPELINE_NAME']\n      )\n    }\n  },\n  'key': {},\n  'local-address': {},\n  'log': {\n    default: silentLog\n  },\n  'map-json': 'mapJson',\n  'mapJSON': 'mapJson',\n  'mapJson': {},\n  'max-sockets': 'maxsockets',\n  'maxsockets': {\n    default: 12\n  },\n  'memoize': {},\n  'method': {\n    default: 'GET'\n  },\n  'no-proxy': {},\n  'noproxy': {},\n  'npm-session': 'npmSession',\n  'npmSession': {},\n  'offline': {},\n  'otp': {},\n  'prefer-offline': {},\n  'prefer-online': {},\n  'projectScope': {},\n  'project-scope': 'projectScope',\n  'Promise': {default: () => Promise},\n  'proxy': {},\n  'query': {},\n  'refer': {},\n  'referer': 'refer',\n  'registry': {\n    default: 'https://registry.npmjs.org/'\n  },\n  'retry': {},\n  'scope': {},\n  'spec': {},\n  'strict-ssl': {},\n  'timeout': {\n    default: 0\n  },\n  'user-agent': {\n    default: `${\n      pkg.name\n    }@${\n      pkg.version\n    }/node@${\n      process.version\n    }+${\n      process.arch\n    } (${\n      process.platform\n    })`\n  }\n}, {\n  other (key) {\n    return key.match(AUTH_REGEX) || key.match(SCOPE_REGISTRY_REGEX)\n  }\n})\n"]},"metadata":{},"sourceType":"script"}