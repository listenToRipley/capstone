{"ast":null,"code":"const mysql = require('mysql');\n\nconst pool = require('../../../sql/connection');\n\nconst {\n  handleSQLError\n} = require('../../../sql/error'); //GET\n\n\nconst justAllergies = (req, res) => {\n  let sql = 'SELECT al.allergy, al.spoonId FROM  usersAllergies AS uAl JOIN allergies AS al ON uAl.allergy=al.allergyId WHERE uAl.active=1 AND uAl.username=?'; //should input be updated to req.body.user? add conditional? \n\n  sql = mysql.format(sql, [req.user]);\n  pool.query(sql, (err, row) => {\n    if (err) return handleSQLError(res, err);\n    return res.json(row);\n  });\n}; //POST\n\n\nconst addAllergy = (req, res) => {\n  const {\n    allergyId\n  } = req.body;\n  let sql = 'INSERT INTO usersAllergies (username, allergy) VALUES (?, ?); ';\n  sql = mysql.format(sql, [req.user, allergyId]);\n  pool.query(sql, (err, results) => {\n    if (err) return handleSQLError(res, err);\n    return res.json({\n      allergyId: results.insertId\n    });\n  });\n}; //PUT \n\n\nconst removeAllergy = (req, res) => {\n  const {\n    entryId\n  } = req.params;\n  let sql = 'UPDATE usersAllergies SET active=0 WHERE uAllergyId=? AND username=?';\n  sql = mysql.format(sql, [entryId, req.user]);\n  pool.query(sql, (err, results) => {\n    if (err) return handleSQLError(res, err);\n    return res.status(204).json();\n  });\n};\n\nmodule.exports = {\n  justAllergies,\n  addAllergy,\n  removeAllergy\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/controller/users/tastes/allergies.js"],"names":["mysql","require","pool","handleSQLError","justAllergies","req","res","sql","format","user","query","err","row","json","addAllergy","allergyId","body","results","insertId","removeAllergy","entryId","params","status","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,yBAAD,CAApB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAqBF,OAAO,CAAC,oBAAD,CAAlC,C,CAGA;;;AACA,MAAMG,aAAa,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAElC,MAAIC,GAAG,GAAC,kJAAR,CAFkC,CAGlC;;AACAA,EAAAA,GAAG,GAACP,KAAK,CAACQ,MAAN,CAAaD,GAAb,EAAiB,CAACF,GAAG,CAACI,IAAL,CAAjB,CAAJ;AAEAP,EAAAA,IAAI,CAACQ,KAAL,CAAWH,GAAX,EAAgB,CAACI,GAAD,EAAMC,GAAN,KAAc;AAC5B,QAAGD,GAAH,EAAQ,OAAOR,cAAc,CAACG,GAAD,EAAMK,GAAN,CAArB;AACR,WAAOL,GAAG,CAACO,IAAJ,CAASD,GAAT,CAAP;AACD,GAHD;AAKD,CAXD,C,CAaA;;;AAEA,MAAME,UAAU,GAAG,CAACT,GAAD,EAAMC,GAAN,KAAc;AAE/B,QAAM;AAAES,IAAAA;AAAF,MAAgBV,GAAG,CAACW,IAA1B;AAEA,MAAIT,GAAG,GAAC,gEAAR;AAEAA,EAAAA,GAAG,GAACP,KAAK,CAACQ,MAAN,CAAaD,GAAb,EAAkB,CAAEF,GAAG,CAACI,IAAN,EAAYM,SAAZ,CAAlB,CAAJ;AAEAb,EAAAA,IAAI,CAACQ,KAAL,CAAWH,GAAX,EAAgB,CAACI,GAAD,EAAMM,OAAN,KAAkB;AAChC,QAAGN,GAAH,EAAQ,OAAOR,cAAc,CAACG,GAAD,EAAMK,GAAN,CAArB;AACR,WAAOL,GAAG,CAACO,IAAJ,CAAU;AAAEE,MAAAA,SAAS,EAAEE,OAAO,CAACC;AAArB,KAAV,CAAP;AACD,GAHD;AAKD,CAbD,C,CAgBA;;;AACA,MAAMC,aAAa,GAAG,CAACd,GAAD,EAAMC,GAAN,KAAc;AAElC,QAAM;AAAEc,IAAAA;AAAF,MAAcf,GAAG,CAACgB,MAAxB;AAEA,MAAId,GAAG,GAAC,sEAAR;AAEAA,EAAAA,GAAG,GAACP,KAAK,CAACQ,MAAN,CAAaD,GAAb,EAAiB,CAACa,OAAD,EAAUf,GAAG,CAACI,IAAd,CAAjB,CAAJ;AAEAP,EAAAA,IAAI,CAACQ,KAAL,CAAWH,GAAX,EAAgB,CAACI,GAAD,EAAMM,OAAN,KAAkB;AAChC,QAAIN,GAAJ,EAAS,OAAOR,cAAc,CAACG,GAAD,EAAMK,GAAN,CAArB;AACT,WAAOL,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,EAAP;AACD,GAHD;AAKD,CAbD;;AAeAU,MAAM,CAACC,OAAP,GAAiB;AACfpB,EAAAA,aADe;AAEfU,EAAAA,UAFe;AAGfK,EAAAA;AAHe,CAAjB","sourcesContent":["const mysql = require('mysql')\nconst pool = require('../../../sql/connection')\nconst { handleSQLError } = require('../../../sql/error')\n\n\n//GET\nconst justAllergies = (req, res) => {\n\n  let sql='SELECT al.allergy, al.spoonId FROM  usersAllergies AS uAl JOIN allergies AS al ON uAl.allergy=al.allergyId WHERE uAl.active=1 AND uAl.username=?'\n  //should input be updated to req.body.user? add conditional? \n  sql=mysql.format(sql,[req.user])\n\n  pool.query(sql, (err, row) => {\n    if(err) return handleSQLError(res, err)\n    return res.json(row); \n  })  \n\n}\n\n//POST\n\nconst addAllergy = (req, res) => {\n\n  const { allergyId } = req.body\n\n  let sql='INSERT INTO usersAllergies (username, allergy) VALUES (?, ?); '\n\n  sql=mysql.format(sql, [ req.user, allergyId])\n\n  pool.query(sql, (err, results) => {\n    if(err) return handleSQLError(res, err)\n    return res.json( { allergyId: results.insertId} )\n  })  \n\n}\n\n\n//PUT \nconst removeAllergy = (req, res) => {\n\n  const { entryId } = req.params\n\n  let sql='UPDATE usersAllergies SET active=0 WHERE uAllergyId=? AND username=?'\n\n  sql=mysql.format(sql,[entryId, req.user])\n\n  pool.query(sql, (err, results) => {\n    if (err) return handleSQLError(res, err)\n    return res.status(204).json();\n  })\n\n}\n\nmodule.exports = {\n  justAllergies,\n  addAllergy,\n  removeAllergy\n}"]},"metadata":{},"sourceType":"script"}