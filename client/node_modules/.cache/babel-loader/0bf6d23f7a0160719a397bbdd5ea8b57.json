{"ast":null,"code":"import { LOGIN } from './types'; // export const login = (username, password) => {\n//   console.log('the username  is :', username.value,'the password:',password.value)\n// return {\n//   type: LOGIN,\n//   payload: {\n//     user: {\n//       username: username.value,\n//       password: password.value,\n//       validation: true,\n//       token: `${username.value}+${password.value}=true~START_USING!`\n//     }\n//   }\n//  }\n// }\n// const baseline = `http://localhost:4001/`\n\nexport const login = (username, password) => async dispatch => {\n  let path = `postLogin/`;\n  let params = `${username.value}/${password.value}`;\n  let fullPath = `${path}${params}`.trim();\n  console.log('the path : ', fullPath);\n\n  try {\n    let res = await fetch(fullPath, {\n      method: 'GET',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log('can you see res? : ', res).then(res).then(res => {}).then(dispatch({\n      type: LOGIN,\n      payload: {\n        user: {\n          username: username.value,\n          password: password.value,\n          validation: true,\n          token: res.json(token)\n        }\n      }\n    }));\n  } catch (e) {\n    console.log('what is the error? ', {\n      e\n    });\n  }\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/login.js"],"names":["LOGIN","login","username","password","dispatch","path","params","value","fullPath","trim","console","log","res","fetch","method","headers","Accept","then","type","payload","user","validation","token","json","e"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,SAApB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAMC,QAAN,IAAkB;AAC7D,MAAIC,IAAI,GAAI,YAAZ;AACA,MAAIC,MAAM,GAAI,GAAEJ,QAAQ,CAACK,KAAM,IAAGJ,QAAQ,CAACI,KAAM,EAAjD;AACA,MAAIC,QAAQ,GAAI,GAAEH,IAAK,GAAEC,MAAO,EAAjB,CAAmBG,IAAnB,EAAf;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,QAA3B;;AAEE,MAAG;AAEC,QAAII,GAAG,GAAG,MAAMC,KAAK,CAACL,QAAD,EAAU;AAC7BM,MAAAA,MAAM,EAAE,KADqB;AAE7BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AACqB,wBAAgB;AADrC;AAFoB,KAAV,CAArB;AAOAN,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCC,GAAlC,EACCK,IADD,CACML,GADN,EAECK,IAFD,CAEML,GAAG,IAAI,CAEZ,CAJD,EAKCK,IALD,CAMAb,QAAQ,CAAE;AACNc,MAAAA,IAAI,EAAElB,KADA;AAENmB,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AACJlB,UAAAA,QAAQ,EAAEA,QAAQ,CAACK,KADf;AAEJJ,UAAAA,QAAQ,EAAEA,QAAQ,CAACI,KAFf;AAGJc,UAAAA,UAAU,EAAE,IAHR;AAIJC,UAAAA,KAAK,EAAEV,GAAG,CAACW,IAAJ,CAASD,KAAT;AAJH;AADC;AAFH,KAAF,CANR;AAkBH,GA3BD,CA4BA,OAAME,CAAN,EAAQ;AACJd,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC;AAACa,MAAAA;AAAD,KAAnC;AACH;AACJ,CAtCM","sourcesContent":["import {LOGIN} from './types'\n\n\n// export const login = (username, password) => {\n//   console.log('the username  is :', username.value,'the password:',password.value)\n// return {\n//   type: LOGIN,\n//   payload: {\n//     user: {\n//       username: username.value,\n//       password: password.value,\n//       validation: true,\n//       token: `${username.value}+${password.value}=true~START_USING!`\n//     }\n//   }\n//  }\n// }\n// const baseline = `http://localhost:4001/`\n\nexport const login = (username, password) => async dispatch => {\n  let path = `postLogin/`\n  let params = `${username.value}/${password.value}`\n  let fullPath = `${path}${params}`.trim()\n\n  console.log('the path : ', fullPath)\n\n    try{\n  \n        let res = await fetch(fullPath,{\n          method: 'GET',\n          headers: {\n            Accept: \"application/json\", \"Content-Type\": \"application/json\"\n            }\n        }\n        )\n        console.log('can you see res? : ',res)\n        .then(res)\n        .then(res => {\n          \n        })\n        .then(\n        dispatch( {\n            type: LOGIN,\n            payload: {\n              user: {\n                username: username.value,\n                password: password.value,\n                validation: true,\n                token: res.json(token)\n              }\n            }\n        })\n      )\n    }\n    catch(e){\n        console.log('what is the error? ', {e})\n    }\n}"]},"metadata":{},"sourceType":"module"}