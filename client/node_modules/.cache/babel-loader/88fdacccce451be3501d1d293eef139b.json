{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/moonbox/Documents/capstone/pantrypal/client/src/Components/CurrentUser/UserProfile/Tastes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useInput } from '../../../Hooks/inputHook';\nimport { library, dom } from '@fortawesome/fontawesome-svg-core';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nlibrary.add(faPlusCircle);\ndom.watch(); //display information from user sign up \n//name\n//email\n//password \n//birthday\n//option to update information - button for update and save those updates \n//setting for others to view -toggles \n//likes  - favorites \n//dislikes \n//diets \n//allergies \n//SAVE BUTTON TO COMMIT ANY CHANGES\n//need a view mode ~ see pal profile \n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    padding: 10,\n    display: 'none',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  subtitle: {\n    padding: 20\n  },\n  fields: {\n    margin: theme.spacing(4),\n    width: '90%'\n  },\n  fieldLabel: {\n    padding: theme.spacing(1)\n  },\n  form: {\n    width: '100vw',\n    // Fix IE 11 issue.\n    paddingLeft: '5%',\n    margin: theme.spacing(1) // marginBottom: theme.spacing(1),\n\n  },\n  tastes: {\n    width: '80%',\n    // Fix IE 11 issue.\n    paddingLeft: '5%',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    borderRadius: 3\n  },\n  chipPaper: {\n    padding: theme.spacing(1)\n  },\n  chipItems: {\n    margin: '.5em'\n  },\n  appBar: {\n    position: 'relative'\n  }\n}));\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\n\nconst Tastes = props => {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false); //need to populate originally from the sign in info of the user\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; //each action needs to import the index of the item and use the associated Container\n\n\n  const handleRemoveLike = () => {\n    console.log('like has been removed');\n  };\n\n  const handleAddLike = e => {\n    console.log('congrats! you just added a like!'); // e.preventDefault(); \n\n    console.log(' e is for event', e);\n  };\n\n  const handleRemoveDislike = () => {\n    console.log('dislike has been removed');\n  };\n\n  const handleAddDislike = () => {\n    console.log('congrats! you just added a dislike!');\n  };\n\n  const handleRemoveDiet = () => {\n    console.log('diet has been removed');\n  };\n\n  const handleAddDiet = () => {\n    console.log('congrats! you just added an diet!');\n  };\n\n  const handleRemoveAllergy = props => {\n    console.log('allergy has been removed');\n  };\n\n  const handleAddAllergy = () => {\n    console.log('congrats! you just added an allergy!');\n  };\n\n  let mock = ['apples', 'bananas', 'rasberries', 'potatos'];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.body,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      className: classes.subtitle,\n      children: \"Taste Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      direction: \"row\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        sm: 8,\n        md: 8,\n        component: Card,\n        elevation: 4,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.subtitle,\n            children: [\"Likes\", /*#__PURE__*/_jsxDEV(Tooltip, {\n              onClick: () => {\n                setOpen(true);\n              },\n              title: \"Add a like\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"Add Item to Your Likes List\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"fas fa-plus-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.chipPaper,\n            children: mock.map((item, idx) => {\n              return /*#__PURE__*/_jsxDEV(Chip, {\n                color: \"primary\",\n                variant: \"outlined\",\n                className: classes.chipItems,\n                onDelete: handleRemoveLike,\n                label: `${item}`\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 20\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.subtitle,\n            children: [\"Dislikes\", /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Add a dislike\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"Add Item to Your Dislikes List\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"fas fa-plus-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.chipPaper,\n            children: mock.map((item, idx) => {\n              return /*#__PURE__*/_jsxDEV(Chip, {\n                color: \"primary\",\n                variant: \"outlined\",\n                className: classes.chipItems,\n                onDelete: handleRemoveDislike,\n                label: `${item}`\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.subtitle,\n            children: [\"Diets\", /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Add a diet\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"Add Item to Your Diet List\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"fas fa-plus-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.chipPaper,\n            children: mock.map((item, idx) => {\n              return /*#__PURE__*/_jsxDEV(Chip, {\n                color: \"primary\",\n                variant: \"outlined\",\n                className: classes.chipItems,\n                onDelete: handleRemoveDiet,\n                label: `${item}`\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.subtitle,\n            children: [\"Allergies\", /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Add a allergy\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"Add Item to Allergy List\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"fas fa-plus-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.chipPaper,\n            children: mock.map((item, idx) => {\n              return /*#__PURE__*/_jsxDEV(Chip, {\n                color: \"primary\",\n                variant: \"outlined\",\n                className: classes.chipItems,\n                onDelete: handleRemoveAllergy,\n                label: `${item}`\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Tastes, \"TsAExMDA6yuxA58uE+YzDgG8Jdg=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Tastes;\nexport default withStyles(useStyles)(Tastes);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"Tastes\");","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/Components/CurrentUser/UserProfile/Tastes.js"],"names":["React","useState","Card","Paper","Chip","Typography","makeStyles","withStyles","Grid","CssBaseline","Tooltip","IconButton","useInput","library","dom","faPlusCircle","MenuItem","InputBase","SearchIcon","Button","Dialog","ListItemText","ListItem","List","Divider","AppBar","Toolbar","CloseIcon","Slide","add","watch","useStyles","theme","title","padding","display","justifyContent","breakpoints","up","subtitle","fields","margin","spacing","width","fieldLabel","form","paddingLeft","tastes","marginTop","marginBottom","borderRadius","chipPaper","chipItems","appBar","position","Transition","forwardRef","props","ref","Tastes","classes","open","setOpen","handleClickOpen","handleClose","handleRemoveLike","console","log","handleAddLike","e","handleRemoveDislike","handleAddDislike","handleRemoveDiet","handleAddDiet","handleRemoveAllergy","handleAddAllergy","mock","body","map","item","idx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState} from 'react'\nimport Card from '@material-ui/core/Card'\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton'\nimport {useInput} from '../../../Hooks/inputHook';\nimport { library, dom } from '@fortawesome/fontawesome-svg-core';\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons';\n\nimport MenuItem from '@material-ui/core/MenuItem'\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Slide from '@material-ui/core/Slide'\n\nlibrary.add(faPlusCircle) \ndom.watch()\n\n//display information from user sign up \n  //name\n  //email\n  //password \n  //birthday\n//option to update information - button for update and save those updates \n  //setting for others to view -toggles \n\n//likes  - favorites \n//dislikes \n//diets \n//allergies \n\n//SAVE BUTTON TO COMMIT ANY CHANGES\n\n//need a view mode ~ see pal profile \n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    padding: 10,\n    display: 'none',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  subtitle: {\n    padding: 20,\n  },\n  fields: {\n    margin: theme.spacing(4),\n    width: '90%',\n\n    },\n    fieldLabel: {\n      padding: theme.spacing(1),\n    },\n  form: {\n    width: '100vw', // Fix IE 11 issue.\n    paddingLeft: '5%',\n    margin: theme.spacing(1),\n    // marginBottom: theme.spacing(1),\n  },\n  tastes: {\n    width: '80%', // Fix IE 11 issue.\n    paddingLeft: '5%',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    borderRadius: 3\n  },\n  chipPaper: {\n    padding: theme.spacing(1),\n    },\n  chipItems: {\n    margin: '.5em'\n  },\n  appBar: {\n    position: 'relative',\n  },\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Tastes = (props) => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  //need to populate originally from the sign in info of the user\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  //each action needs to import the index of the item and use the associated Container\n  const handleRemoveLike = () => {\n    console.log('like has been removed')\n  }\n\n  const handleAddLike = (e) => {\n    console.log('congrats! you just added a like!')\n    // e.preventDefault(); \n    console.log(' e is for event', e)\n\n  }\n\n  const handleRemoveDislike = () => {\n    console.log('dislike has been removed')\n  }\n\n  const handleAddDislike = () => {\n    console.log('congrats! you just added a dislike!')\n  }\n\n  const handleRemoveDiet = () => {\n    console.log('diet has been removed')\n  }\n\n  const handleAddDiet = () => {\n    console.log('congrats! you just added an diet!')\n  }\n\n  const handleRemoveAllergy = (props) => {\n    console.log('allergy has been removed')\n  }\n\n  const handleAddAllergy = () => {\n    console.log('congrats! you just added an allergy!')\n  }\n\n\n  let mock = ['apples', 'bananas', 'rasberries', 'potatos']\n\n  return (\n      <Card className={classes.body}>\n      <Typography\n        component=\"h1\" \n        variant=\"h5\"\n        className={classes.subtitle} \n        >Taste Preferences</Typography>\n        {/* Will need a way to add to each of these fields and remove.  */} \n        <Grid\n          container\n          component=\"main\" \n          direction=\"row\"\n          className={classes.form}\n        >\n        <CssBaseline/>\n        <Grid\n        item\n        xs={8} sm={8} md={8} component={Card} elevation={4} \n        >\n        <div>\n        <Typography\n          className={classes.subtitle} \n          >Likes\n            <Tooltip onClick={() => {setOpen(true)}} title=\"Add a like\">\n              <IconButton   aria-label=\"Add Item to Your Likes List\">\n              <svg className=\"fas fa-plus-circle\"></svg>\n              </IconButton>\n            </Tooltip> \n          </Typography> \n\n\n          <div className={classes.chipPaper}>\n          {mock.map((item, idx) => {\n            return <Chip color=\"primary\" variant=\"outlined\" className={classes.chipItems} key={idx} onDelete={handleRemoveLike} label={`${item}`}></Chip>\n          })}\n          </div>\n        </div>\n        <div>\n          <Typography\n          className={classes.subtitle} \n          >Dislikes\n            <Tooltip title=\"Add a dislike\">\n              <IconButton  aria-label=\"Add Item to Your Dislikes List\">\n              <svg className=\"fas fa-plus-circle\"></svg>\n              </IconButton>\n            </Tooltip>\n          </Typography>\n            <div className={classes.chipPaper}>\n            {mock.map((item, idx) => {\n              return <Chip color=\"primary\" variant=\"outlined\" className={classes.chipItems} key={idx} onDelete={handleRemoveDislike} label={`${item}`}></Chip>\n            })}\n            </div>\n        </div>\n        <div>\n          <Typography\n          className={classes.subtitle} \n          >Diets\n            <Tooltip title=\"Add a diet\">\n              <IconButton  aria-label=\"Add Item to Your Diet List\">\n              <svg className=\"fas fa-plus-circle\"></svg>\n              </IconButton>\n            </Tooltip>\n          </Typography>\n\n          <div className={classes.chipPaper}>\n            {mock.map((item, idx) => {\n              return <Chip color=\"primary\" variant=\"outlined\" className={classes.chipItems} key={idx} onDelete={handleRemoveDiet} label={`${item}`}></Chip>\n            })}\n            </div>\n       </div>\n       <div>\n          <Typography\n          className={classes.subtitle} \n          >Allergies\n            <Tooltip title=\"Add a allergy\">\n              <IconButton aria-label=\"Add Item to Allergy List\">\n              <svg className=\"fas fa-plus-circle\"></svg>\n              </IconButton>\n            </Tooltip>\n          </Typography>\n            <div className={classes.chipPaper}>\n            {mock.map((item, idx) => {\n              return <Chip color=\"primary\" variant=\"outlined\" className={classes.chipItems} key={idx} onDelete={handleRemoveAllergy} label={`${item}`}></Chip>\n            })}\n            </div>\n        </div>\n        </Grid>\n      </Grid>\n      <Dialog open={open} onClose={() => setOpen(false)}/>\n    </Card>\n  ) \n}\n\nexport default withStyles(useStyles)(Tastes)"]},"metadata":{},"sourceType":"module"}