{"ast":null,"code":"import { ADD_ITEM_TO_SHOPPING_LIST } from './types';\nexport const addToShopList = (user, pass, listId, quantity, item, itemId) => async dispatch => {\n  let path = `/postLogin/shopList/${user}/addToList/${listId}`;\n  let intake = pass.token;\n  console.log('the path on add item to shop?', path);\n  let createEntry = JSON.stringify({\n    \"quantity\": quantity,\n    \"measure\": measure,\n    \"item\": item,\n    \"spoon\": itemId\n  });\n\n  try {\n    let res = await fetch(path, {\n      method: 'POST',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        token: `${intake}`\n      },\n      body: createEntry\n    });\n    let getResult = await res.json();\n    console.log('get results on add item? ', getResult);\n    let result = { ...getResult\n    };\n    console.log('view the results from call', result);\n    dispatch({\n      type: ADD_ITEM_TO_SHOPPING_LIST,\n      payload: result //should return the id of the new item added \n\n    });\n  } catch (e) {\n    return 'what the error the add to shop list? ', {\n      e\n    };\n  }\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/addToShopList.js"],"names":["ADD_ITEM_TO_SHOPPING_LIST","addToShopList","user","pass","listId","quantity","item","itemId","dispatch","path","intake","token","console","log","createEntry","JSON","stringify","measure","res","fetch","method","headers","Accept","body","getResult","json","result","type","payload","e"],"mappings":"AAAA,SAAQA,yBAAR,QAAwC,SAAxC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAMC,IAAN,EAAWC,MAAX,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmCC,MAAnC,KAA8C,MAAMC,QAAN,IAAkB;AAC3F,MAAIC,IAAI,GAAI,uBAAsBP,IAAK,cAAaE,MAAO,EAA3D;AACA,MAAIM,MAAM,GAAGP,IAAI,CAACQ,KAAlB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CJ,IAA7C;AAEA,MAAIK,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC/B,gBAAYX,QADmB;AAE/B,eAAUY,OAFqB;AAG/B,YAAOX,IAHwB;AAI/B,aAASC;AAJsB,GAAf,CAAlB;;AAOA,MAAG;AACC,QAAIW,GAAG,GAAG,MAAMC,KAAK,CAACV,IAAD,EAAO;AAC1BW,MAAAA,MAAM,EAAE,MADkB;AAE1BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AACqB,wBAAgB,kBADrC;AAEPX,QAAAA,KAAK,EAAG,GAAED,MAAO;AAFV,OAFiB;AAM1Ba,MAAAA,IAAI,EAAET;AANoB,KAAP,CAArB;AASA,QAAIU,SAAS,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAtB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCW,SAAzC;AACA,QAAIE,MAAM,GAAG,EAAC,GAAGF;AAAJ,KAAb;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0Ca,MAA1C;AACAlB,IAAAA,QAAQ,CAAC;AACPmB,MAAAA,IAAI,EAAE3B,yBADC;AAEL4B,MAAAA,OAAO,EAAEF,MAFJ,CAEU;;AAFV,KAAD,CAAR;AAID,GAlBH,CAkBI,OAAOG,CAAP,EAAU;AACV,WAAO,yCAAyC;AAACA,MAAAA;AAAD,KAAhD;AACH;AAEF,CAnCM","sourcesContent":["import {ADD_ITEM_TO_SHOPPING_LIST} from './types'\n\nexport const addToShopList = (user,pass,listId, quantity, item, itemId) => async dispatch => {\n  let path = `/postLogin/shopList/${user}/addToList/${listId}`\n  let intake = pass.token\n\n  console.log('the path on add item to shop?', path)\n\n  let createEntry = JSON.stringify({\n    \"quantity\": quantity, \n    \"measure\":measure, \n    \"item\":item, \n    \"spoon\": itemId\n  })\n\n  try{\n      let res = await fetch(path, {\n        method: 'POST',\n        headers: {\n          Accept: \"application/json\", \"Content-Type\": \"application/json\",\n          token: `${intake}`,\n        },\n        body: createEntry\n      }\n      )\n      let getResult = await res.json()\n      console.log('get results on add item? ', getResult)\n      let result = {...getResult}\n      console.log('view the results from call', result)\n      dispatch({\n        type: ADD_ITEM_TO_SHOPPING_LIST,\n          payload: result//should return the id of the new item added \n      })\n    } catch (e) {\n      return 'what the error the add to shop list? ', {e}\n  }\n\n}"]},"metadata":{},"sourceType":"module"}