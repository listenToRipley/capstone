{"ast":null,"code":"const mysql = require('mysql');\n\nconst pool = require('../../../sql/connection');\n\nconst {\n  handleSQLError\n} = require('../../../sql/error'); //POST\n\n\nconst sendMergeReq = (req, res) => {\n  //remember the requesters will the one who whose pantry will now be the primary owner and the person who requests will be come the co-owner. \n  //the person who send this will have the role of requesters, to req.user is already there\n  const {\n    pal\n  } = req.body;\n  let sql = 'INSERT INTO mergeRequests (requester, mergePal, palReq) VALUES (?, ? , (SELECT palRequestId FROM palListsRequests WHERE requesterUser=? AND pal=? OR requesterUser=? AND pal=? ))';\n  sql = mysql.format(sql, [req.user, pal, pal, req.user, req.user, pal]);\n  pool.query(sql, (err, results) => {\n    if (err) return handleSQLError(res, err);\n    return res.json({\n      newId: results.insertId\n    }); //double check this\n  });\n}; //PUT\n\n\nconst declineMergeReq = (req, res) => {\n  let sql = 'UPDATE mergeRequests SET active=0, approved=0 WHERE mergeReqId=?';\n  sql = mysql.format(sql, [req.params.mergeId]);\n  pool.query(sql, (err, results) => {\n    if (err) return handleSQLError(res, err);\n    return res.status(204).json();\n  });\n};\n\nmodule.exports = {\n  sendMergeReq,\n  declineMergeReq\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/controller/appFunc/merge/mergeActions.js"],"names":["mysql","require","pool","handleSQLError","sendMergeReq","req","res","pal","body","sql","format","user","query","err","results","json","newId","insertId","declineMergeReq","params","mergeId","status","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,yBAAD,CAApB;;AACA,MAAM;AAACE,EAAAA;AAAD,IAAmBF,OAAO,CAAC,oBAAD,CAAhC,C,CAEA;;;AACA,MAAMG,YAAY,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC;AACA;AACA,QAAM;AAACC,IAAAA;AAAD,MAAQF,GAAG,CAACG,IAAlB;AAEA,MAAIC,GAAG,GAAC,mLAAR;AAEAA,EAAAA,GAAG,GAACT,KAAK,CAACU,MAAN,CAAaD,GAAb,EAAiB,CAAEJ,GAAG,CAACM,IAAN,EAAYJ,GAAZ,EAAiBA,GAAjB,EAAsBF,GAAG,CAACM,IAA1B,EAAgCN,GAAG,CAACM,IAApC,EAA0CJ,GAA1C,CAAjB,CAAJ;AAEAL,EAAAA,IAAI,CAACU,KAAL,CAAWH,GAAX,EAAgB,CAACI,GAAD,EAAMC,OAAN,KAAkB;AAChC,QAAGD,GAAH,EAAQ,OAAOV,cAAc,CAACG,GAAD,EAAMO,GAAN,CAArB;AACR,WAAOP,GAAG,CAACS,IAAJ,CAAU;AAAEC,MAAAA,KAAK,EAAEF,OAAO,CAACG;AAAjB,KAAV,CAAP,CAFgC,CAEe;AAChD,GAHD;AAKD,CAdD,C,CAgBA;;;AAEA,MAAMC,eAAe,GAAG,CAACb,GAAD,EAAMC,GAAN,KAAc;AAErC,MAAIG,GAAG,GAAE,kEAAT;AAEAA,EAAAA,GAAG,GAACT,KAAK,CAACU,MAAN,CAAaD,GAAb,EAAkB,CAACJ,GAAG,CAACc,MAAJ,CAAWC,OAAZ,CAAlB,CAAJ;AAEAlB,EAAAA,IAAI,CAACU,KAAL,CAAWH,GAAX,EAAgB,CAACI,GAAD,EAAMC,OAAN,KAAkB;AACjC,QAAID,GAAJ,EAAS,OAAOV,cAAc,CAACG,GAAD,EAAMO,GAAN,CAArB;AACT,WAAOP,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,EAAP;AACD,GAHA;AAKA,CAXD;;AAaAO,MAAM,CAACC,OAAP,GAAiB;AACfnB,EAAAA,YADe;AAEfc,EAAAA;AAFe,CAAjB","sourcesContent":["const mysql = require('mysql')\nconst pool = require('../../../sql/connection')\nconst {handleSQLError} = require('../../../sql/error')\n\n//POST\nconst sendMergeReq = (req, res) => {\n  //remember the requesters will the one who whose pantry will now be the primary owner and the person who requests will be come the co-owner. \n  //the person who send this will have the role of requesters, to req.user is already there\n  const {pal} = req.body\n\n  let sql='INSERT INTO mergeRequests (requester, mergePal, palReq) VALUES (?, ? , (SELECT palRequestId FROM palListsRequests WHERE requesterUser=? AND pal=? OR requesterUser=? AND pal=? ))'\n\n  sql=mysql.format(sql,[ req.user, pal, pal, req.user, req.user, pal ])\n  \n  pool.query(sql, (err, results) => {\n    if(err) return handleSQLError(res, err)\n    return res.json( { newId: results.insertId} ); //double check this\n  })    \n\n}\n\n//PUT\n\nconst declineMergeReq = (req, res) => {\n\n let sql ='UPDATE mergeRequests SET active=0, approved=0 WHERE mergeReqId=?'\n\n sql=mysql.format(sql, [req.params.mergeId])\n\n pool.query(sql, (err, results) => {\n  if (err) return handleSQLError(res, err)\n  return res.status(204).json();\n})\n\n}\n\nmodule.exports = {\n  sendMergeReq,\n  declineMergeReq,\n}"]},"metadata":{},"sourceType":"script"}