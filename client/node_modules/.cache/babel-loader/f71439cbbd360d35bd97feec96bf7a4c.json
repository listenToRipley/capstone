{"ast":null,"code":"const mysql = require('mysql');\n\nconst pool = require('../../sql/connection');\n\nconst {\n  handleSQLError\n} = require('../../sql/error');\n\nconst bcrypt = require('bcrypt'); //GET \n\n\nconst forgotUsername = (req, res) => {\n  let sql = 'SELECT username FROM appInfo WHERE active=1 AND email=?';\n  sql = mysql.format(sql, [req.params.email]);\n  pool.query(sql, (err, row) => {\n    if (err) handleSQLError(res, err);\n\n    if (row.length === 0) {\n      res.send('Sorry, we cannot find a login associated with that email address.'); //should get reroute to create a login \n    } else {\n      return res.json(row);\n    }\n  });\n};\n\nmodule.exports = {\n  forgotUsername\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/controller/admin/admin.js"],"names":["mysql","require","pool","handleSQLError","bcrypt","forgotUsername","req","res","sql","format","params","email","query","err","row","length","send","json","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,sBAAD,CAApB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAqBF,OAAO,CAAC,iBAAD,CAAlC;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB,C,CAGA;;;AACA,MAAMI,cAAc,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAEnC,MAAIC,GAAG,GAAG,yDAAV;AAEAA,EAAAA,GAAG,GAAER,KAAK,CAACS,MAAN,CAAaD,GAAb,EAAkB,CAACF,GAAG,CAACI,MAAJ,CAAWC,KAAZ,CAAlB,CAAL;AAEAT,EAAAA,IAAI,CAACU,KAAL,CAAWJ,GAAX,EAAgB,CAACK,GAAD,EAAMC,GAAN,KAAc;AAC5B,QAAGD,GAAH,EAAQV,cAAc,CAACI,GAAD,EAAMM,GAAN,CAAd;;AAER,QAAGC,GAAG,CAACC,MAAJ,KAAa,CAAhB,EAAmB;AACjBR,MAAAA,GAAG,CAACS,IAAJ,CAAS,mEAAT,EADiB,CAC6D;AAC/E,KAFD,MAEO;AACN,aAAOT,GAAG,CAACU,IAAJ,CAASH,GAAT,CAAP;AACA;AACD,GARF;AASD,CAfD;;AAkBAI,MAAM,CAACC,OAAP,GAAiB;AACfd,EAAAA;AADe,CAAjB","sourcesContent":["const mysql = require('mysql')\nconst pool = require('../../sql/connection')\nconst { handleSQLError } = require('../../sql/error')\nconst bcrypt = require('bcrypt')\n\n\n//GET \nconst forgotUsername = (req, res) => {\n\n  let sql = 'SELECT username FROM appInfo WHERE active=1 AND email=?'\n\n  sql= mysql.format(sql, [req.params.email])\n\n  pool.query(sql, (err, row) => {\n    if(err) handleSQLError(res, err)\n     \n    if(row.length===0) {\n      res.send('Sorry, we cannot find a login associated with that email address.') //should get reroute to create a login \n    } else {\n     return res.json(row)\n    }\n   })\n}\n\n\nmodule.exports = { \n  forgotUsername\n}"]},"metadata":{},"sourceType":"script"}