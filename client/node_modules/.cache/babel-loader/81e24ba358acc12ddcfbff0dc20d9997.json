{"ast":null,"code":"import React, { Component, Fragment, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport Home from './Home';\nimport { useInput } from '../Hooks/inputHook';\nimport PropTypes from 'prop-types';\nimport Login from '../Containers/Login';\nlet {\n  value: username,\n  bind: bindUsername,\n  reset: resetUsername\n} = useInput('');\nlet {\n  value: password,\n  bind: bindPassword,\n  reset: resetPassword\n} = useInput('');\nlet {\n  valid,\n  setValid\n} = useState(false);\nlet {\n  nowUsername,\n  setNowUsername\n} = useState(username);\nlet {\n  nowPassword,\n  setNowPassword\n} = useState(password); //the main page, go not pass go, to not collect $200 without login in or creating a login\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh'\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1590311824865-bac58a024e51?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center'\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nclass LogIn extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.loginCookie = e => {\n      console.log('the event on your login cookie is: ', e);\n      console.log('the current state on validation is :', valid); //need to try the auth token here\n\n      e.preventDefault();\n\n      if (valid === true) {\n        debugger;\n        setNowUsername = bindUsername;\n        setNowPassword;\n        console.log('yes, valid is now true ');\n        document.cookie = \"businessCookies=\" + JSON.stringify({\n          \"username\": setNowUsername,\n          \"validation\": true,\n          \"token\": '',\n          //will have to add validate for username and password, then can be true \n          \"max-Age\": 60 * 10000,\n          \"reset\": {\n            \"resetUsername\": resetUsername,\n            \"resetLoggedIn\": resetLogin\n          }\n        });\n      }\n\n      window.location.replace('/home');\n    };\n  }\n\n  // const classes = useStyles();\n  // let {state} = props.loggedin\n  // console.log(state)\n  //states sets\n  // const {value: login, bind: bindLogin, reset: resetLogin} = useInput(false)\n  //validate password and username \n  // const sendValidation = e => {\n  //   console.log(e)\n  //   console.log('try to validate')\n  //   console.log(user)\n  // }\n  // console.log('send validation :',sendValidation)\n  componentDidMount() {\n    fetch();\n  } // \n\n\n} // LogIn.proptypes = {\n//   username: PropTypes.string.isRequired,\n//   password: PropTypes.string.isRequired,\n//   login: PropTypes.bool.isRequired,\n//   validation: PropTypes.object\n// }\n// export default withStyles(useStyles)(LogIn)\n\n\nexport default LogIn;","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/Components/LogIn.js"],"names":["React","Component","Fragment","useState","Avatar","Button","CssBaseline","TextField","Paper","Box","Grid","ListItem","LockOutlinedIcon","Typography","Link","makeStyles","withStyles","Home","useInput","PropTypes","Login","value","username","bind","bindUsername","reset","resetUsername","password","bindPassword","resetPassword","valid","setValid","nowUsername","setNowUsername","nowPassword","setNowPassword","useStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","LogIn","loginCookie","e","console","log","preventDefault","document","cookie","JSON","stringify","resetLogin","window","location","replace","componentDidMount","fetch"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,QAApC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,IAAI;AAACC,EAAAA,KAAK,EAAEC,QAAR;AAAkBC,EAAAA,IAAI,EAAEC,YAAxB;AAAsCC,EAAAA,KAAK,EAACC;AAA5C,IAA6DR,QAAQ,CAAC,EAAD,CAAzE;AACA,IAAI;AAACG,EAAAA,KAAK,EAAEM,QAAR;AAAkBJ,EAAAA,IAAI,EAAEK,YAAxB;AAAsCH,EAAAA,KAAK,EAAEI;AAA7C,IAA8DX,QAAQ,CAAC,EAAD,CAA1E;AACA,IAAI;AAACY,EAAAA,KAAD;AAAQC,EAAAA;AAAR,IAAoB5B,QAAQ,CAAC,KAAD,CAAhC;AACA,IAAI;AAAC6B,EAAAA,WAAD;AAAcC,EAAAA;AAAd,IAAgC9B,QAAQ,CAACmB,QAAD,CAA5C;AACA,IAAI;AAACY,EAAAA,WAAD;AAAcC,EAAAA;AAAd,IAAgChC,QAAQ,CAACwB,QAAD,CAA5C,C,CAEA;;AAEA,MAAMS,SAAS,GAAGrB,UAAU,CAAEsB,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ,GADiC;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EAAE,4IADZ;AAELC,IAAAA,gBAAgB,EAAE,WAFb;AAGLC,IAAAA,eAAe,EACbN,KAAK,CAACO,OAAN,CAAcC,IAAd,KAAuB,OAAvB,GAAiCR,KAAK,CAACO,OAAN,CAAcE,IAAd,CAAmB,EAAnB,CAAjC,GAA0DT,KAAK,CAACO,OAAN,CAAcE,IAAd,CAAmB,GAAnB,CAJvD;AAKLC,IAAAA,cAAc,EAAE,OALX;AAMLC,IAAAA,kBAAkB,EAAE;AANf,GAJgC;AAYvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEb,KAAK,CAACc,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADH;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GAZgC;AAkBvCC,EAAAA,MAAM,EAAE;AACNL,IAAAA,MAAM,EAAEb,KAAK,CAACc,OAAN,CAAc,CAAd,CADF;AAENR,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcY,SAAd,CAAwBC;AAFnC,GAlB+B;AAsBvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AACW;AACfC,IAAAA,SAAS,EAAEvB,KAAK,CAACc,OAAN,CAAc,CAAd;AAFP,GAtBiC;AA0BvCU,EAAAA,MAAM,EAAE;AACNX,IAAAA,MAAM,EAAEb,KAAK,CAACc,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF;AA1B+B,CAAZ,CAAD,CAA5B;;AA+BA,MAAMW,KAAN,SAAoB7D,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAuB5B8D,WAvB4B,GAuBdC,CAAC,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDF,CAAnD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDpC,KAApD,EAFiB,CAGjB;;AACAkC,MAAAA,CAAC,CAACG,cAAF;;AACA,UAAGrC,KAAK,KAAG,IAAX,EAAiB;AACf;AACAG,QAAAA,cAAc,GAACT,YAAf;AACAW,QAAAA,cAAc;AACd8B,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAE,QAAAA,QAAQ,CAACC,MAAT,GAAkB,qBAAmBC,IAAI,CAACC,SAAL,CAAe;AAClD,sBAAWtC,cADuC;AAElD,wBAAc,IAFoC;AAGlD,mBAAS,EAHyC;AAIlD;AACA,qBAAU,KAAG,KALqC;AAMlD,mBAAS;AACP,6BAAiBP,aADV;AAEP,6BAAiB8C;AAFV;AANyC,SAAf,CAArC;AAWD;;AACDC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,OAAxB;AACD,KA9C2B;AAAA;;AAC5B;AACA;AACA;AAEA;AAEA;AAGE;AACA;AACA;AACA;AAEA;AACA;AAEA;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK;AACN,GArByB,CAgD5B;;;AAhD4B,C,CAmD9B;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,eAAef,KAAf","sourcesContent":["import React, {Component, Fragment, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport Home from './Home'\nimport {useInput} from '../Hooks/inputHook';\nimport PropTypes from 'prop-types';\nimport Login from '../Containers/Login';\n\nlet {value: username, bind: bindUsername, reset:resetUsername} = useInput('')\nlet {value: password, bind: bindPassword, reset: resetPassword} = useInput('')\nlet {valid, setValid} = useState(false)\nlet {nowUsername, setNowUsername} = useState(username)\nlet {nowPassword, setNowPassword} = useState(password)\n\n//the main page, go not pass go, to not collect $200 without login in or creating a login\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1590311824865-bac58a024e51?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nclass LogIn extends Component {\n  // const classes = useStyles();\n  // let {state} = props.loggedin\n  // console.log(state)\n\n  //states sets\n\n  // const {value: login, bind: bindLogin, reset: resetLogin} = useInput(false)\n  \n\n    //validate password and username \n    // const sendValidation = e => {\n    //   console.log(e)\n    //   console.log('try to validate')\n      \n    //   console.log(user)\n    // }\n  \n    // console.log('send validation :',sendValidation)\n    componentDidMount() {\n      fetch()\n    }\n\n  loginCookie = e => {\n    console.log('the event on your login cookie is: ', e)\n    console.log('the current state on validation is :', valid)\n    //need to try the auth token here\n    e.preventDefault()\n    if(valid===true) {\n      debugger\n      setNowUsername=bindUsername\n      setNowPassword\n      console.log('yes, valid is now true ')\n      document.cookie = \"businessCookies=\"+JSON.stringify({\n        \"username\":setNowUsername,\n        \"validation\": true,\n        \"token\": '',\n        //will have to add validate for username and password, then can be true \n        \"max-Age\":60*10000,\n        \"reset\": {\n          \"resetUsername\": resetUsername,\n          \"resetLoggedIn\": resetLogin\n        }\n      })\n    }\n    window.location.replace('/home')\n  }\n \n  // \n}\n\n// LogIn.proptypes = {\n//   username: PropTypes.string.isRequired,\n//   password: PropTypes.string.isRequired,\n//   login: PropTypes.bool.isRequired,\n//   validation: PropTypes.object\n// }\n\n// export default withStyles(useStyles)(LogIn)\nexport default LogIn"]},"metadata":{},"sourceType":"module"}