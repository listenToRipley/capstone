{"ast":null,"code":"import { combineReducers } from 'redux';\nimport loginRed from './loginRed'; // import userDetails from './userDetails'\n\nimport store from '../store';\nimport nav from './nav'; //right now should not be added to anything since it is trying to stay global to pass information to components to create calls. \n\nimport userShopList from './userShopList';\nimport { LOGOUT } from '../actions/types';\nconst allReducers = combineReducers({\n  user: loginRed,\n  // userInfo: userInfo,\n  userDetails: nav,\n  shopList: userShopList\n});\n\nconst root = (state, action) => {\n  if (action.type === LOGOUT) {\n    const {\n      user,\n      userDetails\n    } = state;\n    state = {\n      user,\n      userDetails\n    };\n  } else {\n    return allReducers(state, action);\n  }\n};\n\nexport default root;","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/reducers/index.js"],"names":["combineReducers","loginRed","store","nav","userShopList","LOGOUT","allReducers","user","userDetails","shopList","root","state","action","type"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAAwB;;AACxB,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,MAAMC,WAAW,GAAGN,eAAe,CAAC;AAChCO,EAAAA,IAAI,EAAEN,QAD0B;AAEhC;AACAO,EAAAA,WAAW,EAAEL,GAHmB;AAIhCM,EAAAA,QAAQ,EAAEL;AAJsB,CAAD,CAAnC;;AAOA,MAAMM,IAAI,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5B,MAAGA,MAAM,CAACC,IAAP,KAAgBR,MAAnB,EAA2B;AACvB,UAAM;AAACE,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAsBG,KAA5B;AACAA,IAAAA,KAAK,GAAG;AAACJ,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAR;AACH,GAHD,MAGO;AACH,WAAOF,WAAW,CAACK,KAAD,EAAQC,MAAR,CAAlB;AACH;AACJ,CAPD;;AASA,eAAeF,IAAf","sourcesContent":["import { combineReducers } from 'redux'\nimport loginRed from './loginRed'\n// import userDetails from './userDetails'\nimport store from '../store'\nimport nav from './nav' //right now should not be added to anything since it is trying to stay global to pass information to components to create calls. \nimport userShopList from './userShopList'\nimport { LOGOUT } from '../actions/types'\n\nconst allReducers = combineReducers({\n    user: loginRed,\n    // userInfo: userInfo,\n    userDetails: nav,\n    shopList: userShopList\n})\n\nconst root = (state, action) => {\n    if(action.type === LOGOUT) {\n        const {user, userDetails} = state\n        state = {user, userDetails}\n    } else {\n        return allReducers(state, action)\n    }\n}\n\nexport default root  "]},"metadata":{},"sourceType":"module"}