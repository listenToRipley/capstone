{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/moonbox/Documents/capstone/pantrypal/client/src/Router/Router.js\";\nimport React from 'react';\nimport { Switch, Route } from 'react-router';\nimport LogIn from '../Containers/Login';\nimport Home from '../Containers/Home';\nimport ShoppingList from '../Containers/ShoppingList';\nimport Pantry from '../Components/Pantry/Pantry';\nimport PalList from '../Components/PalLists/PalsList';\nimport UserProfile from '../Components/CurrentUser/UserProfile/Main';\nimport PalProfile from '../Components/PalProfile/PalProfile';\nimport CreateUser from '../Containers/CreateUser';\nimport About from '../Components/About';\nimport Inbox from '../Components/CurrentUser/Inbox/Inbox';\nimport Food from '../Components/Food/Food';\nimport ForgotPassword from '../Components/AppFunc/ForgotPassword';\nimport Congrads from '../Components/Congrats';\nimport cookie from 'cookie';\nconsole.log(cookie); //this will be for when you move to login required status\n\nconst checkAuth = () => {\n  // associate with token created during login? \n  const cookies = cookie.parse(document.cookie);\n  const status = JSON.parse(cookies.logCookies).validation;\n\n  if (status) {\n    console.log('what is the status?');\n  } else {\n    console.log('denied');\n  }\n};\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => checkAuth() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 70\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}; //would like everything but the login to be protected routes, the route can be protected through the user name, if I can pass it correctly \n\n\n_c = ProtectedRoute;\n\nconst Router = () => {\n  console.log('the router change is occurring?');\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      component: LogIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/home\",\n      component: Home\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/shoppingList\",\n      component: ShoppingList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/pantry\",\n      component: Pantry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/palsList\",\n      component: PalList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/userProfile\",\n      component: UserProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/palProfile\",\n      component: PalProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/inbox\",\n      component: Inbox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/food\",\n      component: Food\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/createNewUser\",\n      component: CreateUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/about\",\n      component: About\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/forgotpassword\",\n      component: ForgotPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Router;\nexport default Router;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"Router\");","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/Router/Router.js"],"names":["React","Switch","Route","LogIn","Home","ShoppingList","Pantry","PalList","UserProfile","PalProfile","CreateUser","About","Inbox","Food","ForgotPassword","Congrads","cookie","console","log","checkAuth","cookies","parse","document","status","JSON","logCookies","validation","ProtectedRoute","component","Component","rest","props","pathname","Router"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Switch, Route} from 'react-router';\nimport LogIn from '../Containers/Login'\nimport Home from '../Containers/Home';\nimport ShoppingList from '../Containers/ShoppingList';\nimport Pantry from '../Components/Pantry/Pantry';\nimport PalList from '../Components/PalLists/PalsList';\nimport UserProfile from '../Components/CurrentUser/UserProfile/Main';\nimport PalProfile from '../Components/PalProfile/PalProfile'\nimport CreateUser from '../Containers/CreateUser';\nimport About from '../Components/About'\nimport Inbox from '../Components/CurrentUser/Inbox/Inbox'\nimport Food from '../Components/Food/Food'\nimport ForgotPassword from '../Components/AppFunc/ForgotPassword'\nimport Congrads from '../Components/Congrats'\nimport cookie from 'cookie'\n\nconsole.log(cookie)\n//this will be for when you move to login required status\nconst checkAuth = () => {\n  // associate with token created during login? \n  const cookies = cookie.parse(document.cookie)\n  const status = JSON.parse(cookies.logCookies).validation\n  if (status) {\n    console.log('what is the status?')\n  } else {\n    console.log('denied')\n  }\n}\n\nconst ProtectedRoute = ({component: Component, ...rest}) => {\n  return (\n      <Route\n          {...rest}\n          render={(props) => checkAuth() ? <Component {...props}/> : <Redirect to={{pathname:'/'}}/> }\n      />\n  )\n}\n\n\n//would like everything but the login to be protected routes, the route can be protected through the user name, if I can pass it correctly \nconst Router = () => {\n  console.log('the router change is occurring?')\n  return(\n    <Switch>\n      <Route  exact path=\"/\" component={LogIn}/>\n      <Route path=\"/home\" component={Home}/>\n      <Route path=\"/shoppingList\" component={ShoppingList}/>\n      <Route path=\"/pantry\" component={Pantry}/>\n      <Route path=\"/palsList\" component={PalList}/>\n       <Route path=\"/userProfile\" component={UserProfile}/>\n      <Route path=\"/palProfile\" component={PalProfile}/>\n      <Route path=\"/inbox\" component={Inbox}/>\n      <Route path='/food' component={Food}/>\n      \n{/* un protected routes */}\n      <Route path=\"/createNewUser\" component={CreateUser}/>\n      <Route path=\"/about\" component={About}/>\n      <Route path=\"/forgotpassword\" component={ForgotPassword}/>\n    </Switch>\n  )\n}\n\nexport default Router"]},"metadata":{},"sourceType":"module"}