{"ast":null,"code":"import { LOGIN } from './types';\nexport const login = (username, password) => async dispatch => {\n  let path = `postLogin/`;\n  let params = `${username.value}/${password.value}`;\n  let fullPath = `${path}${params}`.trim();\n\n  try {\n    let res = await fetch(fullPath, {\n      method: 'GET',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log('can you see res? : ', res);\n    let token = await res.json();\n    console.log('token?', token);\n    dispatch({\n      type: LOGIN,\n      payload: {\n        user: {\n          username: username.value,\n          password: password.value,\n          validation: true,\n          pass: token\n        }\n      }\n    });\n  } catch (e) {\n    return 'what is the error? ', {\n      e\n    };\n  }\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/login.js"],"names":["LOGIN","login","username","password","dispatch","path","params","value","fullPath","trim","res","fetch","method","headers","Accept","console","log","token","json","type","payload","user","validation","pass","e"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,SAApB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAMC,QAAN,IAAkB;AAC7D,MAAIC,IAAI,GAAI,YAAZ;AACA,MAAIC,MAAM,GAAI,GAAEJ,QAAQ,CAACK,KAAM,IAAGJ,QAAQ,CAACI,KAAM,EAAjD;AACA,MAAIC,QAAQ,GAAI,GAAEH,IAAK,GAAEC,MAAO,EAAjB,CAAmBG,IAAnB,EAAf;;AAEE,MAAG;AAEC,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAACH,QAAD,EAAU;AAC7BI,MAAAA,MAAM,EAAE,KADqB;AAE7BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AACqB,wBAAgB;AADrC;AAFoB,KAAV,CAArB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCN,GAAlC;AACA,QAAIO,KAAK,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAlB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,KAAtB;AACAb,IAAAA,QAAQ,CAAE;AACNe,MAAAA,IAAI,EAAEnB,KADA;AAENoB,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AACJnB,UAAAA,QAAQ,EAAEA,QAAQ,CAACK,KADf;AAEJJ,UAAAA,QAAQ,EAAEA,QAAQ,CAACI,KAFf;AAGJe,UAAAA,UAAU,EAAE,IAHR;AAIJC,UAAAA,IAAI,EAAEN;AAJF;AADC;AAFH,KAAF,CAAR;AAWH,GAvBD,CAwBA,OAAMO,CAAN,EAAQ;AACJ,WAAO,uBAAuB;AAACA,MAAAA;AAAD,KAA9B;AACH;AACJ,CAhCM","sourcesContent":["import {LOGIN} from './types'\n\nexport const login = (username, password) => async dispatch => {\n  let path = `postLogin/`\n  let params = `${username.value}/${password.value}`\n  let fullPath = `${path}${params}`.trim()\n\n    try{\n  \n        let res = await fetch(fullPath,{\n          method: 'GET',\n          headers: {\n            Accept: \"application/json\", \"Content-Type\": \"application/json\"\n            }\n        }\n        )\n        console.log('can you see res? : ',res)\n        let token = await res.json() \n        console.log('token?', token)\n        dispatch( {\n            type: LOGIN,\n            payload: {\n              user: {\n                username: username.value,\n                password: password.value,\n                validation: true,\n                pass: token\n              }\n            }\n        })\n    }\n    catch(e){\n        return 'what is the error? ', {e}\n    }\n}"]},"metadata":{},"sourceType":"module"}