{"ast":null,"code":"import _regeneratorRuntime from\"/Users/moonbox/Documents/capstone/pantrypal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/moonbox/Documents/capstone/pantrypal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{LOGIN}from'./types';import moment from'moment';export var login=function login(username,password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var path,res,token;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:path=\"login/\".concat(username.value,\"/\").concat(password.value);_context.prev=1;_context.next=4;return fetch(path,{method:'GET',headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"}});case 4:res=_context.sent;_context.next=7;return res.json();case 7:token=_context.sent;dispatch({type:LOGIN,payload:{user:{username:username.value,password:password.value,validation:true,pass:token,time:moment().format(\"dddd, MMMM Do YYYY, h:mm\")}}});_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",('what is the error? ',{e:_context.t0}));case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/login.js"],"names":["LOGIN","moment","login","username","password","dispatch","path","value","fetch","method","headers","Accept","res","json","token","type","payload","user","validation","pass","time","format","e"],"mappings":"+UAAA,OAAQA,KAAR,KAAoB,SAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,QAAD,CAAWC,QAAX,iGAAwB,iBAAMC,QAAN,qIACvCC,IADuC,iBACvBH,QAAQ,CAACI,KADc,aACLH,QAAQ,CAACG,KADJ,wCAIrBC,CAAAA,KAAK,CAACF,IAAD,CAAM,CACzBG,MAAM,CAAE,KADiB,CAEzBC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CACqB,eAAgB,kBADrC,CAFgB,CAAN,CAJgB,QAIjCC,GAJiC,qCAWnBA,CAAAA,GAAG,CAACC,IAAJ,EAXmB,QAWjCC,KAXiC,eAYrCT,QAAQ,CAAE,CACNU,IAAI,CAAEf,KADA,CAENgB,OAAO,CAAE,CACPC,IAAI,CAAE,CACJd,QAAQ,CAAEA,QAAQ,CAACI,KADf,CAEJH,QAAQ,CAAEA,QAAQ,CAACG,KAFf,CAGJW,UAAU,CAAE,IAHR,CAIJC,IAAI,CAAEL,KAJF,CAKJM,IAAI,CAAEnB,MAAM,GAAGoB,MAAT,CAAgB,0BAAhB,CALF,CADC,CAFH,CAAF,CAAR,CAZqC,kHA2B9B,sBAAuB,CAACC,CAAC,YAAF,CA3BO,wEAAxB,gEAAd","sourcesContent":["import {LOGIN} from './types'\nimport moment from 'moment'\n\nexport const login = (username, password) => async dispatch => {\n  let path = `login/${username.value}/${password.value}`\n  \n    try{\n        let res = await fetch(path,{\n          method: 'GET',\n          headers: {\n            Accept: \"application/json\", \"Content-Type\": \"application/json\"\n          }\n        }\n        )\n        let token = await res.json() \n        dispatch( {\n            type: LOGIN,\n            payload: {\n              user: {\n                username: username.value,\n                password: password.value,\n                validation: true,\n                pass: token,\n                time: moment().format(\"dddd, MMMM Do YYYY, h:mm\")\n              }\n            }\n        })\n  \n    }\n    catch(e){\n        return 'what is the error? ', {e}\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}