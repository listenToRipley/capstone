{"ast":null,"code":"import _regeneratorRuntime from\"/Users/moonbox/Documents/capstone/pantrypal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/moonbox/Documents/capstone/pantrypal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/moonbox/Documents/capstone/pantrypal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{UPDATE_ITEM_ON_PANTRY_LIST}from'./types';export var upPantryItem=function upPantryItem(entryId,quantity,item,spoonId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var path,intake,updateThisEntry,res,getResult,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:path=\"/postLogin/\".concat(user,\"/pantry/upItem/\").concat(entryId);intake=pass.token;updateThisEntry=JSON.stringify({\"quantity\":quantity,\"measure\":null,\"item\":item,\"spoon\":spoonId,\"entryId\":entryId});_context.prev=3;_context.next=6;return fetch(path,{method:'PUT',headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",token:\"\".concat(intake)},body:updateThisEntry});case 6:res=_context.sent;_context.next=9;return res.json();case 9:getResult=_context.sent;result=_objectSpread({},getResult);dispatch({type:UPDATE_ITEM_ON_PANTRY_LIST,payload:{updatedEntry:{\"quantity\":quantity,\"measure\":null,\"item\":item,\"spoon\":itemId,\"itemId\":result}}});_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](3);return _context.abrupt(\"return\",('what the error the add to shop list? ',{e:_context.t0}));case 17:case\"end\":return _context.stop();}}},_callee,null,[[3,14]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/updatePantryItem.js"],"names":["UPDATE_ITEM_ON_PANTRY_LIST","upPantryItem","entryId","quantity","item","spoonId","dispatch","path","user","intake","pass","token","updateThisEntry","JSON","stringify","fetch","method","headers","Accept","body","res","json","getResult","result","type","payload","updatedEntry","itemId","e"],"mappings":"ufAAA,OAAQA,0BAAR,KAAyC,SAAzC,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,CAAUC,QAAV,CAAoBC,IAApB,CAA0BC,OAA1B,iGAAsC,iBAAMC,QAAN,uKAE9DC,IAF8D,sBAEzCC,IAFyC,2BAEnBN,OAFmB,EAG9DO,MAH8D,CAGrDC,IAAI,CAACC,KAHgD,CAK9DC,eAL8D,CAK5CC,IAAI,CAACC,SAAL,CAAe,CACnC,WAAYX,QADuB,CAEnC,UAAU,IAFyB,CAGnC,OAAOC,IAH4B,CAInC,QAASC,OAJ0B,CAKnC,UAAWH,OALwB,CAAf,CAL4C,uCAc9Ca,CAAAA,KAAK,CAACR,IAAD,CAAO,CAC1BS,MAAM,CAAE,KADkB,CAE1BC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CACqB,eAAgB,kBADrC,CAEPP,KAAK,WAAKF,MAAL,CAFE,CAFiB,CAM1BU,IAAI,CAAEP,eANoB,CAAP,CAdyC,QAc1DQ,GAd0D,qCAuBxCA,CAAAA,GAAG,CAACC,IAAJ,EAvBwC,QAuB1DC,SAvB0D,eAyB1DC,MAzB0D,kBAyB7CD,SAzB6C,EA2B9DhB,QAAQ,CAAC,CACPkB,IAAI,CAAExB,0BADC,CAELyB,OAAO,CAAE,CACPC,YAAY,CAAE,CAEZ,WAAYvB,QAFA,CAGZ,UAAU,IAHE,CAIZ,OAAOC,IAJK,CAKZ,QAASuB,MALG,CAMZ,SAAUJ,MANE,CADP,CAFJ,CAAD,CAAR,CA3B8D,kHA0CvD,wCAAyC,CAACK,CAAC,YAAF,CA1Cc,wEAAtC,gEAArB","sourcesContent":["import {UPDATE_ITEM_ON_PANTRY_LIST} from './types'\n\nexport const upPantryItem = (entryId, quantity, item, spoonId) => async dispatch =>{\n\nlet path = `/postLogin/${user}/pantry/upItem/${entryId}`\nlet intake = pass.token\n\nlet updateThisEntry = JSON.stringify({\n  \"quantity\": quantity, \n  \"measure\":null, \n  \"item\":item, \n  \"spoon\": spoonId,\n  \"entryId\": entryId\n})\n\ntry{\n    let res = await fetch(path, {\n      method: 'PUT',\n      headers: {\n        Accept: \"application/json\", \"Content-Type\": \"application/json\",\n        token: `${intake}`,\n      },\n      body: updateThisEntry\n    }\n    )\n    let getResult = await res.json()\n \n    let result = {...getResult}\n  \n    dispatch({\n      type: UPDATE_ITEM_ON_PANTRY_LIST,\n        payload: {\n          updatedEntry: {\n            \n            \"quantity\": quantity, \n            \"measure\":null, \n            \"item\":item, \n            \"spoon\": itemId,\n            \"itemId\": result\n            \n          }\n        }\n    })\n  } catch (e) {\n    return 'what the error the add to shop list? ', {e}\n}\n\n}"]},"metadata":{},"sourceType":"module"}