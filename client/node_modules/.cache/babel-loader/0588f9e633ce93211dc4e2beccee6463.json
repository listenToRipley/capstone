{"ast":null,"code":"import { combineReducers } from 'redux';\nimport loginRed from './loginRed';\nimport state from '../state';\nimport store from '../store';\nimport nav from './nav';\nimport userShopList from './userShopList';\nimport createNewUser from './createNewUser';\nimport setFoodFinder from './setFoodFinder';\nimport { LOGOUT } from '../actions/types';\nconst allReducers = combineReducers({\n  user: loginRed,\n  userDetails: nav,\n  userShopList: userShopList,\n  newUser: createNewUser,\n  openFoodFinder: setFoodFinder\n});\n\nconst root = (state, action) => {\n  if (action.type === LOGOUT) {\n    return state;\n  } else {\n    return allReducers(state, action);\n  }\n};\n\nexport default root;","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/reducers/index.js"],"names":["combineReducers","loginRed","state","store","nav","userShopList","createNewUser","setFoodFinder","LOGOUT","allReducers","user","userDetails","newUser","openFoodFinder","root","action","type"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAChCU,EAAAA,IAAI,EAAET,QAD0B;AAEhCU,EAAAA,WAAW,EAAEP,GAFmB;AAGhCC,EAAAA,YAAY,EAAEA,YAHkB;AAIhCO,EAAAA,OAAO,EAAEN,aAJuB;AAKhCO,EAAAA,cAAc,EAAEN;AALgB,CAAD,CAAnC;;AAQA,MAAMO,IAAI,GAAG,CAACZ,KAAD,EAAQa,MAAR,KAAmB;AAC5B,MAAGA,MAAM,CAACC,IAAP,KAAgBR,MAAnB,EAA2B;AACvB,WAAON,KAAP;AACH,GAFD,MAEO;AACH,WAAOO,WAAW,CAACP,KAAD,EAAQa,MAAR,CAAlB;AACH;AACJ,CAND;;AAQA,eAAeD,IAAf","sourcesContent":["import { combineReducers } from 'redux'\nimport loginRed from './loginRed'\nimport state from '../state'\nimport store from '../store'\nimport nav from './nav' \nimport userShopList from './userShopList'\nimport createNewUser from './createNewUser'\nimport setFoodFinder from './setFoodFinder'\nimport { LOGOUT } from '../actions/types'\n\nconst allReducers = combineReducers({\n    user: loginRed,\n    userDetails: nav,\n    userShopList: userShopList,\n    newUser: createNewUser,\n    openFoodFinder: setFoodFinder\n})\n\nconst root = (state, action) => {\n    if(action.type === LOGOUT) {\n        return state\n    } else {\n        return allReducers(state, action)\n    }\n}\n\nexport default root  "]},"metadata":{},"sourceType":"module"}