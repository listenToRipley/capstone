{"ast":null,"code":"import { combineReducers } from 'redux';\nimport loginRed from './loginRed'; // import userDetails from './userDetails'\n\nimport state from '../state';\nimport store from '../store';\nimport nav from './nav';\nimport userShopList from './userShopList';\nimport createNewUser from './createNewUser';\nimport { LOGOUT } from '../actions/types';\nconst allReducers = combineReducers({\n  user: loginRed,\n  // userInfo: userInfo,\n  userDetails: nav,\n  userShopList: userShopList,\n  newUser: createNewUser\n});\nconsole.log('understand the all reducers', allReducers.userShopList);\n\nconst root = (state, action) => {\n  if (action.type === LOGOUT) {\n    return state;\n  } else {\n    return allReducers(state, action);\n  }\n};\n\nexport default root;","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/reducers/index.js"],"names":["combineReducers","loginRed","state","store","nav","userShopList","createNewUser","LOGOUT","allReducers","user","userDetails","newUser","console","log","root","action","type"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,MAAMC,WAAW,GAAGR,eAAe,CAAC;AAChCS,EAAAA,IAAI,EAAER,QAD0B;AAEhC;AACAS,EAAAA,WAAW,EAAEN,GAHmB;AAIhCC,EAAAA,YAAY,EAAEA,YAJkB;AAKhCM,EAAAA,OAAO,EAAEL;AALuB,CAAD,CAAnC;AAQAM,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CL,WAAW,CAACH,YAAvD;;AAEA,MAAMS,IAAI,GAAG,CAACZ,KAAD,EAAQa,MAAR,KAAmB;AAC5B,MAAGA,MAAM,CAACC,IAAP,KAAgBT,MAAnB,EAA2B;AACvB,WAAOL,KAAP;AACH,GAFD,MAEO;AACH,WAAOM,WAAW,CAACN,KAAD,EAAQa,MAAR,CAAlB;AACH;AACJ,CAND;;AAQA,eAAeD,IAAf","sourcesContent":["import { combineReducers } from 'redux'\nimport loginRed from './loginRed'\n// import userDetails from './userDetails'\nimport state from '../state'\nimport store from '../store'\nimport nav from './nav' \nimport userShopList from './userShopList'\nimport createNewUser from './createNewUser'\nimport { LOGOUT } from '../actions/types'\n\nconst allReducers = combineReducers({\n    user: loginRed,\n    // userInfo: userInfo,\n    userDetails: nav,\n    userShopList: userShopList,\n    newUser: createNewUser\n})\n\nconsole.log('understand the all reducers', allReducers.userShopList)\n\nconst root = (state, action) => {\n    if(action.type === LOGOUT) {\n        return state\n    } else {\n        return allReducers(state, action)\n    }\n}\n\nexport default root  "]},"metadata":{},"sourceType":"module"}