{"ast":null,"code":"import { YOUR_SHOPPING_LIST, ADD_ITEM_TO_SHOPPING_LIST, REMOVE_FROM_SHOPPING_LIST, UPDATE_ITEM_ON_SHOPPING_LIST } from '../actions/types';\nimport state from '../state';\nlet initialState = { ...state\n};\nexport default function (state = { ...initialState.userShopList\n}, action) {\n  switch (action.type) {\n    case YOUR_SHOPPING_LIST:\n      return action.payload.userShopList;\n\n    case ADD_ITEM_TO_SHOPPING_LIST:\n      return [...state, action.payload.newEntry];\n    //the result of this action should be an amended shop list \n\n    case UPDATE_ITEM_ON_SHOPPING_LIST:\n      const newState = [...state]; //remove \n\n      return newState;\n    //the state with the information updated \n\n    case REMOVE_FROM_SHOPPING_LIST:\n      return state;\n    //the state without the item removed \n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/reducers/userShopList.js"],"names":["YOUR_SHOPPING_LIST","ADD_ITEM_TO_SHOPPING_LIST","REMOVE_FROM_SHOPPING_LIST","UPDATE_ITEM_ON_SHOPPING_LIST","state","initialState","userShopList","action","type","payload","newEntry","newState"],"mappings":"AAAA,SAAQA,kBAAR,EAA4BC,yBAA5B,EAAuDC,yBAAvD,EAAkFC,4BAAlF,QAAqH,kBAArH;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAIC,YAAY,GAAG,EAAC,GAAGD;AAAJ,CAAnB;AAEA,eAAe,UAASA,KAAK,GAAG,EAAC,GAAGC,YAAY,CAACC;AAAjB,CAAjB,EAAiDC,MAAjD,EAAyD;AAEtE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,kBAAL;AACA,aAAOO,MAAM,CAACE,OAAP,CAAeH,YAAtB;;AACA,SAAKL,yBAAL;AACA,aAAO,CAAC,GAAGG,KAAJ,EAAWG,MAAM,CAACE,OAAP,CAAeC,QAA1B,CAAP;AAA2C;;AAC3C,SAAKP,4BAAL;AACE,YAAMQ,QAAQ,GAAG,CAAC,GAAGP,KAAJ,CAAjB,CADF,CAC8B;;AAC9B,aAAOO,QAAP;AAAgB;;AAChB,SAAKT,yBAAL;AACA,aAAOE,KAAP;AAAa;;AACb;AAAS,aAAOA,KAAP;AAVX;AAYD","sourcesContent":["import {YOUR_SHOPPING_LIST, ADD_ITEM_TO_SHOPPING_LIST, REMOVE_FROM_SHOPPING_LIST, UPDATE_ITEM_ON_SHOPPING_LIST} from '../actions/types'\nimport state from '../state'\n\nlet initialState = {...state}\n\nexport default function(state = {...initialState.userShopList}, action) {\n \n  switch(action.type) {\n    case YOUR_SHOPPING_LIST:\n    return action.payload.userShopList\n    case ADD_ITEM_TO_SHOPPING_LIST: \n    return [...state, action.payload.newEntry] //the result of this action should be an amended shop list \n    case UPDATE_ITEM_ON_SHOPPING_LIST:\n      const newState = [...state] //remove \n    return newState //the state with the information updated \n    case REMOVE_FROM_SHOPPING_LIST:\n    return state //the state without the item removed \n    default: return state\n  }\n}"]},"metadata":{},"sourceType":"module"}