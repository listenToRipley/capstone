{"ast":null,"code":"import { combineReducers } from 'redux';\nimport loginRed from './loginRed';\nimport state from '../state';\nimport store from '../store';\nimport nav from './nav';\nimport userShopList from './userShopList';\nimport createNewUser from './createNewUser';\nimport openFoodFinder from './openFoodFinder';\nimport findFood from './findFood';\nimport contentShifter from './contentShifter';\nimport { LOGOUT } from '../actions/types';\nlet reset = {\n  openDrawer: contentShifter,\n  user: {\n    username: '',\n    password: '',\n    validation: false,\n    pass: '',\n    time: ''\n  },\n  userDetails: {\n    userLocationId: '',\n    displayPrefId: '',\n    pantryId: '',\n    shopListId: '',\n    palListId: '',\n    accessId: '',\n    run: false\n  },\n  newUser: false,\n  userShopList: {\n    call: false,\n    list: []\n  },\n  openFoodFinder: false,\n  searchResults: []\n};\nconst allReducers = combineReducers({\n  user: loginRed,\n  userDetails: nav,\n  userShopList: userShopList,\n  newUser: createNewUser,\n  openFoodFinder: openFoodFinder,\n  searchResults: findFood\n});\n\nconst root = (state, action) => {\n  if (action.type === LOGOUT) {\n    return reset;\n  } else {\n    return allReducers(state, action);\n  }\n};\n\nexport default root;","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/reducers/index.js"],"names":["combineReducers","loginRed","state","store","nav","userShopList","createNewUser","openFoodFinder","findFood","contentShifter","LOGOUT","reset","openDrawer","user","username","password","validation","pass","time","userDetails","userLocationId","displayPrefId","pantryId","shopListId","palListId","accessId","run","newUser","call","list","searchResults","allReducers","root","action","type"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,IAAIC,KAAK,GAAG;AACRC,EAAAA,UAAU,EAAEH,cADJ;AAERI,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAC,EADL;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,UAAU,EAAC,KAHP;AAIJC,IAAAA,IAAI,EAAE,EAJF;AAKJC,IAAAA,IAAI,EAAC;AALD,GAFE;AASRC,EAAAA,WAAW,EAAE;AACXC,IAAAA,cAAc,EAAC,EADJ;AAEXC,IAAAA,aAAa,EAAC,EAFH;AAGXC,IAAAA,QAAQ,EAAC,EAHE;AAIXC,IAAAA,UAAU,EAAC,EAJA;AAKXC,IAAAA,SAAS,EAAC,EALC;AAMXC,IAAAA,QAAQ,EAAC,EANE;AAOXC,IAAAA,GAAG,EAAE;AAPM,GATL;AAkBRC,EAAAA,OAAO,EAAE,KAlBD;AAmBRtB,EAAAA,YAAY,EAAE;AACZuB,IAAAA,IAAI,EAAE,KADM;AAEZC,IAAAA,IAAI,EAAE;AAFM,GAnBN;AAuBRtB,EAAAA,cAAc,EAAE,KAvBR;AAwBRuB,EAAAA,aAAa,EAAE;AAxBP,CAAZ;AA4BA,MAAMC,WAAW,GAAG/B,eAAe,CAAC;AAChCa,EAAAA,IAAI,EAAEZ,QAD0B;AAEhCkB,EAAAA,WAAW,EAAEf,GAFmB;AAGhCC,EAAAA,YAAY,EAAEA,YAHkB;AAIhCsB,EAAAA,OAAO,EAAErB,aAJuB;AAKhCC,EAAAA,cAAc,EAAEA,cALgB;AAMhCuB,EAAAA,aAAa,EAAEtB;AANiB,CAAD,CAAnC;;AAUA,MAAMwB,IAAI,GAAG,CAAC9B,KAAD,EAAQ+B,MAAR,KAAmB;AAC5B,MAAGA,MAAM,CAACC,IAAP,KAAgBxB,MAAnB,EAA2B;AACvB,WAAOC,KAAP;AACH,GAFD,MAEO;AACH,WAAOoB,WAAW,CAAC7B,KAAD,EAAQ+B,MAAR,CAAlB;AACH;AACJ,CAND;;AAQA,eAAeD,IAAf","sourcesContent":["import { combineReducers } from 'redux'\nimport loginRed from './loginRed'\nimport state from '../state'\nimport store from '../store'\nimport nav from './nav' \nimport userShopList from './userShopList'\nimport createNewUser from './createNewUser'\nimport openFoodFinder from './openFoodFinder'\nimport findFood from './findFood'\nimport contentShifter from './contentShifter'\nimport { LOGOUT } from '../actions/types'\n\nlet reset = {\n    openDrawer: contentShifter,\n    user: {\n      username:'',\n      password: '',\n      validation:false,\n      pass: '',\n      time:''\n    },  \n    userDetails: { \n      userLocationId:'' ,\n      displayPrefId:'', \n      pantryId:'', \n      shopListId:'', \n      palListId:'', \n      accessId:'',\n      run: false\n    },\n    newUser: false,\n    userShopList: {\n      call: false,\n      list: []\n    },\n    openFoodFinder: false,\n    searchResults: []\n\n  }\n\nconst allReducers = combineReducers({\n    user: loginRed,\n    userDetails: nav,\n    userShopList: userShopList,\n    newUser: createNewUser,\n    openFoodFinder: openFoodFinder,\n    searchResults: findFood,\n\n})\n\nconst root = (state, action) => {\n    if(action.type === LOGOUT) {\n        return reset\n    } else {\n        return allReducers(state, action)\n    }\n}\n\nexport default root  "]},"metadata":{},"sourceType":"module"}