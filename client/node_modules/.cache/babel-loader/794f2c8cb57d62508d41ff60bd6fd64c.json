{"ast":null,"code":"import { combineReducers } from 'redux'; // //add content for each action \n// const createUser = (state = [], action) => {\n//   switch(action.type) {\n//     case 'CREATE_NEW_USER': {\n//       return state\n//     }\n//   }\n// }\n\nconst logIn = (state = [], action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return [...state, action.value];\n\n    default:\n      return state;\n  }\n};\n\nconst findFood = (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_FOOD':\n      return action.payload;\n\n    default:\n      return state;\n    // should return the search items \n  } // this is only function of this, it will be used in a number of other locations. \n\n};\n\nconst myPantry = (state = [], action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst myShopList = (state = [], action) => {};\n\nconst myPalList = () => {};\n\nconst merge = () => {};\n\nconst palsPantry = (state = [], action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst palShopList = (state = [], action) => {};\n\nconst palsPalList = () => {};\n\nexport default combineReducers({\n  //import action options \n  // createUser,\n  logIn,\n  findFood // myPantry,\n  // myShopList,\n  // myPalList,\n  // merge,\n  // palsPantry,\n  // palShopList,\n  // palsPalList\n\n});","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/reducers.js"],"names":["combineReducers","logIn","state","action","type","value","findFood","payload","myPantry","myShopList","myPalList","merge","palsPantry","palShopList","palsPalList"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACpC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,OAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,KAAlB,CAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD;;AASA,MAAMI,QAAQ,GAAG,CAACJ,KAAK,GAAE,EAAR,EAAYC,MAAZ,KAAuB;AACtC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,YAAL;AACE,aAAOD,MAAM,CAACI,OAAd;;AACF;AACE,aAAOL,KAAP;AACC;AALL,GADsC,CAOpC;;AACH,CARD;;AAUA,MAAMM,QAAQ,GAAG,CAACN,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB;AACrC,UAAOA,MAAM,CAACC,IAAd;AACE;AACA,aAAOF,KAAP;AAFF;AAID,CALD;;AAOA,MAAMO,UAAU,GAAG,CAACP,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB,CAExC,CAFD;;AAIA,MAAMO,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAIA,MAAMC,KAAK,GAAG,MAAM,CAEnB,CAFD;;AAKA,MAAMC,UAAU,GAAG,CAACV,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB;AACvC,UAAOA,MAAM,CAACC,IAAd;AACE;AACA,aAAOF,KAAP;AAFF;AAID,CALD;;AAOA,MAAMW,WAAW,GAAG,CAACX,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB,CAEzC,CAFD;;AAIA,MAAMW,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAKA,eAAed,eAAe,CAAC;AAC7B;AACA;AACAC,EAAAA,KAH6B;AAI7BK,EAAAA,QAJ6B,CAK7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAX6B,CAAD,CAA9B","sourcesContent":["import {combineReducers} from 'redux';\n\n// //add content for each action \n// const createUser = (state = [], action) => {\n//   switch(action.type) {\n//     case 'CREATE_NEW_USER': {\n//       return state\n//     }\n//   }\n// }\n\n\nconst logIn = (state = [], action) => {\n  switch(action.type) {\n    case 'LOGIN':\n      return [...state, action.value]\n    default: \n      return state\n  }  \n}\n\nconst findFood = (state =[], action) => {\n  switch(action.type) {\n    case 'FETCH_FOOD':\n      return action.payload \n    default:\n      return state\n       // should return the search items \n  } // this is only function of this, it will be used in a number of other locations. \n}\n\nconst myPantry = (state=[], action) => {\n  switch(action.type) {\n    default: \n    return state\n  }\n}\n\nconst myShopList = (state=[], action) => {\n\n}\n\nconst myPalList = () => {\n\n}\n\nconst merge = () => {\n\n}\n\n\nconst palsPantry = (state=[], action) => {\n  switch(action.type) {\n    default: \n    return state\n  }\n}\n\nconst palShopList = (state=[], action) => {\n\n}\n\nconst palsPalList = () => {\n\n}\n\n\nexport default combineReducers({\n  //import action options \n  // createUser,\n  logIn,\n  findFood,\n  // myPantry,\n  // myShopList,\n  // myPalList,\n  // merge,\n  // palsPantry,\n  // palShopList,\n  // palsPalList\n})"]},"metadata":{},"sourceType":"module"}