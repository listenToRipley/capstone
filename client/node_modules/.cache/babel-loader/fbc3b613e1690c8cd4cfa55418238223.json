{"ast":null,"code":"const mysql = require('mysql');\n\nconst pool = require('../../../sql/connection');\n\nconst {\n  handleSQLError\n} = require('../../../sql/error'); //GET\n\n\nconst justDiets = (req, res) => {\n  let sql = 'SELECT uD.uDietId AS id, d.diet FROM usersDiets AS uD JOIN diets AS d ON uD.diet=d.dietId WHERE uD.active=1 AND uD.username=?';\n  sql = mysql.format(sql, [req.user]);\n  pool.query(sql, (err, row) => {\n    if (err) return handleSQLError(res, err);\n    return res.json(row);\n  });\n}; //POST\n\n\nconst addDiet = (req, res) => {\n  const {\n    dietId\n  } = req.body;\n  let sql = 'INSERT INTO usersDiets (username, diet) VALUES (?, ?)';\n  sql = mysql.format(sql, [req.user, dietId]);\n  pool.query(sql, (err, results) => {\n    if (err) return handleSQLError(res, err);\n    return res.json({\n      dietId: results.insertId\n    });\n  });\n}; //PUT\n\n\nconst removeDiet = (req, res) => {\n  const {\n    entryId\n  } = req.params;\n  let sql = 'UPDATE usersDiets SET active=0 WHERE uDietId=? AND username=?';\n  sql = mysql.format(sql, [entryId, req.user]);\n  pool.query(sql, (err, results) => {\n    if (err) return handleSQLError(res, err);\n    return res.status(204).json();\n  });\n};\n\nmodule.exports = {\n  justDiets,\n  addDiet,\n  removeDiet\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/controller/users/tastes/diets.js"],"names":["mysql","require","pool","handleSQLError","justDiets","req","res","sql","format","user","query","err","row","json","addDiet","dietId","body","results","insertId","removeDiet","entryId","params","status","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,yBAAD,CAApB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAqBF,OAAO,CAAC,oBAAD,CAAlC,C,CAEA;;;AACA,MAAMG,SAAS,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAE9B,MAAIC,GAAG,GAAC,+HAAR;AAEAA,EAAAA,GAAG,GAACP,KAAK,CAACQ,MAAN,CAAaD,GAAb,EAAiB,CAACF,GAAG,CAACI,IAAL,CAAjB,CAAJ;AAEAP,EAAAA,IAAI,CAACQ,KAAL,CAAWH,GAAX,EAAgB,CAACI,GAAD,EAAMC,GAAN,KAAc;AAC5B,QAAGD,GAAH,EAAQ,OAAOR,cAAc,CAACG,GAAD,EAAMK,GAAN,CAArB;AACR,WAAOL,GAAG,CAACO,IAAJ,CAASD,GAAT,CAAP;AACD,GAHD;AAKD,CAXD,C,CAaA;;;AAEA,MAAME,OAAO,GAAG,CAACT,GAAD,EAAMC,GAAN,KAAc;AAE5B,QAAM;AAACS,IAAAA;AAAD,MAAWV,GAAG,CAACW,IAArB;AAEA,MAAIT,GAAG,GAAC,uDAAR;AAEAA,EAAAA,GAAG,GAACP,KAAK,CAACQ,MAAN,CAAaD,GAAb,EAAiB,CAAEF,GAAG,CAACI,IAAN,EAAYM,MAAZ,CAAjB,CAAJ;AAEAb,EAAAA,IAAI,CAACQ,KAAL,CAAWH,GAAX,EAAgB,CAACI,GAAD,EAAMM,OAAN,KAAkB;AAChC,QAAGN,GAAH,EAAQ,OAAOR,cAAc,CAACG,GAAD,EAAMK,GAAN,CAArB;AACR,WAAOL,GAAG,CAACO,IAAJ,CAAU;AAAEE,MAAAA,MAAM,EAAEE,OAAO,CAACC;AAAlB,KAAV,CAAP;AACD,GAHD;AAKD,CAbD,C,CAeA;;;AAEA,MAAMC,UAAU,GAAG,CAACd,GAAD,EAAMC,GAAN,KAAc;AAE/B,QAAM;AAACc,IAAAA;AAAD,MAAYf,GAAG,CAACgB,MAAtB;AAEA,MAAId,GAAG,GAAC,+DAAR;AAEAA,EAAAA,GAAG,GAACP,KAAK,CAACQ,MAAN,CAAaD,GAAb,EAAiB,CAACa,OAAD,EAAUf,GAAG,CAACI,IAAd,CAAjB,CAAJ;AAEAP,EAAAA,IAAI,CAACQ,KAAL,CAAWH,GAAX,EAAgB,CAACI,GAAD,EAAMM,OAAN,KAAkB;AAChC,QAAIN,GAAJ,EAAS,OAAOR,cAAc,CAACG,GAAD,EAAMK,GAAN,CAArB;AACT,WAAOL,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,EAAP;AACD,GAHD;AAID,CAZD;;AAeAU,MAAM,CAACC,OAAP,GAAiB;AACfpB,EAAAA,SADe;AAEfU,EAAAA,OAFe;AAGfK,EAAAA;AAHe,CAAjB","sourcesContent":["const mysql = require('mysql')\nconst pool = require('../../../sql/connection')\nconst { handleSQLError } = require('../../../sql/error')\n\n//GET\nconst justDiets = (req, res) => {\n\n  let sql='SELECT uD.uDietId AS id, d.diet FROM usersDiets AS uD JOIN diets AS d ON uD.diet=d.dietId WHERE uD.active=1 AND uD.username=?'\n\n  sql=mysql.format(sql,[req.user])\n\n  pool.query(sql, (err, row) => {\n    if(err) return handleSQLError(res, err)\n    return res.json(row); \n  })  \n\n} \n\n//POST\n\nconst addDiet = (req, res) => {\n\n  const {dietId} = req.body\n\n  let sql='INSERT INTO usersDiets (username, diet) VALUES (?, ?)'\n\n  sql=mysql.format(sql,[ req.user, dietId])\n\n  pool.query(sql, (err, results) => {\n    if(err) return handleSQLError(res, err)\n    return res.json( { dietId: results.insertId} )\n  })  \n\n}\n\n//PUT\n\nconst removeDiet = (req, res) => {\n\n  const {entryId} = req.params\n\n  let sql='UPDATE usersDiets SET active=0 WHERE uDietId=? AND username=?'\n\n  sql=mysql.format(sql,[entryId, req.user])\n\n  pool.query(sql, (err, results) => {\n    if (err) return handleSQLError(res, err)\n    return res.status(204).json();\n  })\n}\n\n\nmodule.exports = {\n  justDiets,\n  addDiet,\n  removeDiet\n}"]},"metadata":{},"sourceType":"script"}