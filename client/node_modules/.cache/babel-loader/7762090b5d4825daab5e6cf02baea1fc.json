{"ast":null,"code":"'use strict';\n\nvar log = require('npmlog');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar perf = new EventEmitter();\nmodule.exports = perf;\nvar timings = {};\nprocess.on('time', time);\nprocess.on('timeEnd', timeEnd);\nperf.on('time', time);\nperf.on('timeEnd', timeEnd);\n\nfunction time(name) {\n  timings[name] = Date.now();\n}\n\nfunction timeEnd(name) {\n  if (name in timings) {\n    perf.emit('timing', name, Date.now() - timings[name]);\n    delete timings[name];\n  } else {\n    log.silly('timing', \"Tried to end timer that doesn't exist:\", name);\n  }\n}","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/node_modules/npm/lib/utils/perf.js"],"names":["log","require","EventEmitter","perf","module","exports","timings","process","on","time","timeEnd","name","Date","now","emit","silly"],"mappings":"AAAA;;AACA,IAAIA,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAArC;;AACA,IAAIC,IAAI,GAAG,IAAID,YAAJ,EAAX;AACAE,MAAM,CAACC,OAAP,GAAiBF,IAAjB;AAEA,IAAIG,OAAO,GAAG,EAAd;AAEAC,OAAO,CAACC,EAAR,CAAW,MAAX,EAAmBC,IAAnB;AACAF,OAAO,CAACC,EAAR,CAAW,SAAX,EAAsBE,OAAtB;AAEAP,IAAI,CAACK,EAAL,CAAQ,MAAR,EAAgBC,IAAhB;AACAN,IAAI,CAACK,EAAL,CAAQ,SAAR,EAAmBE,OAAnB;;AAEA,SAASD,IAAT,CAAeE,IAAf,EAAqB;AACnBL,EAAAA,OAAO,CAACK,IAAD,CAAP,GAAgBC,IAAI,CAACC,GAAL,EAAhB;AACD;;AAED,SAASH,OAAT,CAAkBC,IAAlB,EAAwB;AACtB,MAAIA,IAAI,IAAIL,OAAZ,EAAqB;AACnBH,IAAAA,IAAI,CAACW,IAAL,CAAU,QAAV,EAAoBH,IAApB,EAA0BC,IAAI,CAACC,GAAL,KAAaP,OAAO,CAACK,IAAD,CAA9C;AACA,WAAOL,OAAO,CAACK,IAAD,CAAd;AACD,GAHD,MAGO;AACLX,IAAAA,GAAG,CAACe,KAAJ,CAAU,QAAV,EAAoB,wCAApB,EAA8DJ,IAA9D;AACD;AACF","sourcesContent":["'use strict'\nvar log = require('npmlog')\nvar EventEmitter = require('events').EventEmitter\nvar perf = new EventEmitter()\nmodule.exports = perf\n\nvar timings = {}\n\nprocess.on('time', time)\nprocess.on('timeEnd', timeEnd)\n\nperf.on('time', time)\nperf.on('timeEnd', timeEnd)\n\nfunction time (name) {\n  timings[name] = Date.now()\n}\n\nfunction timeEnd (name) {\n  if (name in timings) {\n    perf.emit('timing', name, Date.now() - timings[name])\n    delete timings[name]\n  } else {\n    log.silly('timing', \"Tried to end timer that doesn't exist:\", name)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}