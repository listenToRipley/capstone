{"ast":null,"code":"const mysql = require('mysql');\n\nconst pool = require('../../../sql/connection');\n\nconst {\n  handleSQLError\n} = require('../../../sql/error'); //GET\n\n\nconst shopListDetails = (req, res) => {\n  let sql = 'SELECT a.shopList, sLS.owner, sLS.shopListName, a.username AS pals, a.shopListRole, a.palReq, sLS.autoAdd, sLS.mergeStatus FROM shopListsSettings AS sLS JOIN access AS a ON a.shopList=sLS.shopListSetId WHERE a.active=1 AND sLS.active=1 AND a.username<>sLS.owner AND a.shopList= ? ORDER BY a.username';\n  sql = mysql.format(sql, [req.params.listId]);\n  pool.query(sql, (err, row) => {\n    if (err) return handleSQLError(res, err);\n    return res.json(row);\n  });\n};\n\nconst shopListCount = (req, res) => {\n  let sql = 'SELECT COUNT(item) FROM shoppingLists WHERE shopList= ?';\n  sql = mysql.format(sql, [req.params.listId]);\n  pool.query(sql, (err, row) => {\n    if (err) return handleSQLError(res, err);\n    return res.json(row);\n  });\n};\n\nconst thisShopList = (req, res) => {\n  let sql = 'SELECT * FROM shoppingLists WHERE activeItem=1 AND shopList= ? ORDER BY item ';\n  sql = mysql.format(sql, [req.params.listId]);\n  pool.query(sql, (err, row) => {\n    if (err) return handleSQLError(res, err);\n    return res.json(row);\n  });\n}; //POST\n\n\nconst addToShopList = (req, res) => {\n  const {\n    quantity,\n    measure,\n    item,\n    spoon\n  } = req.body;\n  const {\n    listId\n  } = req.params;\n  let sql = 'INSERT INTO shoppingLists (shopList, quantity, measId, item, spoonId) VALUES (?, ?, ?, ?, ?) ';\n  sql = mysql.format(sql, [listId, quantity, measure, item, spoon]);\n  pool.query(sql, (err, results) => {\n    if (err) return handleSQLError(res, err);\n    return res.json({\n      newItemId: results.insertId\n    });\n  });\n}; //PUT\n\n\nmodule.exports = {\n  shopListDetails,\n  shopListCount,\n  thisShopList,\n  addToShopList\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/controller/appFunc/shoppingLists/byList.js"],"names":["mysql","require","pool","handleSQLError","shopListDetails","req","res","sql","format","params","listId","query","err","row","json","shopListCount","thisShopList","addToShopList","quantity","measure","item","spoon","body","results","newItemId","insertId","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,yBAAD,CAApB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAqBF,OAAO,CAAC,oBAAD,CAAlC,C,CAEA;;;AACA,MAAMG,eAAe,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAEpC,MAAIC,GAAG,GAAC,6SAAR;AAEAA,EAAAA,GAAG,GAACP,KAAK,CAACQ,MAAN,CAAaD,GAAb,EAAkB,CAACF,GAAG,CAACI,MAAJ,CAAWC,MAAZ,CAAlB,CAAJ;AAEAR,EAAAA,IAAI,CAACS,KAAL,CAAWJ,GAAX,EAAgB,CAACK,GAAD,EAAMC,GAAN,KAAc;AAC5B,QAAGD,GAAH,EAAQ,OAAOT,cAAc,CAACG,GAAD,EAAMM,GAAN,CAArB;AAER,WAAON,GAAG,CAACQ,IAAJ,CAASD,GAAT,CAAP;AACD,GAJD;AAMD,CAZD;;AAcA,MAAME,aAAa,GAAG,CAACV,GAAD,EAAMC,GAAN,KAAc;AAElC,MAAIC,GAAG,GAAE,yDAAT;AAEAA,EAAAA,GAAG,GAACP,KAAK,CAACQ,MAAN,CAAaD,GAAb,EAAkB,CAACF,GAAG,CAACI,MAAJ,CAAWC,MAAZ,CAAlB,CAAJ;AAEAR,EAAAA,IAAI,CAACS,KAAL,CAAWJ,GAAX,EAAgB,CAACK,GAAD,EAAMC,GAAN,KAAc;AAC5B,QAAGD,GAAH,EAAQ,OAAOT,cAAc,CAACG,GAAD,EAAMM,GAAN,CAArB;AAER,WAAON,GAAG,CAACQ,IAAJ,CAASD,GAAT,CAAP;AACD,GAJD;AAMD,CAZD;;AAcA,MAAMG,YAAY,GAAG,CAACX,GAAD,EAAMC,GAAN,KAAc;AAEnC,MAAIC,GAAG,GAAG,+EAAV;AAEAA,EAAAA,GAAG,GAACP,KAAK,CAACQ,MAAN,CAAaD,GAAb,EAAiB,CAACF,GAAG,CAACI,MAAJ,CAAWC,MAAZ,CAAjB,CAAJ;AAEAR,EAAAA,IAAI,CAACS,KAAL,CAAWJ,GAAX,EAAgB,CAACK,GAAD,EAAMC,GAAN,KAAc;AAC5B,QAAGD,GAAH,EAAQ,OAAOT,cAAc,CAACG,GAAD,EAAMM,GAAN,CAArB;AACR,WAAON,GAAG,CAACQ,IAAJ,CAASD,GAAT,CAAP;AACD,GAHD;AAKC,CAXD,C,CAaA;;;AACA,MAAMI,aAAa,GAAG,CAACZ,GAAD,EAAMC,GAAN,KAAc;AAElC,QAAM;AAAEY,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA;AAA3B,MAAoChB,GAAG,CAACiB,IAA9C;AACA,QAAM;AAACZ,IAAAA;AAAD,MAAWL,GAAG,CAACI,MAArB;AAEA,MAAIF,GAAG,GAAG,+FAAV;AAEAA,EAAAA,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAaD,GAAb,EAAkB,CAACG,MAAD,EAASQ,QAAT,EAAmBC,OAAnB,EAA4BC,IAA5B,EAAkCC,KAAlC,CAAlB,CAAN;AACAnB,EAAAA,IAAI,CAACS,KAAL,CAAWJ,GAAX,EAAgB,CAACK,GAAD,EAAMW,OAAN,KAAkB;AAChC,QAAGX,GAAH,EAAQ,OAAOT,cAAc,CAACG,GAAD,EAAMM,GAAN,CAArB;AACR,WAAON,GAAG,CAACQ,IAAJ,CAAU;AAAEU,MAAAA,SAAS,EAAED,OAAO,CAACE;AAArB,KAAV,CAAP;AACD,GAHD;AAKD,CAbD,C,CAeA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfvB,EAAAA,eADe;AAEfW,EAAAA,aAFe;AAGfC,EAAAA,YAHe;AAIfC,EAAAA;AAJe,CAAjB","sourcesContent":["const mysql = require('mysql')\nconst pool = require('../../../sql/connection')\nconst { handleSQLError } = require('../../../sql/error')\n\n//GET\nconst shopListDetails = (req, res) => {\n\n  let sql='SELECT a.shopList, sLS.owner, sLS.shopListName, a.username AS pals, a.shopListRole, a.palReq, sLS.autoAdd, sLS.mergeStatus FROM shopListsSettings AS sLS JOIN access AS a ON a.shopList=sLS.shopListSetId WHERE a.active=1 AND sLS.active=1 AND a.username<>sLS.owner AND a.shopList= ? ORDER BY a.username'\n\n  sql=mysql.format(sql, [req.params.listId])\n\n  pool.query(sql, (err, row) => {\n    if(err) return handleSQLError(res, err)\n\n    return res.json(row);\n  })\n\n}\n\nconst shopListCount = (req, res) => {\n\n  let sql= 'SELECT COUNT(item) FROM shoppingLists WHERE shopList= ?'\n\n  sql=mysql.format(sql, [req.params.listId])\n\n  pool.query(sql, (err, row) => {\n    if(err) return handleSQLError(res, err)\n\n    return res.json(row)\n  })\n\n}\n\nconst thisShopList = (req, res) => {\n\nlet sql = 'SELECT * FROM shoppingLists WHERE activeItem=1 AND shopList= ? ORDER BY item '\n\nsql=mysql.format(sql,[req.params.listId])\n\npool.query(sql, (err, row) => {\n  if(err) return handleSQLError(res, err)\n  return res.json(row); \n})  \n\n}\n\n//POST\nconst addToShopList = (req, res) => {\n\n  const { quantity, measure, item, spoon} = req.body\n  const {listId} = req.params\n\n  let sql = 'INSERT INTO shoppingLists (shopList, quantity, measId, item, spoonId) VALUES (?, ?, ?, ?, ?) '\n  \n  sql = mysql.format(sql, [listId, quantity, measure, item, spoon])\n  pool.query(sql, (err, results) => {\n    if(err) return handleSQLError(res, err)\n    return res.json( { newItemId: results.insertId} )\n  })\n\n}\n\n//PUT\n\nmodule.exports = {\n  shopListDetails, \n  shopListCount,\n  thisShopList,\n  addToShopList\n}"]},"metadata":{},"sourceType":"script"}