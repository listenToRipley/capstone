{"ast":null,"code":"'use strict';\n\nvar semver = require('semver');\n\nvar supported = require('../../package.json').engines.node;\n\nvar knownBroken = '<6.2.0 || 9 <9.3.0';\n\nvar checkVersion = exports.checkVersion = function (version) {\n  var versionNoPrerelease = version.replace(/-.*$/, '');\n  return {\n    version: versionNoPrerelease,\n    broken: semver.satisfies(versionNoPrerelease, knownBroken),\n    unsupported: !semver.satisfies(versionNoPrerelease, supported)\n  };\n};\n\nexports.checkForBrokenNode = function () {\n  var nodejs = checkVersion(process.version);\n\n  if (nodejs.broken) {\n    console.error('ERROR: npm is known not to run on Node.js ' + process.version);\n    console.error(\"You'll need to upgrade to a newer Node.js version in order to use this\");\n    console.error('version of npm. You can find the latest version at https://nodejs.org/');\n    process.exit(1);\n  }\n};\n\nexports.checkForUnsupportedNode = function () {\n  var nodejs = checkVersion(process.version);\n\n  if (nodejs.unsupported) {\n    var log = require('npmlog');\n\n    log.warn('npm', 'npm does not support Node.js ' + process.version);\n    log.warn('npm', 'You should probably upgrade to a newer version of node as we');\n    log.warn('npm', \"can't make any promises that npm will work with this version.\");\n    log.warn('npm', 'You can find the latest version at https://nodejs.org/');\n  }\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/node_modules/npm/lib/utils/unsupported.js"],"names":["semver","require","supported","engines","node","knownBroken","checkVersion","exports","version","versionNoPrerelease","replace","broken","satisfies","unsupported","checkForBrokenNode","nodejs","process","console","error","exit","checkForUnsupportedNode","log","warn"],"mappings":"AAAA;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,oBAAD,CAAP,CAA8BE,OAA9B,CAAsCC,IAAtD;;AACA,IAAIC,WAAW,GAAG,oBAAlB;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAACD,YAAR,GAAuB,UAAUE,OAAV,EAAmB;AAC3D,MAAIC,mBAAmB,GAAGD,OAAO,CAACE,OAAR,CAAgB,MAAhB,EAAwB,EAAxB,CAA1B;AACA,SAAO;AACLF,IAAAA,OAAO,EAAEC,mBADJ;AAELE,IAAAA,MAAM,EAAEX,MAAM,CAACY,SAAP,CAAiBH,mBAAjB,EAAsCJ,WAAtC,CAFH;AAGLQ,IAAAA,WAAW,EAAE,CAACb,MAAM,CAACY,SAAP,CAAiBH,mBAAjB,EAAsCP,SAAtC;AAHT,GAAP;AAKD,CAPD;;AASAK,OAAO,CAACO,kBAAR,GAA6B,YAAY;AACvC,MAAIC,MAAM,GAAGT,YAAY,CAACU,OAAO,CAACR,OAAT,CAAzB;;AACA,MAAIO,MAAM,CAACJ,MAAX,EAAmB;AACjBM,IAAAA,OAAO,CAACC,KAAR,CAAc,+CAA+CF,OAAO,CAACR,OAArE;AACAS,IAAAA,OAAO,CAACC,KAAR,CAAc,wEAAd;AACAD,IAAAA,OAAO,CAACC,KAAR,CAAc,wEAAd;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAa,CAAb;AACD;AACF,CARD;;AAUAZ,OAAO,CAACa,uBAAR,GAAkC,YAAY;AAC5C,MAAIL,MAAM,GAAGT,YAAY,CAACU,OAAO,CAACR,OAAT,CAAzB;;AACA,MAAIO,MAAM,CAACF,WAAX,EAAwB;AACtB,QAAIQ,GAAG,GAAGpB,OAAO,CAAC,QAAD,CAAjB;;AACAoB,IAAAA,GAAG,CAACC,IAAJ,CAAS,KAAT,EAAgB,kCAAkCN,OAAO,CAACR,OAA1D;AACAa,IAAAA,GAAG,CAACC,IAAJ,CAAS,KAAT,EAAgB,8DAAhB;AACAD,IAAAA,GAAG,CAACC,IAAJ,CAAS,KAAT,EAAgB,+DAAhB;AACAD,IAAAA,GAAG,CAACC,IAAJ,CAAS,KAAT,EAAgB,wDAAhB;AACD;AACF,CATD","sourcesContent":["'use strict'\nvar semver = require('semver')\nvar supported = require('../../package.json').engines.node\nvar knownBroken = '<6.2.0 || 9 <9.3.0'\n\nvar checkVersion = exports.checkVersion = function (version) {\n  var versionNoPrerelease = version.replace(/-.*$/, '')\n  return {\n    version: versionNoPrerelease,\n    broken: semver.satisfies(versionNoPrerelease, knownBroken),\n    unsupported: !semver.satisfies(versionNoPrerelease, supported)\n  }\n}\n\nexports.checkForBrokenNode = function () {\n  var nodejs = checkVersion(process.version)\n  if (nodejs.broken) {\n    console.error('ERROR: npm is known not to run on Node.js ' + process.version)\n    console.error(\"You'll need to upgrade to a newer Node.js version in order to use this\")\n    console.error('version of npm. You can find the latest version at https://nodejs.org/')\n    process.exit(1)\n  }\n}\n\nexports.checkForUnsupportedNode = function () {\n  var nodejs = checkVersion(process.version)\n  if (nodejs.unsupported) {\n    var log = require('npmlog')\n    log.warn('npm', 'npm does not support Node.js ' + process.version)\n    log.warn('npm', 'You should probably upgrade to a newer version of node as we')\n    log.warn('npm', \"can't make any promises that npm will work with this version.\")\n    log.warn('npm', 'You can find the latest version at https://nodejs.org/')\n  }\n}\n"]},"metadata":{},"sourceType":"script"}