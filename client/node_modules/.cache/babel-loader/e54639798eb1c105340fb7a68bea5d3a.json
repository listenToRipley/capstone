{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/moonbox/Documents/capstone/pantrypal/client/src/Components/CurrentUser/Inbox/Inbox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport ShopReq from './ShopReq';\nimport PalReq from './PalReq';\nimport MergeReq from './MergeReq'; //needs to get added to NavBar or should this be notification in the top bar, bell Icon?\n//merge request\n//accept\n//decline \n//pal requests\n//accept request\n//decline requests\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '95%',\n    margin: theme.spacing(4)\n  },\n  paper: {\n    width: '90%',\n    marginLeft: theme.spacing(4),\n    marginBottom: theme.spacing(2)\n  },\n  title: {\n    padding: 5,\n    display: 'none',\n    justifyContent: 'center',\n    [theme.breakpoints.up('xs')]: {\n      display: 'block'\n    }\n  },\n  subtitle: {\n    padding: 20\n  },\n  inboxReq: {\n    marginLeft: theme.spacing(4),\n    alignItems: \"space-evenly\",\n    width: '100%'\n  },\n  reqBody: {\n    width: '100%',\n    marginBottom: theme.spacing(3),\n    padding: '25px'\n  },\n  table: {\n    minWidth: 650\n  }\n})); //this can be on login pull\n\nconst createPalData = (reqId, sender, pal, action) => {\n  return {\n    reqId,\n    sender,\n    pal,\n    action\n  };\n}; //do we want to include list owner on this? \n\n\nconst createShopData = (reqId, sender, quantity, items, unit, actions) => {\n  return {\n    reqId,\n    sender,\n    quantity,\n    items,\n    unit,\n    actions\n  };\n};\n\nconst createMergeData = (reqId, sender, pal, action) => {\n  return {\n    reqId,\n    sender,\n    pal,\n    action\n  };\n};\n\nconst mockPal = [createPalData(1, 'cheese', 'job', 'action'), createPalData(2, 'job', 'cheese', 'action'), createPalData(3, 'cheese', 'work', 'action'), createPalData(4, 'cheese', 'honey', 'action'), createPalData(5, 'cheese', 'hobby', 'action')];\nconst mockFood = [createShopData(1, \"sender\", 305, 'Cupcake', 3.7), createShopData(2, \"sender\", 452, 'Donut', 3.7), createShopData(3, \"sender\", 305, 'Eclair', 3.7), createShopData(4, \"sender\", 5221, 'Frozen yoghurt', 159), createShopData(5, \"sender\", 5, 'Gingerbread', 356), createShopData(6, \"sender\", 1, 'Honeycomb', 408), createShopData(7, \"sender\", 32, 'Ice cream sandwich', 237), createShopData(8, \"sender\", 66, 'Jelly Bean', 375), createShopData(9, \"sender\", 23, 'KitKat', 518), createShopData(10, \"sender\", 6565, 'Lollipop', 392), createShopData(11, \"sender\", 13.2, 'Marshmallow', 318), createShopData(12, \"sender\", 33, 'Nougat', 360), createShopData(13, \"sender\", 6666, 'Oreo', 437)];\nconst mockMerge = [createPalData(5, 'cheese', 'job', 'action'), createPalData(6, 'job', 'cheese', 'action'), createPalData(7, 'cheese', 'work', 'action'), createPalData(8, 'cheese', 'honey', 'action'), createPalData(9, 'cheese', 'hobby', 'action')];\n\nconst Inbox = props => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      classes: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h4\",\n        className: classes.title,\n        children: \"Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        component: \"main\",\n        direction: \"column\",\n        className: classes.inboxReq,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 11,\n          component: Card,\n          elevation: 2,\n          className: classes.reqBody,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h6\",\n            className: classes.subtitle,\n            children: \"Pal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: classes.table,\n              size: \"small\",\n              \"aria-lable\": \"pal request table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Req Id \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Sender \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Pal \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Actions \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: mockPal.map(data => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"data\",\n                    children: data.reqId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: data.sender\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: data.pal\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(PalReq, {\n                      reqId: data.reqId,\n                      sender: data.sender\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 19\n                  }, this)]\n                }, data.reqId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 11,\n          component: Card,\n          elevation: 4,\n          className: classes.reqBody,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h6\",\n            className: classes.subtitle,\n            children: \"Shopping\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: classes.table,\n              size: \"small\",\n              \"aria-lable\": \"pal request table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Req Id \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Sender\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Quantity \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Item \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Unit \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Actions \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: mockFood.map(data => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"data\",\n                    children: data.reqId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: data.sender\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: data.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: data.items\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: data.unit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: /*#__PURE__*/_jsxDEV(ShopReq, {\n                      reqId: data.reqId,\n                      sender: data.sender\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 19\n                  }, this)]\n                }, data.reqId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 11,\n          component: Card,\n          elevation: 4,\n          className: classes.reqBody,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h6\",\n            className: classes.subtitle,\n            children: \"Merge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: classes.table,\n              size: \"small\",\n              \"aria-lable\": \"pal request table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Req Id \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Sender \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Pal \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Actions \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: mockMerge.map(data => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"data\",\n                    children: data.reqId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: data.sender\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: data.pal\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(MergeReq, {\n                      reqId: data.reqId,\n                      sender: data.sender\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 19\n                  }, this)]\n                }, data.reqId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Inbox, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Inbox;\nexport default withStyles(useStyles)(Inbox);\n\nvar _c;\n\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/Components/CurrentUser/Inbox/Inbox.js"],"names":["React","makeStyles","withStyles","Paper","Typography","Card","Grid","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","ShopReq","PalReq","MergeReq","useStyles","theme","root","width","margin","spacing","paper","marginLeft","marginBottom","title","padding","display","justifyContent","breakpoints","up","subtitle","inboxReq","alignItems","reqBody","table","minWidth","createPalData","reqId","sender","pal","action","createShopData","quantity","items","unit","actions","createMergeData","mockPal","mockFood","mockMerge","Inbox","props","classes","map","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport ShopReq from './ShopReq';\nimport PalReq from './PalReq';\nimport MergeReq from './MergeReq'\n\n//needs to get added to NavBar or should this be notification in the top bar, bell Icon?\n\n    //merge request\n    //accept\n    //decline \n\n    //pal requests\n      //accept request\n      //decline requests\n\n      const useStyles = makeStyles((theme) => ({\n        root: {\n          width: '95%',\n          margin: theme.spacing(4),\n        },\n        paper: {\n          width: '90%',\n          marginLeft: theme.spacing(4),\n          marginBottom: theme.spacing(2),\n        },\n        title: {\n          padding: 5,\n          display: 'none',\n          justifyContent: 'center',\n          [theme.breakpoints.up('xs')]: {\n            display: 'block',\n          },\n        },\n        subtitle: {\n          padding: 20,\n        },\n        inboxReq: {\n          marginLeft: theme.spacing(4),\n          alignItems:\"space-evenly\",\n          width: '100%'\n        },\n        reqBody: {\n          width:'100%',\n          marginBottom: theme.spacing(3),\n          padding:'25px'\n        },\n        table: {\n          minWidth: 650,\n        },\n      }));\n  \n\n      //this can be on login pull\n    const createPalData = (reqId, sender, pal, action) => {\n      return {reqId, sender, pal, action}\n    }\n\n\n    //do we want to include list owner on this? \n    const createShopData = (reqId, sender, quantity, items, unit, actions) => {\n      return { reqId, sender ,quantity, items, unit, actions};\n    }\n\n    const createMergeData = (reqId, sender, pal, action) => {\n      return {reqId, sender, pal, action}\n    }\n\n    const mockPal = [\n      createPalData(1, 'cheese', 'job', 'action'),\n      createPalData(2, 'job', 'cheese', 'action'),\n      createPalData(3, 'cheese', 'work', 'action'),\n      createPalData(4, 'cheese', 'honey', 'action'),\n      createPalData(5, 'cheese', 'hobby', 'action'),\n    ]\n\n    const mockFood = [\n      createShopData(1 , \"sender\",305, 'Cupcake', 3.7),\n      createShopData(2 , \"sender\",452, 'Donut', 3.7),\n      createShopData(3 , \"sender\",305, 'Eclair', 3.7), \n      createShopData(4 , \"sender\",5221, 'Frozen yoghurt', 159),  \n      createShopData(5 , \"sender\",5, 'Gingerbread', 356),  \n      createShopData(6 , \"sender\",1, 'Honeycomb', 408), \n      createShopData(7 , \"sender\",32, 'Ice cream sandwich', 237), \n      createShopData(8 , \"sender\",66, 'Jelly Bean', 375), \n      createShopData(9 , \"sender\",23, 'KitKat', 518),  \n      createShopData(10, \"sender\" ,6565, 'Lollipop', 392),\n      createShopData(11, \"sender\" ,13.2, 'Marshmallow', 318),\n      createShopData(12, \"sender\" ,33, 'Nougat', 360),\n      createShopData(13, \"sender\" ,6666, 'Oreo', 437)\n    ];\n    \n\n\n    const mockMerge = [\n      createPalData(5, 'cheese', 'job', 'action'),\n      createPalData(6, 'job', 'cheese', 'action'),\n      createPalData(7, 'cheese', 'work', 'action'),\n      createPalData(8, 'cheese', 'honey', 'action'),\n      createPalData(9, 'cheese', 'hobby', 'action'),\n    ]\n\nconst Inbox = (props) => {\n  const classes = useStyles();\n\n  return (\n  <div className={classes.root}>\n\n    <Paper classes={classes.paper}>\n    <Typography \n        component=\"h1\"\n        variant=\"h4\"\n        className={classes.title}\n        >Requests</Typography>\n      <Grid\n      container\n      component=\"main\"\n      direction=\"column\"\n      className={classes.inboxReq}\n      >\n        <Grid\n        item\n        xs={11}\n        component={Card}\n        elevation={2}\n        className={classes.reqBody}>\n          <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          className={classes.subtitle}\n          >Pal</Typography>\n          <TableContainer>\n            <Table\n            className={classes.table}\n            size=\"small\"\n            aria-lable=\"pal request table\"\n            >\n            <TableHead>\n              <TableRow>\n                <TableCell>Req Id </TableCell>\n                <TableCell>Sender </TableCell>\n                <TableCell>Pal </TableCell>\n                <TableCell align=\"center\">Actions </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {mockPal.map((data) => (\n                <TableRow key={data.reqId}>\n                  <TableCell component=\"th\" scope=\"data\">\n                    {data.reqId}\n                  </TableCell>\n                  <TableCell align=\"left\" >{data.sender}</TableCell>\n                  <TableCell align=\"left\" >{data.pal}</TableCell>\n                  <TableCell align=\"center\" >\n                    <PalReq \n                    reqId={data.reqId} \n                    sender={data.sender}\n                  /></TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid\n        item\n        xs={11}\n        component={Card}\n        elevation={4}\n        className={classes.reqBody}>\n          <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          className={classes.subtitle}\n          >Shopping</Typography>\n                    <TableContainer>\n            <Table\n            className={classes.table}\n            size=\"small\"\n            aria-lable=\"pal request table\"\n            >\n            <TableHead>\n              <TableRow>\n                <TableCell>Req Id </TableCell>\n                <TableCell>Sender</TableCell>\n                <TableCell>Quantity </TableCell>\n                <TableCell>Item </TableCell>\n                <TableCell>Unit </TableCell>\n                <TableCell>Actions </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {mockFood.map((data) => (\n                <TableRow key={data.reqId}>\n                  <TableCell component=\"th\" scope=\"data\">\n                    {data.reqId}\n                  </TableCell>\n                  <TableCell align=\"left\" >{data.sender}</TableCell>\n                  <TableCell align=\"left\" >{data.quantity}</TableCell>\n                  <TableCell align=\"left\" >{data.items}</TableCell>\n                  <TableCell align=\"left\" >{data.unit}</TableCell>\n                  <TableCell align=\"right\" >\n                    <ShopReq \n                    reqId={data.reqId}\n                    sender={data.sender}\n                    /></TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid\n        item\n        xs={11}\n        component={Card}\n        elevation={4}\n        className={classes.reqBody}>\n          <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          className={classes.subtitle}\n          >Merge</Typography>\n          <TableContainer>\n            <Table\n            className={classes.table}\n            size=\"small\"\n            aria-lable=\"pal request table\"\n            >\n            <TableHead>\n              <TableRow>\n                <TableCell>Req Id </TableCell>\n                <TableCell>Sender </TableCell>\n                <TableCell>Pal </TableCell>\n                <TableCell align=\"center\">Actions </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {mockMerge.map((data) => (\n                <TableRow key={data.reqId}>\n                  <TableCell component=\"th\" scope=\"data\">\n                    {data.reqId}\n                  </TableCell>\n                  <TableCell align=\"left\" >{data.sender}</TableCell>\n                  <TableCell align=\"left\" >{data.pal}</TableCell>\n                  <TableCell align=\"center\" >\n                    <MergeReq\n                      reqId={data.reqId}\n                      sender={data.sender}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        </Grid>\n      </Paper>\n    \n  </div>\n  )\n\n}\n\nexport default withStyles(useStyles)(Inbox)"]},"metadata":{},"sourceType":"module"}