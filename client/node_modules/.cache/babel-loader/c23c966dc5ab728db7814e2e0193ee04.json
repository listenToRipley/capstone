{"ast":null,"code":"const mysql = require('mysql');\n\nconst pool = require('../../../sql/connection');\n\nconst {\n  handleSQLError\n} = require('../../../sql/error'); //PUT  OWNER OR CO-OWNER\n\n\nconst approveReq = (req, res, next) => {\n  const {\n    reqId\n  } = req.params;\n  let sql = 'UPDATE itemRequest SET active=0, approved=1 WHERE reqItId= ?';\n  sql = mysql.format(sql, [reqId]);\n  pool.query(sql, (err, row) => {\n    if (err) return handleSQLError(res, err);\n    next();\n  });\n};\n\nconst addToShopList = (req, res) => {\n  const {\n    listId,\n    reqId\n  } = req.params;\n  let sql = 'INSERT INTO shoppingLists (shopList, quantity, measId, item, spoonId, reqItem) VALUES (?, (SELECT quantity FROM itemRequest WHERE reqItId=?),(SELECT measId FROM itemRequest WHERE reqItId= ? ),(SELECT item FROM itemRequest WHERE reqItId= ?),(SELECT spoonId FROM itemRequest WHERE reqItId=?), ?)';\n  sql = mysql.format(sql, [listId, reqId, reqId, reqId, reqId, reqId]);\n  pool.query(sql, (err, results) => {\n    if (err) return handleSQLError(res, err);\n    return res.json({\n      shopEntryId: results.insertId\n    });\n  });\n};\n\nmodule.exports = {\n  approveReq,\n  addToShopList\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/controller/appFunc/shoppingLists/reqApproved.js"],"names":["mysql","require","pool","handleSQLError","approveReq","req","res","next","reqId","params","sql","format","query","err","row","addToShopList","listId","results","json","shopEntryId","insertId","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,yBAAD,CAApB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAqBF,OAAO,CAAC,oBAAD,CAAlC,C,CAEA;;;AACA,MAAMG,UAAU,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAErC,QAAM;AAACC,IAAAA;AAAD,MAAUH,GAAG,CAACI,MAApB;AAEA,MAAIC,GAAG,GAAC,8DAAR;AAEAA,EAAAA,GAAG,GAAEV,KAAK,CAACW,MAAN,CAAaD,GAAb,EAAkB,CAACF,KAAD,CAAlB,CAAL;AAEAN,EAAAA,IAAI,CAACU,KAAL,CAAWF,GAAX,EAAgB,CAACG,GAAD,EAAMC,GAAN,KAAc;AAC5B,QAAGD,GAAH,EAAQ,OAAOV,cAAc,CAACG,GAAD,EAAMO,GAAN,CAArB;AACRN,IAAAA,IAAI;AACL,GAHD;AAKD,CAbD;;AAeA,MAAMQ,aAAa,GAAG,CAACV,GAAD,EAAMC,GAAN,KAAc;AAElC,QAAM;AAACU,IAAAA,MAAD;AAAQR,IAAAA;AAAR,MAAiBH,GAAG,CAACI,MAA3B;AAEA,MAAIC,GAAG,GAAC,uSAAR;AAEAA,EAAAA,GAAG,GAAEV,KAAK,CAACW,MAAN,CAAaD,GAAb,EAAkB,CAACM,MAAD,EAASR,KAAT,EAAgBA,KAAhB,EAAuBA,KAAvB,EAA8BA,KAA9B,EAAqCA,KAArC,CAAlB,CAAL;AAEAN,EAAAA,IAAI,CAACU,KAAL,CAAWF,GAAX,EAAgB,CAACG,GAAD,EAAMI,OAAN,KAAkB;AAChC,QAAGJ,GAAH,EAAQ,OAAOV,cAAc,CAACG,GAAD,EAAMO,GAAN,CAArB;AACR,WAAOP,GAAG,CAACY,IAAJ,CAAU;AAAEC,MAAAA,WAAW,EAAEF,OAAO,CAACG;AAAvB,KAAV,CAAP;AACD,GAHD;AAKD,CAbD;;AAeAC,MAAM,CAACC,OAAP,GAAiB;AACflB,EAAAA,UADe;AAEfW,EAAAA;AAFe,CAAjB","sourcesContent":["const mysql = require('mysql')\nconst pool = require('../../../sql/connection')\nconst { handleSQLError } = require('../../../sql/error')\n\n//PUT  OWNER OR CO-OWNER\nconst approveReq = (req, res, next) => {\n\n  const {reqId} = req.params\n\n  let sql='UPDATE itemRequest SET active=0, approved=1 WHERE reqItId= ?'\n\n  sql= mysql.format(sql, [reqId])\n\n  pool.query(sql, (err, row) => {\n    if(err) return handleSQLError(res, err)\n    next()\n  })\n\n}\n\nconst addToShopList = (req, res) => {\n\n  const {listId,reqId} = req.params\n\n  let sql='INSERT INTO shoppingLists (shopList, quantity, measId, item, spoonId, reqItem) VALUES (?, (SELECT quantity FROM itemRequest WHERE reqItId=?),(SELECT measId FROM itemRequest WHERE reqItId= ? ),(SELECT item FROM itemRequest WHERE reqItId= ?),(SELECT spoonId FROM itemRequest WHERE reqItId=?), ?)'\n\n  sql= mysql.format(sql, [listId, reqId, reqId, reqId, reqId, reqId])\n\n  pool.query(sql, (err, results) => {\n    if(err) return handleSQLError(res, err)\n    return res.json( { shopEntryId: results.insertId} );\n  })\n\n}\n\nmodule.exports = { \n  approveReq,\n  addToShopList\n}"]},"metadata":{},"sourceType":"script"}