{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/moonbox/Documents/capstone/pantrypal/client/src/Components/ShoppingList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Actions from './ShopActions';\nimport { library, dom } from '@fortawesome/fontawesome-svg-core';\nimport { faShoppingBasket, faCartArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport { withStyles } from '@material-ui/styles';\nimport { getShopList } from '../redux/actions/userShopList';\nimport ShopListToolBar from './ShopListToolBar';\nimport ShopListHeaders from './ShopListHeaders';\nlibrary.add(faShoppingBasket, faCartArrowDown);\ndom.watch(); //IMPORTANT NOTE!!!\n//there should be three version of this \n//primary list \n//rename shop list \n//view items \n//start shopping  - end shopping \n//check items off \n//add items to pantry \n//add items \n//remove items\n//update items  \n//~~editor \n//view items \n//add items\n//update items \n//remove items\n//start shopping  - end shopping \n//check items off \n//~~requests\n//view items \n//request items \n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(4)\n  },\n  paper: {\n    width: '90%',\n    marginLeft: theme.spacing(4),\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n})); //quantity, measurement, item, spoonId\n\nconst createData = (quantity, items, unit, actions) => {\n  return {\n    quantity,\n    items,\n    unit,\n    actions\n  };\n}; //there is an issue with the drawer and page content. \n//need to add something to show role on table, are we going to need to write a query for that? \n//this will need to be replaced by content from the server \n\n\nconst rows = ['pull the props from the state' // createData( 305, 'Cupcake', 3.7),\n// createData( 452, 'Donut', 3.7),\n// createData( 305, 'Eclair', 3.7), \n// createData( 5221, 'Frozen yoghurt', 159),  \n// createData( 5, 'Gingerbread', 356),  \n// createData( 1, 'Honeycomb', 408), \n// createData( 32, 'Ice cream sandwich', 237), \n// createData( 66, 'Jelly Bean', 375), \n// createData( 23, 'KitKat', 518),  \n// createData( 6565, 'Lollipop', 392),\n// createData( 13.2, 'Marshmallow', 318),\n// createData( 33, 'Nougat', 360),\n// createData( 6666, 'Oreo', 437)\n]; //sorting functions  DON'T TOUCH \n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}; //sorting functions  DON'T TOUCH \n\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n};\n\nconst ShoppingList = props => {\n  _s();\n\n  console.log('props on shoppping list', props); // const {shopListId} = props.userDetails\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('item');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  useEffect(() => {\n    console.log('need to load the shop list first! ');\n    return getShopList(props.shopListId);\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      console.log('click', name);\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n    console.log('new page', newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    console.log('set pages?', setPage(0));\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(ShopListToolBar, {\n        numSelected: selected.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-labelledby\": \"your shopping list\",\n          \"aria-label\": \"shopping list\",\n          children: [/*#__PURE__*/_jsxDEV(ShopListHeaders, {\n            classes: classes,\n            numSelected: selected.length,\n            order: order,\n            orderBy: orderBy,\n            onSelectAllClick: handleSelectAllClick,\n            onRequestSort: handleRequestSort,\n            rowCount: rows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const isItemSelected = isSelected(row.name);\n              const labelId = `check box${index}`;\n              console.log('is item selected? ', isItemSelected);\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row.name),\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    padding: \"10\",\n                    checked: isItemSelected,\n                    inputProps: {\n                      'list item number ': labelId\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  align: \"center\",\n                  children: row.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: row.items\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.unit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: [row.actions, /*#__PURE__*/_jsxDEV(Actions, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 23\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 50],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShoppingList, \"bi88JZwimWYS32RVzOrZNhk93VY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ShoppingList;\nexport default withStyles(useStyles)(ShoppingList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingList\");","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/Components/ShoppingList.js"],"names":["React","useEffect","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Paper","Checkbox","IconButton","Tooltip","Actions","library","dom","faShoppingBasket","faCartArrowDown","withStyles","getShopList","ShopListToolBar","ShopListHeaders","add","watch","useStyles","theme","root","width","marginTop","spacing","paper","marginLeft","marginBottom","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","createData","quantity","items","unit","actions","rows","getComparator","order","orderBy","a","b","descendingComparator","stableSort","array","comparator","stabilizedThis","map","el","index","sort","ShoppingList","props","console","log","classes","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","shopListId","handleRequestSort","event","property","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","name","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","min","row","isItemSelected","labelId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useEffect} from 'react'\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Actions from './ShopActions'\nimport { library, dom } from '@fortawesome/fontawesome-svg-core';\nimport { faShoppingBasket, faCartArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport { withStyles } from '@material-ui/styles';\nimport { getShopList } from '../redux/actions/userShopList';\nimport ShopListToolBar from './ShopListToolBar'\nimport ShopListHeaders from './ShopListHeaders'\n\n\nlibrary.add(faShoppingBasket, faCartArrowDown) \ndom.watch()\n\n\n  //IMPORTANT NOTE!!!\n\n  //there should be three version of this \n\n  //primary list \n  //rename shop list \n  //view items \n  //start shopping  - end shopping \n    //check items off \n    //add items to pantry \n  //add items \n  //remove items\n  //update items  \n\n  //~~editor \n    //view items \n    //add items\n    //update items \n    //remove items\n    //start shopping  - end shopping \n    //check items off \n\n  //~~requests\n    //view items \n    //request items \n\n    const useStyles = makeStyles((theme) => ({\n      root: {\n        width: '100%',\n        marginTop: theme.spacing(4),\n      },\n      paper: {\n        width: '90%',\n        marginLeft: theme.spacing(4),\n        marginBottom: theme.spacing(2),\n      },\n      table: {\n        minWidth: 750,\n      },\n      visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n      }\n    }));\n\n\n    //quantity, measurement, item, spoonId\nconst createData = (quantity, items, unit, actions) => {\n  return { quantity, items, unit, actions};\n}\n\n//there is an issue with the drawer and page content. \n\n//need to add something to show role on table, are we going to need to write a query for that? \n\n//this will need to be replaced by content from the server \nconst rows = [ 'pull the props from the state'\n  // createData( 305, 'Cupcake', 3.7),\n  // createData( 452, 'Donut', 3.7),\n  // createData( 305, 'Eclair', 3.7), \n  // createData( 5221, 'Frozen yoghurt', 159),  \n  // createData( 5, 'Gingerbread', 356),  \n  // createData( 1, 'Honeycomb', 408), \n  // createData( 32, 'Ice cream sandwich', 237), \n  // createData( 66, 'Jelly Bean', 375), \n  // createData( 23, 'KitKat', 518),  \n  // createData( 6565, 'Lollipop', 392),\n  // createData( 13.2, 'Marshmallow', 318),\n  // createData( 33, 'Nougat', 360),\n  // createData( 6666, 'Oreo', 437)\n];\n\n//sorting functions  DON'T TOUCH \nconst getComparator =(order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n//sorting functions  DON'T TOUCH \nconst stableSort = (array, comparator) =>{\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\n\nconst ShoppingList = (props) =>  {\n  console.log('props on shoppping list', props)\n\n  // const {shopListId} = props.userDetails\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('item');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  useEffect(() => {\n    console.log('need to load the shop list first! ')\n    return getShopList(props.shopListId)\n  }, [])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n      console.log('click', name)\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n    console.log('new page', newPage)\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    console.log('set pages?', setPage(0))\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <ShopListToolBar  numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"your shopping list\"\n            aria-label=\"shopping list\"\n          >\n            <ShopListHeaders \n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `check box${index}`;\n                    console.log('is item selected? ', isItemSelected)\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          padding=\"10\"\n                          checked={isItemSelected}\n                          inputProps={{ 'list item number ': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" align=\"center\">\n                        {row.quantity}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.items}</TableCell>\n                      <TableCell align=\"right\">{row.unit}</TableCell>\n                      <TableCell align=\"left\">{row.actions}\n                        <Actions/>\n                        </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nexport default withStyles(useStyles)(ShoppingList)"]},"metadata":{},"sourceType":"module"}