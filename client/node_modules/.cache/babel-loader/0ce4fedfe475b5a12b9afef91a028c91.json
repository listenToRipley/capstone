{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { CREATE_NEW_USER, FORGOT_USERNAME, FORGOT_PASSWORD, FIND_PALS, ALL_USERS, ALL_ALLERGIES, ALL_DIETS, ADD_ALLERGIES, ADD_DIETS, UPDATE_PASSWORD, LOGIN, USER_PERSONAL_INFORMATION, USER_LOCATION, USER_BIRTHDAY, VIEW_USER_DISPLAY_PREFERENCES, VIEW_USERS_ALLERGIES, VIEW_USERS_DIETS, VIEW_USERS_DISLIKES, VIEW_USERS_LIKES, UPDATE_USERS_BIRTHDAY, UPDATE_USERS_EMAIL, UPDATE_USERS_LOCATION_INFO, UPDATE_USER_PHONE_NUMBER, ADD_USER_ALLERGY, REMOVE_USER_ALLERGY, ADD_USER_DIET, REMOVE_USER_DIET, ADD_USER_DISLIKE, REMOVE_USER_DISLIKE, ADD_USER_LIKE, REMOVE_USER_LIKE, UPDATE_USER_DISPLAY_PREFERENCES, UPDATE_USER_DISPLAY_PRIVATE, RESET_USER_DISPLAY_PREFERENCES_TO_DEFAULT, MY_PAL_LIST, MY_PALS_LIST, SEND_PAL_REQ, VIEW_PENDING_PAL_REQUESTS, VIEW_SENT_PAL_REQUESTS, ACCEPT_PAL, DECLINE_PAL, UPDATE_PAL_LIST_NAME, UPDATE_PALS_ROLES_ON_LISTS, MY_SHOPPING_LIST, PALS_SHOPPING_LIST, SHOPPING_LIST_DETAILS, SHOPPING_LIST_ITEM_COUNT, ITEMS_ON_SHOPPING_LIST, ADD_ITEM_TO_SHOPPING_LIST, UPDATE_ITEM_ON_SHOPPING_LIST, REMOVE_FROM_SHOPPING_LIST, MARK_OFF_ITEM_ON_SHOPPING_LIST, REQUEST_ITEM_COUNT, VIEW_REQUEST_ITEMS_ON_SHOPPING_LIST, VIEW_SENT_ITEM_REQUESTS, REQUEST_AN_ITEM, ACCEPT_REQUESTED_ITEM, DECLINE_REQUESTED_ITEM, AUTO_ADD_TO_PANTRY, UPDATE_SHOPPING_LIST_NAME, MY_PANTRY, PALS_PANTRY, PANTRY_DETAILED_INFO, PANTRY_ITEM_COUNT, PANTRY_ITEMS_LIST, PANTRY_ACCESS_DETAILS, ADD_TO_PANTRY, UPDATE_PANTRY_ITEM, REMOVE_ITEM_FROM_PANTRY, AUTO_ADD_SHOP_LIST, UPDATE_PANTRY_NAME, SEND_MERGE_REQ, ACCEPT_MERGE_REQUEST, DECLINE_MERGE_REQUEST, FETCH_FOOD } from './actions/types'; //add content for each action \n\nconst createUser = (state = [], action) => {\n  switch (action.type) {\n    case CREATE_NEW_USER:\n      {\n        return state;\n      }\n  }\n}; // const appForgot = (state = [], action) => {\n//   switch(action.type) {\n//     case FORGOT_USERNAME: {\n//       return action.payload\n//     }\n//     case FORGOT_PASSWORD: {\n//       return action.payload\n//   }\n// }\n// const findUsers = (state = [], action) => {\n//   switch(action.type) {\n//     case FIND_PALS: {\n//       return action.payload\n//     }\n//     case ALL_USERS: {\n//       return action.payload\n//     }\n//   }\n// }\n// const allergy = (state = [], action) => {\n//   switch(action.type) {\n//     case ALL_ALLERGIES: {\n//       return action.payload\n//     }\n//     case ADD_ALLERGIES: {\n//       return action.payload\n//     }\n//   }\n// }\n// const diets = (state = [], action) => {\n//   switch(action.type) {\n//     case ALL_ALLERGIES: {\n//       return action.payload\n//     }\n//     case ADD_DIETS: {\n//       return action.payload\n//     }\n//   }\n// }\n\n\nconst logIn = (state = [], action) => {\n  switch (action.type) {\n    case LOGIN:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nconst userInfo = (state = [], action) => {\n  switch (action.type) {\n    case UPDATE_PASSWORD:\n      return action.payload;\n\n    case USER_PERSONAL_INFORMATION:\n      return action.payload;\n\n    case USER_LOCATION:\n      return action.payload;\n\n    case USER_BIRTHDAY:\n      return action.payload;\n\n    case VIEW_USER_DISPLAY_PREFERENCES:\n      return action.payload;\n\n    case VIEW_USERS_ALLERGIES:\n      return action.payload;\n\n    case VIEW_USERS_DIETS:\n      return action.payload;\n\n    case VIEW_USERS_DISLIKES:\n      return action.payload;\n\n    case VIEW_USERS_LIKES:\n      return action.payload;\n  }\n};\n\nconst findFood = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_FOOD:\n      return action.payload;\n\n    default:\n      return state;\n    // should return the search items \n  } // this is only function of this, it will be used in a number of other locations. \n\n};\n\nconst myPantry = (state = [], action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst myShopList = (state = [], action) => {};\n\nconst myPalList = () => {};\n\nconst merge = () => {};\n\nconst palsPantry = (state = [], action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst palShopList = (state = [], action) => {};\n\nconst palsPalList = () => {};\n\nexport default combineReducers({\n  //import action options \n  // createUser,\n  logIn,\n  userInfo,\n  findFood // myPantry,\n  // myShopList,\n  // myPalList,\n  // merge,\n  // palsPantry,\n  // palShopList,\n  // palsPalList\n\n});","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/reducers.js"],"names":["combineReducers","CREATE_NEW_USER","FORGOT_USERNAME","FORGOT_PASSWORD","FIND_PALS","ALL_USERS","ALL_ALLERGIES","ALL_DIETS","ADD_ALLERGIES","ADD_DIETS","UPDATE_PASSWORD","LOGIN","USER_PERSONAL_INFORMATION","USER_LOCATION","USER_BIRTHDAY","VIEW_USER_DISPLAY_PREFERENCES","VIEW_USERS_ALLERGIES","VIEW_USERS_DIETS","VIEW_USERS_DISLIKES","VIEW_USERS_LIKES","UPDATE_USERS_BIRTHDAY","UPDATE_USERS_EMAIL","UPDATE_USERS_LOCATION_INFO","UPDATE_USER_PHONE_NUMBER","ADD_USER_ALLERGY","REMOVE_USER_ALLERGY","ADD_USER_DIET","REMOVE_USER_DIET","ADD_USER_DISLIKE","REMOVE_USER_DISLIKE","ADD_USER_LIKE","REMOVE_USER_LIKE","UPDATE_USER_DISPLAY_PREFERENCES","UPDATE_USER_DISPLAY_PRIVATE","RESET_USER_DISPLAY_PREFERENCES_TO_DEFAULT","MY_PAL_LIST","MY_PALS_LIST","SEND_PAL_REQ","VIEW_PENDING_PAL_REQUESTS","VIEW_SENT_PAL_REQUESTS","ACCEPT_PAL","DECLINE_PAL","UPDATE_PAL_LIST_NAME","UPDATE_PALS_ROLES_ON_LISTS","MY_SHOPPING_LIST","PALS_SHOPPING_LIST","SHOPPING_LIST_DETAILS","SHOPPING_LIST_ITEM_COUNT","ITEMS_ON_SHOPPING_LIST","ADD_ITEM_TO_SHOPPING_LIST","UPDATE_ITEM_ON_SHOPPING_LIST","REMOVE_FROM_SHOPPING_LIST","MARK_OFF_ITEM_ON_SHOPPING_LIST","REQUEST_ITEM_COUNT","VIEW_REQUEST_ITEMS_ON_SHOPPING_LIST","VIEW_SENT_ITEM_REQUESTS","REQUEST_AN_ITEM","ACCEPT_REQUESTED_ITEM","DECLINE_REQUESTED_ITEM","AUTO_ADD_TO_PANTRY","UPDATE_SHOPPING_LIST_NAME","MY_PANTRY","PALS_PANTRY","PANTRY_DETAILED_INFO","PANTRY_ITEM_COUNT","PANTRY_ITEMS_LIST","PANTRY_ACCESS_DETAILS","ADD_TO_PANTRY","UPDATE_PANTRY_ITEM","REMOVE_ITEM_FROM_PANTRY","AUTO_ADD_SHOP_LIST","UPDATE_PANTRY_NAME","SEND_MERGE_REQ","ACCEPT_MERGE_REQUEST","DECLINE_MERGE_REQUEST","FETCH_FOOD","createUser","state","action","type","logIn","payload","userInfo","findFood","myPantry","myShopList","myPalList","merge","palsPantry","palShopList","palsPalList"],"mappings":"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","sourcesContent":["import {combineReducers} from 'redux';\nimport {\n  CREATE_NEW_USER,\n  FORGOT_USERNAME,\n  FORGOT_PASSWORD,\n  FIND_PALS,\n  ALL_USERS,\n  ALL_ALLERGIES,\n  ALL_DIETS,\n  ADD_ALLERGIES,\n  ADD_DIETS,\n  UPDATE_PASSWORD,\n  LOGIN, \n  USER_PERSONAL_INFORMATION,\n  USER_LOCATION,\n  USER_BIRTHDAY,\n  VIEW_USER_DISPLAY_PREFERENCES,\n  VIEW_USERS_ALLERGIES,\n  VIEW_USERS_DIETS,\n  VIEW_USERS_DISLIKES,\n  VIEW_USERS_LIKES,\n  UPDATE_USERS_BIRTHDAY,\n  UPDATE_USERS_EMAIL,\n  UPDATE_USERS_LOCATION_INFO,\n  UPDATE_USER_PHONE_NUMBER,\n  ADD_USER_ALLERGY,\n  REMOVE_USER_ALLERGY,\n  ADD_USER_DIET,\n  REMOVE_USER_DIET,\n  ADD_USER_DISLIKE,\n  REMOVE_USER_DISLIKE,\n  ADD_USER_LIKE,\n  REMOVE_USER_LIKE,\n  UPDATE_USER_DISPLAY_PREFERENCES,\n  UPDATE_USER_DISPLAY_PRIVATE,\n  RESET_USER_DISPLAY_PREFERENCES_TO_DEFAULT,\n  MY_PAL_LIST,\n  MY_PALS_LIST,\n  SEND_PAL_REQ,\n  VIEW_PENDING_PAL_REQUESTS,\n  VIEW_SENT_PAL_REQUESTS,\n  ACCEPT_PAL,\n  DECLINE_PAL,\n  UPDATE_PAL_LIST_NAME,\n  UPDATE_PALS_ROLES_ON_LISTS,\n  MY_SHOPPING_LIST,\n  PALS_SHOPPING_LIST,\n  SHOPPING_LIST_DETAILS,\n  SHOPPING_LIST_ITEM_COUNT,\n  ITEMS_ON_SHOPPING_LIST,\n  ADD_ITEM_TO_SHOPPING_LIST,\n  UPDATE_ITEM_ON_SHOPPING_LIST,\n  REMOVE_FROM_SHOPPING_LIST,\n  MARK_OFF_ITEM_ON_SHOPPING_LIST,\n  REQUEST_ITEM_COUNT,\n  VIEW_REQUEST_ITEMS_ON_SHOPPING_LIST,\n  VIEW_SENT_ITEM_REQUESTS,\n  REQUEST_AN_ITEM,\n  ACCEPT_REQUESTED_ITEM,\n  DECLINE_REQUESTED_ITEM,\n  AUTO_ADD_TO_PANTRY,\n  UPDATE_SHOPPING_LIST_NAME,\n  MY_PANTRY,\n  PALS_PANTRY,\n  PANTRY_DETAILED_INFO,\n  PANTRY_ITEM_COUNT,\n  PANTRY_ITEMS_LIST,\n  PANTRY_ACCESS_DETAILS,\n  ADD_TO_PANTRY,\n  UPDATE_PANTRY_ITEM,\n  REMOVE_ITEM_FROM_PANTRY,\n  AUTO_ADD_SHOP_LIST,\n  UPDATE_PANTRY_NAME,\n  SEND_MERGE_REQ,\n  ACCEPT_MERGE_REQUEST, \n  DECLINE_MERGE_REQUEST,\n  FETCH_FOOD } from './actions/types'\n\n//add content for each action \nconst createUser = (state = [], action) => {\n  switch(action.type) {\n    case CREATE_NEW_USER: {\n      return state\n    }\n  }\n}\n\n// const appForgot = (state = [], action) => {\n//   switch(action.type) {\n//     case FORGOT_USERNAME: {\n//       return action.payload\n//     }\n//     case FORGOT_PASSWORD: {\n//       return action.payload\n//   }\n// }\n\n// const findUsers = (state = [], action) => {\n//   switch(action.type) {\n//     case FIND_PALS: {\n//       return action.payload\n//     }\n//     case ALL_USERS: {\n//       return action.payload\n//     }\n//   }\n// }\n\n// const allergy = (state = [], action) => {\n//   switch(action.type) {\n//     case ALL_ALLERGIES: {\n//       return action.payload\n//     }\n//     case ADD_ALLERGIES: {\n//       return action.payload\n//     }\n//   }\n// }\n\n// const diets = (state = [], action) => {\n//   switch(action.type) {\n//     case ALL_ALLERGIES: {\n//       return action.payload\n//     }\n//     case ADD_DIETS: {\n//       return action.payload\n//     }\n//   }\n// }\n\n\nconst logIn = (state = [], action) => {\n  switch(action.type) {\n    case LOGIN:\n      return action.payload\n    default: \n      return state\n  }  \n}\n\nconst userInfo = (state = [], action) => {\n  switch(action.type) {\n    case UPDATE_PASSWORD:\n      return action.payload\n    case USER_PERSONAL_INFORMATION: \n      return action.payload\n    case USER_LOCATION:\n      return action.payload\n    case USER_BIRTHDAY:\n      return action.payload\n    case VIEW_USER_DISPLAY_PREFERENCES: \n      return action.payload\n    case VIEW_USERS_ALLERGIES:\n      return action.payload\n    case VIEW_USERS_DIETS:\n        return action.payload\n    case VIEW_USERS_DISLIKES:\n          return action.payload\n    case VIEW_USERS_LIKES:\n            return action.payload\n  } \n}\n\n\nconst findFood = (state =[], action) => {\n  switch(action.type) {\n    case FETCH_FOOD:\n      return action.payload \n    default:\n      return state\n       // should return the search items \n  } // this is only function of this, it will be used in a number of other locations. \n}\n\nconst myPantry = (state=[], action) => {\n  switch(action.type) {\n    default: \n    return state\n  }\n}\n\nconst myShopList = (state=[], action) => {\n\n}\n\nconst myPalList = () => {\n\n}\n\nconst merge = () => {\n\n}\n\n\nconst palsPantry = (state=[], action) => {\n  switch(action.type) {\n    default: \n    return state\n  }\n}\n\nconst palShopList = (state=[], action) => {\n\n}\n\nconst palsPalList = () => {\n\n}\n\n\nexport default combineReducers({\n  //import action options \n  // createUser,\n  logIn,\n  userInfo,\n  findFood,\n  // myPantry,\n  // myShopList,\n  // myPalList,\n  // merge,\n  // palsPantry,\n  // palShopList,\n  // palsPalList\n})"]},"metadata":{},"sourceType":"module"}