{"ast":null,"code":"import { LOGIN } from './types';\nconst baseline = `http://localhost:4001/`;\nexport const login = (username, password) => async dispatch => {\n  let path = `postLogin/`;\n  let params = `${username.value}/${password.value}`;\n  let fullPath = `${baseline}${path}${params}`.trim();\n  console.log('the path : ', fullPath);\n\n  try {\n    let res = await fetch(fullPath, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }.then(res).then(res => res.json()).then(dispatch({\n      type: LOGIN,\n      payload: res.json()\n    })));\n  } catch (e) {\n    console.log('what is the error? ', e);\n  }\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/login.js"],"names":["LOGIN","baseline","login","username","password","dispatch","path","params","value","fullPath","trim","console","log","res","fetch","method","headers","then","json","type","payload","e"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,SAApB;AAEA,MAAMC,QAAQ,GAAI,wBAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAMC,QAAN,IAAkB;AAC7D,MAAIC,IAAI,GAAI,YAAZ;AACA,MAAIC,MAAM,GAAI,GAAEJ,QAAQ,CAACK,KAAM,IAAGJ,QAAQ,CAACI,KAAM,EAAjD;AACA,MAAIC,QAAQ,GAAI,GAAER,QAAS,GAAEK,IAAK,GAAEC,MAAO,EAA5B,CAA8BG,IAA9B,EAAf;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,QAA3B;;AAEE,MAAG;AAEC,QAAII,GAAG,GAAG,MAAMC,KAAK,CAACL,QAAD,EAAU;AAC7BM,MAAAA,MAAM,EAAE,KADqB;AAE7BC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFoB,MAO9BC,IAP8B,CAOzBJ,GAPyB,EAQ9BI,IAR8B,CAQzBJ,GAAG,IAAIA,GAAG,CAACK,IAAJ,EARkB,EAS9BD,IAT8B,CAU/BZ,QAAQ,CAAE;AACNc,MAAAA,IAAI,EAAEnB,KADA;AAENoB,MAAAA,OAAO,EAAEP,GAAG,CAACK,IAAJ;AAFH,KAAF,CAVuB,CAAV,CAArB;AAeH,GAjBD,CAkBA,OAAMG,CAAN,EAAQ;AACJV,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCS,CAAnC;AACH;AAEJ,CA7BM","sourcesContent":["import {LOGIN} from './types'\n\nconst baseline = `http://localhost:4001/`\n\nexport const login = (username, password) => async dispatch => {\n  let path = `postLogin/`\n  let params = `${username.value}/${password.value}`\n  let fullPath = `${baseline}${path}${params}`.trim()\n\n  console.log('the path : ', fullPath)\n\n    try{\n\n        let res = await fetch(fullPath,{\n          method: 'GET',\n          headers: {\n              'Content-Type': 'application/json'\n            }\n        }\n        \n        .then(res)\n        .then(res => res.json())\n        .then(\n        dispatch( {\n            type: LOGIN,\n            payload: res.json()\n        })\n      ))\n    }\n    catch(e){\n        console.log('what is the error? ', e)\n    }\n\n}"]},"metadata":{},"sourceType":"module"}