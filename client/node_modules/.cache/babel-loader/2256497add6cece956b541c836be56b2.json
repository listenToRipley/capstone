{"ast":null,"code":"import { UPDATE_ITEM_ON_PANTRY_LIST } from './types';\nexport const upPantryItem = (entryId, quantity, item, spoonId) => async dispatch => {\n  let path = `/postLogin/${user}/pantry/upItem/${entryId}`;\n  let intake = pass.token;\n  let updateThisEntry = JSON.stringify({\n    \"quantity\": quantity,\n    \"measure\": null,\n    \"item\": item,\n    \"spoon\": spoonId,\n    \"entryId\": entryId\n  });\n\n  try {\n    let res = await fetch(path, {\n      method: 'PUT',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        token: `${intake}`\n      },\n      body: updateThisEntry\n    });\n    let getResult = await res.json();\n    let result = { ...getResult\n    };\n    dispatch({\n      type: UPDATE_ITEM_ON_PANTRY_LIST,\n      payload: {\n        updatedEntry: {\n          \"quantity\": quantity,\n          \"measure\": null,\n          \"item\": item,\n          \"spoon\": itemId,\n          \"itemId\": result\n        }\n      }\n    });\n  } catch (e) {\n    return 'what the error the add to shop list? ', {\n      e\n    };\n  }\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/updatePantryItem.js"],"names":["UPDATE_ITEM_ON_PANTRY_LIST","upPantryItem","entryId","quantity","item","spoonId","dispatch","path","user","intake","pass","token","updateThisEntry","JSON","stringify","res","fetch","method","headers","Accept","body","getResult","json","result","type","payload","updatedEntry","itemId","e"],"mappings":"AAAA,SAAQA,0BAAR,QAAyC,SAAzC;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,OAAD,EAAUC,QAAV,EAAoBC,IAApB,EAA0BC,OAA1B,KAAsC,MAAMC,QAAN,IAAiB;AAEnF,MAAIC,IAAI,GAAI,cAAaC,IAAK,kBAAiBN,OAAQ,EAAvD;AACA,MAAIO,MAAM,GAAGC,IAAI,CAACC,KAAlB;AAEA,MAAIC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAe;AACnC,gBAAYX,QADuB;AAEnC,eAAU,IAFyB;AAGnC,YAAOC,IAH4B;AAInC,aAASC,OAJ0B;AAKnC,eAAWH;AALwB,GAAf,CAAtB;;AAQA,MAAG;AACC,QAAIa,GAAG,GAAG,MAAMC,KAAK,CAACT,IAAD,EAAO;AAC1BU,MAAAA,MAAM,EAAE,KADkB;AAE1BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AACqB,wBAAgB,kBADrC;AAEPR,QAAAA,KAAK,EAAG,GAAEF,MAAO;AAFV,OAFiB;AAM1BW,MAAAA,IAAI,EAAER;AANoB,KAAP,CAArB;AASA,QAAIS,SAAS,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAtB;AAEA,QAAIC,MAAM,GAAG,EAAC,GAAGF;AAAJ,KAAb;AAEAf,IAAAA,QAAQ,CAAC;AACPkB,MAAAA,IAAI,EAAExB,0BADC;AAELyB,MAAAA,OAAO,EAAE;AACPC,QAAAA,YAAY,EAAE;AAEZ,sBAAYvB,QAFA;AAGZ,qBAAU,IAHE;AAIZ,kBAAOC,IAJK;AAKZ,mBAASuB,MALG;AAMZ,oBAAUJ;AANE;AADP;AAFJ,KAAD,CAAR;AAcD,GA5BH,CA4BI,OAAOK,CAAP,EAAU;AACV,WAAO,yCAAyC;AAACA,MAAAA;AAAD,KAAhD;AACH;AAEA,CA7CM","sourcesContent":["import {UPDATE_ITEM_ON_PANTRY_LIST} from './types'\n\nexport const upPantryItem = (entryId, quantity, item, spoonId) => async dispatch =>{\n\nlet path = `/postLogin/${user}/pantry/upItem/${entryId}`\nlet intake = pass.token\n\nlet updateThisEntry = JSON.stringify({\n  \"quantity\": quantity, \n  \"measure\":null, \n  \"item\":item, \n  \"spoon\": spoonId,\n  \"entryId\": entryId\n})\n\ntry{\n    let res = await fetch(path, {\n      method: 'PUT',\n      headers: {\n        Accept: \"application/json\", \"Content-Type\": \"application/json\",\n        token: `${intake}`,\n      },\n      body: updateThisEntry\n    }\n    )\n    let getResult = await res.json()\n \n    let result = {...getResult}\n  \n    dispatch({\n      type: UPDATE_ITEM_ON_PANTRY_LIST,\n        payload: {\n          updatedEntry: {\n            \n            \"quantity\": quantity, \n            \"measure\":null, \n            \"item\":item, \n            \"spoon\": itemId,\n            \"itemId\": result\n            \n          }\n        }\n    })\n  } catch (e) {\n    return 'what the error the add to shop list? ', {e}\n}\n\n}"]},"metadata":{},"sourceType":"module"}