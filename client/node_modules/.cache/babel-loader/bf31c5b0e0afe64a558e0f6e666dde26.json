{"ast":null,"code":"import{connect}from'react-redux';import Pantry from'../Components/Pantry';import{findPantry as _findPantry}from'../redux/actions/userPantry';var mapStateToProps=function mapStateToProps(state){return{user:state.user,userDetails:state.userDetails,userPantry:state.userPantry,openFoodFinder:state.openFoodFinder,searchResults:state.searchResults};};var mapStateToDispatch=function mapStateToDispatch(dispatch){return{findPantry:function findPantry(listId,pass,username){return dispatch(_findPantry(listId,pass,username));}};};export default connect(mapStateToProps,mapStateToDispatch)(Pantry);","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/Containers/Pantry.js"],"names":["connect","Pantry","findPantry","mapStateToProps","state","user","userDetails","userPantry","openFoodFinder","searchResults","mapStateToDispatch","dispatch","listId","pass","username"],"mappings":"AAAA,OAAQA,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAAQC,UAAU,GAAVA,CAAAA,WAAR,KAAyB,6BAAzB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,IAAI,CAACD,KAAK,CAACC,IADN,CAELC,WAAW,CAAEF,KAAK,CAACE,WAFd,CAGLC,UAAU,CAAEH,KAAK,CAACG,UAHb,CAILC,cAAc,CAAEJ,KAAK,CAACI,cAJjB,CAKLC,aAAa,CAAEL,KAAK,CAACK,aALhB,CAAP,CAOD,CARD,CAUC,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CAExC,MAAO,CACLT,UAAU,CAAE,oBAACU,MAAD,CAASC,IAAT,CAAeC,QAAf,QAA4BH,CAAAA,QAAQ,CAACT,WAAU,CAACU,MAAD,CAASC,IAAT,CAAeC,QAAf,CAAX,CAApC,EADP,CAAP,CAGA,CALD,CAOA,cAAed,CAAAA,OAAO,CAACG,eAAD,CAAkBO,kBAAlB,CAAP,CAA6CT,MAA7C,CAAf","sourcesContent":["import {connect} from 'react-redux'\nimport Pantry from '../Components/Pantry'\nimport {findPantry} from '../redux/actions/userPantry'\n\nconst mapStateToProps = (state) => {\n  return {\n    user:state.user,\n    userDetails: state.userDetails,\n    userPantry: state.userPantry,\n    openFoodFinder: state.openFoodFinder,\n    searchResults: state.searchResults\n  }\n}\n\n const mapStateToDispatch = (dispatch) => {\n\n  return {\n    findPantry: (listId, pass, username) => dispatch(findPantry(listId, pass, username))\n  }\n }\n\n export default connect(mapStateToProps, mapStateToDispatch)(Pantry)"]},"metadata":{},"sourceType":"module"}