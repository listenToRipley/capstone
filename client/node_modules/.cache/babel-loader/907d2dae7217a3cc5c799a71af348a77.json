{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nclass ReceiveBuffer {\n  constructor(size = 4096) {\n    this._buffer = Buffer.allocUnsafe(size);\n    this._offset = 0;\n    this._originalSize = size;\n  }\n\n  get length() {\n    return this._offset;\n  }\n\n  append(data) {\n    if (!Buffer.isBuffer(data)) {\n      throw new Error('Attempted to append a non-buffer instance to ReceiveBuffer.');\n    }\n\n    if (this._offset + data.length >= this._buffer.length) {\n      const tmp = this._buffer;\n      this._buffer = Buffer.allocUnsafe(Math.max(this._buffer.length + this._originalSize, this._buffer.length + data.length));\n      tmp.copy(this._buffer);\n    }\n\n    data.copy(this._buffer, this._offset);\n    return this._offset += data.length;\n  }\n\n  peek(length) {\n    if (length > this._offset) {\n      throw new Error('Attempted to read beyond the bounds of the managed internal data.');\n    }\n\n    return this._buffer.slice(0, length);\n  }\n\n  get(length) {\n    if (length > this._offset) {\n      throw new Error('Attempted to read beyond the bounds of the managed internal data.');\n    }\n\n    const value = Buffer.allocUnsafe(length);\n\n    this._buffer.slice(0, length).copy(value);\n\n    this._buffer.copyWithin(0, length, length + this._offset - length);\n\n    this._offset -= length;\n    return value;\n  }\n\n}\n\nexports.ReceiveBuffer = ReceiveBuffer;","map":{"version":3,"sources":["../../src/common/receivebuffer.ts"],"names":[],"mappings":";;;;;;AAAA,MAAM,aAAN,CAAmB;AAKjB,EAAA,WAAA,CAAY,IAAA,GAAe,IAA3B,EAA+B;AAC7B,SAAK,OAAL,GAAe,MAAM,CAAC,WAAP,CAAmB,IAAnB,CAAf;AACA,SAAK,OAAL,GAAe,CAAf;AACA,SAAK,aAAL,GAAqB,IAArB;AACD;;AAED,MAAI,MAAJ,GAAU;AACR,WAAO,KAAK,OAAZ;AACD;;AAED,EAAA,MAAM,CAAC,IAAD,EAAa;AACjB,QAAI,CAAC,MAAM,CAAC,QAAP,CAAgB,IAAhB,CAAL,EAA4B;AAC1B,YAAM,IAAI,KAAJ,CACJ,6DADI,CAAN;AAGD;;AAED,QAAI,KAAK,OAAL,GAAe,IAAI,CAAC,MAApB,IAA8B,KAAK,OAAL,CAAa,MAA/C,EAAuD;AACrD,YAAM,GAAG,GAAG,KAAK,OAAjB;AACA,WAAK,OAAL,GAAe,MAAM,CAAC,WAAP,CACb,IAAI,CAAC,GAAL,CACE,KAAK,OAAL,CAAa,MAAb,GAAsB,KAAK,aAD7B,EAEE,KAAK,OAAL,CAAa,MAAb,GAAsB,IAAI,CAAC,MAF7B,CADa,CAAf;AAMA,MAAA,GAAG,CAAC,IAAJ,CAAS,KAAK,OAAd;AACD;;AAED,IAAA,IAAI,CAAC,IAAL,CAAU,KAAK,OAAf,EAAwB,KAAK,OAA7B;AACA,WAAQ,KAAK,OAAL,IAAgB,IAAI,CAAC,MAA7B;AACD;;AAED,EAAA,IAAI,CAAC,MAAD,EAAe;AACjB,QAAI,MAAM,GAAG,KAAK,OAAlB,EAA2B;AACzB,YAAM,IAAI,KAAJ,CACJ,mEADI,CAAN;AAGD;;AACD,WAAO,KAAK,OAAL,CAAa,KAAb,CAAmB,CAAnB,EAAsB,MAAtB,CAAP;AACD;;AAED,EAAA,GAAG,CAAC,MAAD,EAAe;AAChB,QAAI,MAAM,GAAG,KAAK,OAAlB,EAA2B;AACzB,YAAM,IAAI,KAAJ,CACJ,mEADI,CAAN;AAGD;;AAED,UAAM,KAAK,GAAG,MAAM,CAAC,WAAP,CAAmB,MAAnB,CAAd;;AACA,SAAK,OAAL,CAAa,KAAb,CAAmB,CAAnB,EAAsB,MAAtB,EAA8B,IAA9B,CAAmC,KAAnC;;AACA,SAAK,OAAL,CAAa,UAAb,CAAwB,CAAxB,EAA2B,MAA3B,EAAmC,MAAM,GAAG,KAAK,OAAd,GAAwB,MAA3D;;AACA,SAAK,OAAL,IAAgB,MAAhB;AAEA,WAAO,KAAP;AACD;;AA3DgB;;AA8DV,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ReceiveBuffer {\n    constructor(size = 4096) {\n        this._buffer = Buffer.allocUnsafe(size);\n        this._offset = 0;\n        this._originalSize = size;\n    }\n    get length() {\n        return this._offset;\n    }\n    append(data) {\n        if (!Buffer.isBuffer(data)) {\n            throw new Error('Attempted to append a non-buffer instance to ReceiveBuffer.');\n        }\n        if (this._offset + data.length >= this._buffer.length) {\n            const tmp = this._buffer;\n            this._buffer = Buffer.allocUnsafe(Math.max(this._buffer.length + this._originalSize, this._buffer.length + data.length));\n            tmp.copy(this._buffer);\n        }\n        data.copy(this._buffer, this._offset);\n        return (this._offset += data.length);\n    }\n    peek(length) {\n        if (length > this._offset) {\n            throw new Error('Attempted to read beyond the bounds of the managed internal data.');\n        }\n        return this._buffer.slice(0, length);\n    }\n    get(length) {\n        if (length > this._offset) {\n            throw new Error('Attempted to read beyond the bounds of the managed internal data.');\n        }\n        const value = Buffer.allocUnsafe(length);\n        this._buffer.slice(0, length).copy(value);\n        this._buffer.copyWithin(0, length, length + this._offset - length);\n        this._offset -= length;\n        return value;\n    }\n}\nexports.ReceiveBuffer = ReceiveBuffer;\n//# sourceMappingURL=receivebuffer.js.map"]},"metadata":{},"sourceType":"script"}