{"ast":null,"code":"import { FIND_FOOD } from './types';\nexport const findFood = input => async dispatch => {\n  console.log('what is the input you are getting?', input);\n  let path = `https://api.spoonacular.com/food/products/search?query=${input}&number=10&apiKey=${SPOON_API_KEY}`;\n\n  try {\n    let res = await fetch(path, {\n      method: 'GET',\n      header: {}\n    });\n    let result = await res.json();\n    console.log('the results is :', result);\n    let products;\n    dispatch({\n      type: FIND_FOOD,\n      payload: {\n        searchResults: [...result]\n      }\n    });\n  } catch (e) {\n    return 'what is the error ', {\n      e\n    };\n  }\n};","map":{"version":3,"sources":["/Users/moonbox/Documents/capstone/pantrypal/client/src/redux/actions/findFood.js"],"names":["FIND_FOOD","findFood","input","dispatch","console","log","path","SPOON_API_KEY","res","fetch","method","header","result","json","products","type","payload","searchResults","e"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,SAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAY,MAAMC,QAAN,IAAkB;AAEpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDH,KAAlD;AAEA,MAAII,IAAI,GAAI,0DAAyDJ,KAAM,qBAAoBK,aAAc,EAA7G;;AAEA,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAACH,IAAD,EAAO;AAC1BI,MAAAA,MAAM,EAAE,KADkB;AAE1BC,MAAAA,MAAM,EAAE;AAFkB,KAAP,CAArB;AAMA,QAAIC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCO,MAAhC;AACA,QAAIE,QAAJ;AACEX,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEf,SADD;AAELgB,MAAAA,OAAO,EAAE;AAEPC,QAAAA,aAAa,EAAE,CAAC,GAAGL,MAAJ;AAFR;AAFJ,KAAD,CAAR;AAQH,GAlBD,CAmBA,OAAMM,CAAN,EAAS;AACP,WAAO,sBAAsB;AAACA,MAAAA;AAAD,KAA7B;AACD;AACF,CA5BM","sourcesContent":["import {FIND_FOOD} from './types'\n\nexport const findFood = (input)  => async dispatch => {\n\n  console.log('what is the input you are getting?', input)\n\n  let path = `https://api.spoonacular.com/food/products/search?query=${input}&number=10&apiKey=${SPOON_API_KEY}`\n\n  try {\n    let res = await fetch(path, {\n      method: 'GET',\n      header: {\n\n      }\n    })\n    let result = await res.json()\n    console.log('the results is :', result)\n    let products\n      dispatch({ \n          type: FIND_FOOD,\n          payload: {\n            \n            searchResults: [...result]\n  \n          }\n       })\n  }\n  catch(e) {\n    return 'what is the error ', {e}\n  }\n}\n"]},"metadata":{},"sourceType":"module"}